/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
	"time"
)

// checks if the CreateOrUpdatePuupeeDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdatePuupeeDto{}

// CreateOrUpdatePuupeeDto struct for CreateOrUpdatePuupeeDto
type CreateOrUpdatePuupeeDto struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Title NullableString `json:"title,omitempty"`
	IsHidden *bool `json:"isHidden,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Text NullableString `json:"text,omitempty"`
	Content NullableString `json:"content,omitempty"`
	Format NullableString `json:"format,omitempty"`
	Password NullableString `json:"password,omitempty"`
	ParentId NullableString `json:"parentId,omitempty"`
	Key NullableString `json:"key,omitempty"`
	Md5 NullableString `json:"md5,omitempty"`
	SliceMd5 NullableString `json:"sliceMd5,omitempty"`
	RapidCode NullableString `json:"rapidCode,omitempty"`
	ContentType NullableString `json:"contentType,omitempty"`
	Type NullableString `json:"type,omitempty"`
	DisplayStyle NullableString `json:"displayStyle,omitempty"`
	Extension NullableString `json:"extension,omitempty"`
	StorageClass NullableString `json:"storageClass,omitempty"`
	StorageObjectCreatedAt NullableTime `json:"storageObjectCreatedAt,omitempty"`
	StorageObjectUpdatedAt NullableTime `json:"storageObjectUpdatedAt,omitempty"`
	SyncVersion *int64 `json:"syncVersion,omitempty"`
	IsDeleted *bool `json:"isDeleted,omitempty"`
	DeletionTime NullableTime `json:"deletionTime,omitempty"`
	CreationTime *time.Time `json:"creationTime,omitempty"`
	LastModificationTime NullableTime `json:"lastModificationTime,omitempty"`
	Priority NullableInt32 `json:"priority,omitempty"`
	StartAt NullableTime `json:"startAt,omitempty"`
	EndAt NullableTime `json:"endAt,omitempty"`
	NotifyAt NullableTime `json:"notifyAt,omitempty"`
	NotifyTimingType NullableString `json:"notifyTimingType,omitempty"`
	NotifyTimingUnit NullableString `json:"notifyTimingUnit,omitempty"`
	NotifyTimingValue NullableInt32 `json:"notifyTimingValue,omitempty"`
	Repeat NullableString `json:"repeat,omitempty"`
	RepeatOffAt NullableTime `json:"repeatOffAt,omitempty"`
	RepeatOffTimes NullableInt32 `json:"repeatOffTimes,omitempty"`
	Repetitions NullableInt32 `json:"repetitions,omitempty"`
	IsDone *bool `json:"isDone,omitempty"`
	DoneAt NullableTime `json:"doneAt,omitempty"`
	CreatorId NullableString `json:"creatorId,omitempty"`
	LastModifierId NullableString `json:"lastModifierId,omitempty"`
	DeleterId NullableString `json:"deleterId,omitempty"`
	Tagging NullableString `json:"tagging,omitempty"`
	Url NullableString `json:"url,omitempty"`
	Size *int64 `json:"size,omitempty"`
	LastModifierDeviceToken NullableString `json:"lastModifierDeviceToken,omitempty"`
	LastModifierDevice NullableString `json:"lastModifierDevice,omitempty"`
	AppName NullableString `json:"appName,omitempty"`
	PushToUser *bool `json:"pushToUser,omitempty"`
	SortIndex *int32 `json:"sortIndex,omitempty"`
}

// NewCreateOrUpdatePuupeeDto instantiates a new CreateOrUpdatePuupeeDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdatePuupeeDto(id string, name string) *CreateOrUpdatePuupeeDto {
	this := CreateOrUpdatePuupeeDto{}
	this.Id = id
	this.Name = name
	return &this
}

// NewCreateOrUpdatePuupeeDtoWithDefaults instantiates a new CreateOrUpdatePuupeeDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdatePuupeeDtoWithDefaults() *CreateOrUpdatePuupeeDto {
	this := CreateOrUpdatePuupeeDto{}
	return &this
}

// GetId returns the Id field value
func (o *CreateOrUpdatePuupeeDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateOrUpdatePuupeeDto) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CreateOrUpdatePuupeeDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrUpdatePuupeeDto) SetName(v string) {
	o.Name = v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *CreateOrUpdatePuupeeDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetTitle() {
	o.Title.Unset()
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise.
func (o *CreateOrUpdatePuupeeDto) GetIsHidden() bool {
	if o == nil || IsNil(o.IsHidden) {
		var ret bool
		return ret
	}
	return *o.IsHidden
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetIsHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHidden) {
		return nil, false
	}
	return o.IsHidden, true
}

// HasIsHidden returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasIsHidden() bool {
	if o != nil && !IsNil(o.IsHidden) {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given bool and assigns it to the IsHidden field.
func (o *CreateOrUpdatePuupeeDto) SetIsHidden(v bool) {
	o.IsHidden = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateOrUpdatePuupeeDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetDescription() {
	o.Description.Unset()
}

// GetText returns the Text field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetText() string {
	if o == nil || IsNil(o.Text.Get()) {
		var ret string
		return ret
	}
	return *o.Text.Get()
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Text.Get(), o.Text.IsSet()
}

// HasText returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasText() bool {
	if o != nil && o.Text.IsSet() {
		return true
	}

	return false
}

// SetText gets a reference to the given NullableString and assigns it to the Text field.
func (o *CreateOrUpdatePuupeeDto) SetText(v string) {
	o.Text.Set(&v)
}
// SetTextNil sets the value for Text to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetTextNil() {
	o.Text.Set(nil)
}

// UnsetText ensures that no value is present for Text, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetText() {
	o.Text.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetContent() string {
	if o == nil || IsNil(o.Content.Get()) {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given NullableString and assigns it to the Content field.
func (o *CreateOrUpdatePuupeeDto) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetContent() {
	o.Content.Unset()
}

// GetFormat returns the Format field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetFormat() string {
	if o == nil || IsNil(o.Format.Get()) {
		var ret string
		return ret
	}
	return *o.Format.Get()
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Format.Get(), o.Format.IsSet()
}

// HasFormat returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasFormat() bool {
	if o != nil && o.Format.IsSet() {
		return true
	}

	return false
}

// SetFormat gets a reference to the given NullableString and assigns it to the Format field.
func (o *CreateOrUpdatePuupeeDto) SetFormat(v string) {
	o.Format.Set(&v)
}
// SetFormatNil sets the value for Format to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetFormatNil() {
	o.Format.Set(nil)
}

// UnsetFormat ensures that no value is present for Format, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetFormat() {
	o.Format.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *CreateOrUpdatePuupeeDto) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetPassword() {
	o.Password.Unset()
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetParentId() string {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *CreateOrUpdatePuupeeDto) SetParentId(v string) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetParentId() {
	o.ParentId.Unset()
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetKey() string {
	if o == nil || IsNil(o.Key.Get()) {
		var ret string
		return ret
	}
	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// HasKey returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasKey() bool {
	if o != nil && o.Key.IsSet() {
		return true
	}

	return false
}

// SetKey gets a reference to the given NullableString and assigns it to the Key field.
func (o *CreateOrUpdatePuupeeDto) SetKey(v string) {
	o.Key.Set(&v)
}
// SetKeyNil sets the value for Key to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetKeyNil() {
	o.Key.Set(nil)
}

// UnsetKey ensures that no value is present for Key, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetKey() {
	o.Key.Unset()
}

// GetMd5 returns the Md5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetMd5() string {
	if o == nil || IsNil(o.Md5.Get()) {
		var ret string
		return ret
	}
	return *o.Md5.Get()
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetMd5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Md5.Get(), o.Md5.IsSet()
}

// HasMd5 returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasMd5() bool {
	if o != nil && o.Md5.IsSet() {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given NullableString and assigns it to the Md5 field.
func (o *CreateOrUpdatePuupeeDto) SetMd5(v string) {
	o.Md5.Set(&v)
}
// SetMd5Nil sets the value for Md5 to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetMd5Nil() {
	o.Md5.Set(nil)
}

// UnsetMd5 ensures that no value is present for Md5, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetMd5() {
	o.Md5.Unset()
}

// GetSliceMd5 returns the SliceMd5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetSliceMd5() string {
	if o == nil || IsNil(o.SliceMd5.Get()) {
		var ret string
		return ret
	}
	return *o.SliceMd5.Get()
}

// GetSliceMd5Ok returns a tuple with the SliceMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetSliceMd5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SliceMd5.Get(), o.SliceMd5.IsSet()
}

// HasSliceMd5 returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasSliceMd5() bool {
	if o != nil && o.SliceMd5.IsSet() {
		return true
	}

	return false
}

// SetSliceMd5 gets a reference to the given NullableString and assigns it to the SliceMd5 field.
func (o *CreateOrUpdatePuupeeDto) SetSliceMd5(v string) {
	o.SliceMd5.Set(&v)
}
// SetSliceMd5Nil sets the value for SliceMd5 to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetSliceMd5Nil() {
	o.SliceMd5.Set(nil)
}

// UnsetSliceMd5 ensures that no value is present for SliceMd5, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetSliceMd5() {
	o.SliceMd5.Unset()
}

// GetRapidCode returns the RapidCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetRapidCode() string {
	if o == nil || IsNil(o.RapidCode.Get()) {
		var ret string
		return ret
	}
	return *o.RapidCode.Get()
}

// GetRapidCodeOk returns a tuple with the RapidCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetRapidCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RapidCode.Get(), o.RapidCode.IsSet()
}

// HasRapidCode returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasRapidCode() bool {
	if o != nil && o.RapidCode.IsSet() {
		return true
	}

	return false
}

// SetRapidCode gets a reference to the given NullableString and assigns it to the RapidCode field.
func (o *CreateOrUpdatePuupeeDto) SetRapidCode(v string) {
	o.RapidCode.Set(&v)
}
// SetRapidCodeNil sets the value for RapidCode to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetRapidCodeNil() {
	o.RapidCode.Set(nil)
}

// UnsetRapidCode ensures that no value is present for RapidCode, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetRapidCode() {
	o.RapidCode.Unset()
}

// GetContentType returns the ContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetContentType() string {
	if o == nil || IsNil(o.ContentType.Get()) {
		var ret string
		return ret
	}
	return *o.ContentType.Get()
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentType.Get(), o.ContentType.IsSet()
}

// HasContentType returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasContentType() bool {
	if o != nil && o.ContentType.IsSet() {
		return true
	}

	return false
}

// SetContentType gets a reference to the given NullableString and assigns it to the ContentType field.
func (o *CreateOrUpdatePuupeeDto) SetContentType(v string) {
	o.ContentType.Set(&v)
}
// SetContentTypeNil sets the value for ContentType to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetContentTypeNil() {
	o.ContentType.Set(nil)
}

// UnsetContentType ensures that no value is present for ContentType, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetContentType() {
	o.ContentType.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *CreateOrUpdatePuupeeDto) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetType() {
	o.Type.Unset()
}

// GetDisplayStyle returns the DisplayStyle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetDisplayStyle() string {
	if o == nil || IsNil(o.DisplayStyle.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayStyle.Get()
}

// GetDisplayStyleOk returns a tuple with the DisplayStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetDisplayStyleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayStyle.Get(), o.DisplayStyle.IsSet()
}

// HasDisplayStyle returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasDisplayStyle() bool {
	if o != nil && o.DisplayStyle.IsSet() {
		return true
	}

	return false
}

// SetDisplayStyle gets a reference to the given NullableString and assigns it to the DisplayStyle field.
func (o *CreateOrUpdatePuupeeDto) SetDisplayStyle(v string) {
	o.DisplayStyle.Set(&v)
}
// SetDisplayStyleNil sets the value for DisplayStyle to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetDisplayStyleNil() {
	o.DisplayStyle.Set(nil)
}

// UnsetDisplayStyle ensures that no value is present for DisplayStyle, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetDisplayStyle() {
	o.DisplayStyle.Unset()
}

// GetExtension returns the Extension field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetExtension() string {
	if o == nil || IsNil(o.Extension.Get()) {
		var ret string
		return ret
	}
	return *o.Extension.Get()
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetExtensionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Extension.Get(), o.Extension.IsSet()
}

// HasExtension returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasExtension() bool {
	if o != nil && o.Extension.IsSet() {
		return true
	}

	return false
}

// SetExtension gets a reference to the given NullableString and assigns it to the Extension field.
func (o *CreateOrUpdatePuupeeDto) SetExtension(v string) {
	o.Extension.Set(&v)
}
// SetExtensionNil sets the value for Extension to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetExtensionNil() {
	o.Extension.Set(nil)
}

// UnsetExtension ensures that no value is present for Extension, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetExtension() {
	o.Extension.Unset()
}

// GetStorageClass returns the StorageClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetStorageClass() string {
	if o == nil || IsNil(o.StorageClass.Get()) {
		var ret string
		return ret
	}
	return *o.StorageClass.Get()
}

// GetStorageClassOk returns a tuple with the StorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetStorageClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageClass.Get(), o.StorageClass.IsSet()
}

// HasStorageClass returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasStorageClass() bool {
	if o != nil && o.StorageClass.IsSet() {
		return true
	}

	return false
}

// SetStorageClass gets a reference to the given NullableString and assigns it to the StorageClass field.
func (o *CreateOrUpdatePuupeeDto) SetStorageClass(v string) {
	o.StorageClass.Set(&v)
}
// SetStorageClassNil sets the value for StorageClass to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetStorageClassNil() {
	o.StorageClass.Set(nil)
}

// UnsetStorageClass ensures that no value is present for StorageClass, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetStorageClass() {
	o.StorageClass.Unset()
}

// GetStorageObjectCreatedAt returns the StorageObjectCreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetStorageObjectCreatedAt() time.Time {
	if o == nil || IsNil(o.StorageObjectCreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StorageObjectCreatedAt.Get()
}

// GetStorageObjectCreatedAtOk returns a tuple with the StorageObjectCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetStorageObjectCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageObjectCreatedAt.Get(), o.StorageObjectCreatedAt.IsSet()
}

// HasStorageObjectCreatedAt returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasStorageObjectCreatedAt() bool {
	if o != nil && o.StorageObjectCreatedAt.IsSet() {
		return true
	}

	return false
}

// SetStorageObjectCreatedAt gets a reference to the given NullableTime and assigns it to the StorageObjectCreatedAt field.
func (o *CreateOrUpdatePuupeeDto) SetStorageObjectCreatedAt(v time.Time) {
	o.StorageObjectCreatedAt.Set(&v)
}
// SetStorageObjectCreatedAtNil sets the value for StorageObjectCreatedAt to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetStorageObjectCreatedAtNil() {
	o.StorageObjectCreatedAt.Set(nil)
}

// UnsetStorageObjectCreatedAt ensures that no value is present for StorageObjectCreatedAt, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetStorageObjectCreatedAt() {
	o.StorageObjectCreatedAt.Unset()
}

// GetStorageObjectUpdatedAt returns the StorageObjectUpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetStorageObjectUpdatedAt() time.Time {
	if o == nil || IsNil(o.StorageObjectUpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StorageObjectUpdatedAt.Get()
}

// GetStorageObjectUpdatedAtOk returns a tuple with the StorageObjectUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetStorageObjectUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageObjectUpdatedAt.Get(), o.StorageObjectUpdatedAt.IsSet()
}

// HasStorageObjectUpdatedAt returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasStorageObjectUpdatedAt() bool {
	if o != nil && o.StorageObjectUpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetStorageObjectUpdatedAt gets a reference to the given NullableTime and assigns it to the StorageObjectUpdatedAt field.
func (o *CreateOrUpdatePuupeeDto) SetStorageObjectUpdatedAt(v time.Time) {
	o.StorageObjectUpdatedAt.Set(&v)
}
// SetStorageObjectUpdatedAtNil sets the value for StorageObjectUpdatedAt to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetStorageObjectUpdatedAtNil() {
	o.StorageObjectUpdatedAt.Set(nil)
}

// UnsetStorageObjectUpdatedAt ensures that no value is present for StorageObjectUpdatedAt, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetStorageObjectUpdatedAt() {
	o.StorageObjectUpdatedAt.Unset()
}

// GetSyncVersion returns the SyncVersion field value if set, zero value otherwise.
func (o *CreateOrUpdatePuupeeDto) GetSyncVersion() int64 {
	if o == nil || IsNil(o.SyncVersion) {
		var ret int64
		return ret
	}
	return *o.SyncVersion
}

// GetSyncVersionOk returns a tuple with the SyncVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetSyncVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.SyncVersion) {
		return nil, false
	}
	return o.SyncVersion, true
}

// HasSyncVersion returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasSyncVersion() bool {
	if o != nil && !IsNil(o.SyncVersion) {
		return true
	}

	return false
}

// SetSyncVersion gets a reference to the given int64 and assigns it to the SyncVersion field.
func (o *CreateOrUpdatePuupeeDto) SetSyncVersion(v int64) {
	o.SyncVersion = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *CreateOrUpdatePuupeeDto) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *CreateOrUpdatePuupeeDto) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetDeletionTime returns the DeletionTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetDeletionTime() time.Time {
	if o == nil || IsNil(o.DeletionTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletionTime.Get()
}

// GetDeletionTimeOk returns a tuple with the DeletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetDeletionTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletionTime.Get(), o.DeletionTime.IsSet()
}

// HasDeletionTime returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasDeletionTime() bool {
	if o != nil && o.DeletionTime.IsSet() {
		return true
	}

	return false
}

// SetDeletionTime gets a reference to the given NullableTime and assigns it to the DeletionTime field.
func (o *CreateOrUpdatePuupeeDto) SetDeletionTime(v time.Time) {
	o.DeletionTime.Set(&v)
}
// SetDeletionTimeNil sets the value for DeletionTime to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetDeletionTimeNil() {
	o.DeletionTime.Set(nil)
}

// UnsetDeletionTime ensures that no value is present for DeletionTime, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetDeletionTime() {
	o.DeletionTime.Unset()
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *CreateOrUpdatePuupeeDto) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *CreateOrUpdatePuupeeDto) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetLastModificationTime returns the LastModificationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetLastModificationTime() time.Time {
	if o == nil || IsNil(o.LastModificationTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastModificationTime.Get()
}

// GetLastModificationTimeOk returns a tuple with the LastModificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetLastModificationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModificationTime.Get(), o.LastModificationTime.IsSet()
}

// HasLastModificationTime returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasLastModificationTime() bool {
	if o != nil && o.LastModificationTime.IsSet() {
		return true
	}

	return false
}

// SetLastModificationTime gets a reference to the given NullableTime and assigns it to the LastModificationTime field.
func (o *CreateOrUpdatePuupeeDto) SetLastModificationTime(v time.Time) {
	o.LastModificationTime.Set(&v)
}
// SetLastModificationTimeNil sets the value for LastModificationTime to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetLastModificationTimeNil() {
	o.LastModificationTime.Set(nil)
}

// UnsetLastModificationTime ensures that no value is present for LastModificationTime, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetLastModificationTime() {
	o.LastModificationTime.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetPriority() int32 {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret int32
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableInt32 and assigns it to the Priority field.
func (o *CreateOrUpdatePuupeeDto) SetPriority(v int32) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetPriority() {
	o.Priority.Unset()
}

// GetStartAt returns the StartAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetStartAt() time.Time {
	if o == nil || IsNil(o.StartAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartAt.Get()
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetStartAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartAt.Get(), o.StartAt.IsSet()
}

// HasStartAt returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasStartAt() bool {
	if o != nil && o.StartAt.IsSet() {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given NullableTime and assigns it to the StartAt field.
func (o *CreateOrUpdatePuupeeDto) SetStartAt(v time.Time) {
	o.StartAt.Set(&v)
}
// SetStartAtNil sets the value for StartAt to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetStartAtNil() {
	o.StartAt.Set(nil)
}

// UnsetStartAt ensures that no value is present for StartAt, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetStartAt() {
	o.StartAt.Unset()
}

// GetEndAt returns the EndAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetEndAt() time.Time {
	if o == nil || IsNil(o.EndAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndAt.Get()
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetEndAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndAt.Get(), o.EndAt.IsSet()
}

// HasEndAt returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasEndAt() bool {
	if o != nil && o.EndAt.IsSet() {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given NullableTime and assigns it to the EndAt field.
func (o *CreateOrUpdatePuupeeDto) SetEndAt(v time.Time) {
	o.EndAt.Set(&v)
}
// SetEndAtNil sets the value for EndAt to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetEndAtNil() {
	o.EndAt.Set(nil)
}

// UnsetEndAt ensures that no value is present for EndAt, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetEndAt() {
	o.EndAt.Unset()
}

// GetNotifyAt returns the NotifyAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetNotifyAt() time.Time {
	if o == nil || IsNil(o.NotifyAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.NotifyAt.Get()
}

// GetNotifyAtOk returns a tuple with the NotifyAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetNotifyAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotifyAt.Get(), o.NotifyAt.IsSet()
}

// HasNotifyAt returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasNotifyAt() bool {
	if o != nil && o.NotifyAt.IsSet() {
		return true
	}

	return false
}

// SetNotifyAt gets a reference to the given NullableTime and assigns it to the NotifyAt field.
func (o *CreateOrUpdatePuupeeDto) SetNotifyAt(v time.Time) {
	o.NotifyAt.Set(&v)
}
// SetNotifyAtNil sets the value for NotifyAt to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetNotifyAtNil() {
	o.NotifyAt.Set(nil)
}

// UnsetNotifyAt ensures that no value is present for NotifyAt, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetNotifyAt() {
	o.NotifyAt.Unset()
}

// GetNotifyTimingType returns the NotifyTimingType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetNotifyTimingType() string {
	if o == nil || IsNil(o.NotifyTimingType.Get()) {
		var ret string
		return ret
	}
	return *o.NotifyTimingType.Get()
}

// GetNotifyTimingTypeOk returns a tuple with the NotifyTimingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetNotifyTimingTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotifyTimingType.Get(), o.NotifyTimingType.IsSet()
}

// HasNotifyTimingType returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasNotifyTimingType() bool {
	if o != nil && o.NotifyTimingType.IsSet() {
		return true
	}

	return false
}

// SetNotifyTimingType gets a reference to the given NullableString and assigns it to the NotifyTimingType field.
func (o *CreateOrUpdatePuupeeDto) SetNotifyTimingType(v string) {
	o.NotifyTimingType.Set(&v)
}
// SetNotifyTimingTypeNil sets the value for NotifyTimingType to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetNotifyTimingTypeNil() {
	o.NotifyTimingType.Set(nil)
}

// UnsetNotifyTimingType ensures that no value is present for NotifyTimingType, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetNotifyTimingType() {
	o.NotifyTimingType.Unset()
}

// GetNotifyTimingUnit returns the NotifyTimingUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetNotifyTimingUnit() string {
	if o == nil || IsNil(o.NotifyTimingUnit.Get()) {
		var ret string
		return ret
	}
	return *o.NotifyTimingUnit.Get()
}

// GetNotifyTimingUnitOk returns a tuple with the NotifyTimingUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetNotifyTimingUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotifyTimingUnit.Get(), o.NotifyTimingUnit.IsSet()
}

// HasNotifyTimingUnit returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasNotifyTimingUnit() bool {
	if o != nil && o.NotifyTimingUnit.IsSet() {
		return true
	}

	return false
}

// SetNotifyTimingUnit gets a reference to the given NullableString and assigns it to the NotifyTimingUnit field.
func (o *CreateOrUpdatePuupeeDto) SetNotifyTimingUnit(v string) {
	o.NotifyTimingUnit.Set(&v)
}
// SetNotifyTimingUnitNil sets the value for NotifyTimingUnit to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetNotifyTimingUnitNil() {
	o.NotifyTimingUnit.Set(nil)
}

// UnsetNotifyTimingUnit ensures that no value is present for NotifyTimingUnit, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetNotifyTimingUnit() {
	o.NotifyTimingUnit.Unset()
}

// GetNotifyTimingValue returns the NotifyTimingValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetNotifyTimingValue() int32 {
	if o == nil || IsNil(o.NotifyTimingValue.Get()) {
		var ret int32
		return ret
	}
	return *o.NotifyTimingValue.Get()
}

// GetNotifyTimingValueOk returns a tuple with the NotifyTimingValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetNotifyTimingValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotifyTimingValue.Get(), o.NotifyTimingValue.IsSet()
}

// HasNotifyTimingValue returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasNotifyTimingValue() bool {
	if o != nil && o.NotifyTimingValue.IsSet() {
		return true
	}

	return false
}

// SetNotifyTimingValue gets a reference to the given NullableInt32 and assigns it to the NotifyTimingValue field.
func (o *CreateOrUpdatePuupeeDto) SetNotifyTimingValue(v int32) {
	o.NotifyTimingValue.Set(&v)
}
// SetNotifyTimingValueNil sets the value for NotifyTimingValue to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetNotifyTimingValueNil() {
	o.NotifyTimingValue.Set(nil)
}

// UnsetNotifyTimingValue ensures that no value is present for NotifyTimingValue, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetNotifyTimingValue() {
	o.NotifyTimingValue.Unset()
}

// GetRepeat returns the Repeat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetRepeat() string {
	if o == nil || IsNil(o.Repeat.Get()) {
		var ret string
		return ret
	}
	return *o.Repeat.Get()
}

// GetRepeatOk returns a tuple with the Repeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetRepeatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Repeat.Get(), o.Repeat.IsSet()
}

// HasRepeat returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasRepeat() bool {
	if o != nil && o.Repeat.IsSet() {
		return true
	}

	return false
}

// SetRepeat gets a reference to the given NullableString and assigns it to the Repeat field.
func (o *CreateOrUpdatePuupeeDto) SetRepeat(v string) {
	o.Repeat.Set(&v)
}
// SetRepeatNil sets the value for Repeat to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetRepeatNil() {
	o.Repeat.Set(nil)
}

// UnsetRepeat ensures that no value is present for Repeat, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetRepeat() {
	o.Repeat.Unset()
}

// GetRepeatOffAt returns the RepeatOffAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetRepeatOffAt() time.Time {
	if o == nil || IsNil(o.RepeatOffAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.RepeatOffAt.Get()
}

// GetRepeatOffAtOk returns a tuple with the RepeatOffAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetRepeatOffAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepeatOffAt.Get(), o.RepeatOffAt.IsSet()
}

// HasRepeatOffAt returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasRepeatOffAt() bool {
	if o != nil && o.RepeatOffAt.IsSet() {
		return true
	}

	return false
}

// SetRepeatOffAt gets a reference to the given NullableTime and assigns it to the RepeatOffAt field.
func (o *CreateOrUpdatePuupeeDto) SetRepeatOffAt(v time.Time) {
	o.RepeatOffAt.Set(&v)
}
// SetRepeatOffAtNil sets the value for RepeatOffAt to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetRepeatOffAtNil() {
	o.RepeatOffAt.Set(nil)
}

// UnsetRepeatOffAt ensures that no value is present for RepeatOffAt, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetRepeatOffAt() {
	o.RepeatOffAt.Unset()
}

// GetRepeatOffTimes returns the RepeatOffTimes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetRepeatOffTimes() int32 {
	if o == nil || IsNil(o.RepeatOffTimes.Get()) {
		var ret int32
		return ret
	}
	return *o.RepeatOffTimes.Get()
}

// GetRepeatOffTimesOk returns a tuple with the RepeatOffTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetRepeatOffTimesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepeatOffTimes.Get(), o.RepeatOffTimes.IsSet()
}

// HasRepeatOffTimes returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasRepeatOffTimes() bool {
	if o != nil && o.RepeatOffTimes.IsSet() {
		return true
	}

	return false
}

// SetRepeatOffTimes gets a reference to the given NullableInt32 and assigns it to the RepeatOffTimes field.
func (o *CreateOrUpdatePuupeeDto) SetRepeatOffTimes(v int32) {
	o.RepeatOffTimes.Set(&v)
}
// SetRepeatOffTimesNil sets the value for RepeatOffTimes to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetRepeatOffTimesNil() {
	o.RepeatOffTimes.Set(nil)
}

// UnsetRepeatOffTimes ensures that no value is present for RepeatOffTimes, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetRepeatOffTimes() {
	o.RepeatOffTimes.Unset()
}

// GetRepetitions returns the Repetitions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetRepetitions() int32 {
	if o == nil || IsNil(o.Repetitions.Get()) {
		var ret int32
		return ret
	}
	return *o.Repetitions.Get()
}

// GetRepetitionsOk returns a tuple with the Repetitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetRepetitionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Repetitions.Get(), o.Repetitions.IsSet()
}

// HasRepetitions returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasRepetitions() bool {
	if o != nil && o.Repetitions.IsSet() {
		return true
	}

	return false
}

// SetRepetitions gets a reference to the given NullableInt32 and assigns it to the Repetitions field.
func (o *CreateOrUpdatePuupeeDto) SetRepetitions(v int32) {
	o.Repetitions.Set(&v)
}
// SetRepetitionsNil sets the value for Repetitions to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetRepetitionsNil() {
	o.Repetitions.Set(nil)
}

// UnsetRepetitions ensures that no value is present for Repetitions, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetRepetitions() {
	o.Repetitions.Unset()
}

// GetIsDone returns the IsDone field value if set, zero value otherwise.
func (o *CreateOrUpdatePuupeeDto) GetIsDone() bool {
	if o == nil || IsNil(o.IsDone) {
		var ret bool
		return ret
	}
	return *o.IsDone
}

// GetIsDoneOk returns a tuple with the IsDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetIsDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDone) {
		return nil, false
	}
	return o.IsDone, true
}

// HasIsDone returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasIsDone() bool {
	if o != nil && !IsNil(o.IsDone) {
		return true
	}

	return false
}

// SetIsDone gets a reference to the given bool and assigns it to the IsDone field.
func (o *CreateOrUpdatePuupeeDto) SetIsDone(v bool) {
	o.IsDone = &v
}

// GetDoneAt returns the DoneAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetDoneAt() time.Time {
	if o == nil || IsNil(o.DoneAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DoneAt.Get()
}

// GetDoneAtOk returns a tuple with the DoneAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetDoneAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DoneAt.Get(), o.DoneAt.IsSet()
}

// HasDoneAt returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasDoneAt() bool {
	if o != nil && o.DoneAt.IsSet() {
		return true
	}

	return false
}

// SetDoneAt gets a reference to the given NullableTime and assigns it to the DoneAt field.
func (o *CreateOrUpdatePuupeeDto) SetDoneAt(v time.Time) {
	o.DoneAt.Set(&v)
}
// SetDoneAtNil sets the value for DoneAt to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetDoneAtNil() {
	o.DoneAt.Set(nil)
}

// UnsetDoneAt ensures that no value is present for DoneAt, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetDoneAt() {
	o.DoneAt.Unset()
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId.Get()) {
		var ret string
		return ret
	}
	return *o.CreatorId.Get()
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetCreatorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorId.Get(), o.CreatorId.IsSet()
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasCreatorId() bool {
	if o != nil && o.CreatorId.IsSet() {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given NullableString and assigns it to the CreatorId field.
func (o *CreateOrUpdatePuupeeDto) SetCreatorId(v string) {
	o.CreatorId.Set(&v)
}
// SetCreatorIdNil sets the value for CreatorId to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetCreatorIdNil() {
	o.CreatorId.Set(nil)
}

// UnsetCreatorId ensures that no value is present for CreatorId, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetCreatorId() {
	o.CreatorId.Unset()
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId.Get()) {
		var ret string
		return ret
	}
	return *o.LastModifierId.Get()
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetLastModifierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifierId.Get(), o.LastModifierId.IsSet()
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasLastModifierId() bool {
	if o != nil && o.LastModifierId.IsSet() {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given NullableString and assigns it to the LastModifierId field.
func (o *CreateOrUpdatePuupeeDto) SetLastModifierId(v string) {
	o.LastModifierId.Set(&v)
}
// SetLastModifierIdNil sets the value for LastModifierId to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetLastModifierIdNil() {
	o.LastModifierId.Set(nil)
}

// UnsetLastModifierId ensures that no value is present for LastModifierId, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetLastModifierId() {
	o.LastModifierId.Unset()
}

// GetDeleterId returns the DeleterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetDeleterId() string {
	if o == nil || IsNil(o.DeleterId.Get()) {
		var ret string
		return ret
	}
	return *o.DeleterId.Get()
}

// GetDeleterIdOk returns a tuple with the DeleterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetDeleterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeleterId.Get(), o.DeleterId.IsSet()
}

// HasDeleterId returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasDeleterId() bool {
	if o != nil && o.DeleterId.IsSet() {
		return true
	}

	return false
}

// SetDeleterId gets a reference to the given NullableString and assigns it to the DeleterId field.
func (o *CreateOrUpdatePuupeeDto) SetDeleterId(v string) {
	o.DeleterId.Set(&v)
}
// SetDeleterIdNil sets the value for DeleterId to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetDeleterIdNil() {
	o.DeleterId.Set(nil)
}

// UnsetDeleterId ensures that no value is present for DeleterId, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetDeleterId() {
	o.DeleterId.Unset()
}

// GetTagging returns the Tagging field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetTagging() string {
	if o == nil || IsNil(o.Tagging.Get()) {
		var ret string
		return ret
	}
	return *o.Tagging.Get()
}

// GetTaggingOk returns a tuple with the Tagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetTaggingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tagging.Get(), o.Tagging.IsSet()
}

// HasTagging returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasTagging() bool {
	if o != nil && o.Tagging.IsSet() {
		return true
	}

	return false
}

// SetTagging gets a reference to the given NullableString and assigns it to the Tagging field.
func (o *CreateOrUpdatePuupeeDto) SetTagging(v string) {
	o.Tagging.Set(&v)
}
// SetTaggingNil sets the value for Tagging to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetTaggingNil() {
	o.Tagging.Set(nil)
}

// UnsetTagging ensures that no value is present for Tagging, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetTagging() {
	o.Tagging.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *CreateOrUpdatePuupeeDto) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetUrl() {
	o.Url.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateOrUpdatePuupeeDto) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *CreateOrUpdatePuupeeDto) SetSize(v int64) {
	o.Size = &v
}

// GetLastModifierDeviceToken returns the LastModifierDeviceToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetLastModifierDeviceToken() string {
	if o == nil || IsNil(o.LastModifierDeviceToken.Get()) {
		var ret string
		return ret
	}
	return *o.LastModifierDeviceToken.Get()
}

// GetLastModifierDeviceTokenOk returns a tuple with the LastModifierDeviceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetLastModifierDeviceTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifierDeviceToken.Get(), o.LastModifierDeviceToken.IsSet()
}

// HasLastModifierDeviceToken returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasLastModifierDeviceToken() bool {
	if o != nil && o.LastModifierDeviceToken.IsSet() {
		return true
	}

	return false
}

// SetLastModifierDeviceToken gets a reference to the given NullableString and assigns it to the LastModifierDeviceToken field.
func (o *CreateOrUpdatePuupeeDto) SetLastModifierDeviceToken(v string) {
	o.LastModifierDeviceToken.Set(&v)
}
// SetLastModifierDeviceTokenNil sets the value for LastModifierDeviceToken to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetLastModifierDeviceTokenNil() {
	o.LastModifierDeviceToken.Set(nil)
}

// UnsetLastModifierDeviceToken ensures that no value is present for LastModifierDeviceToken, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetLastModifierDeviceToken() {
	o.LastModifierDeviceToken.Unset()
}

// GetLastModifierDevice returns the LastModifierDevice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetLastModifierDevice() string {
	if o == nil || IsNil(o.LastModifierDevice.Get()) {
		var ret string
		return ret
	}
	return *o.LastModifierDevice.Get()
}

// GetLastModifierDeviceOk returns a tuple with the LastModifierDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetLastModifierDeviceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifierDevice.Get(), o.LastModifierDevice.IsSet()
}

// HasLastModifierDevice returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasLastModifierDevice() bool {
	if o != nil && o.LastModifierDevice.IsSet() {
		return true
	}

	return false
}

// SetLastModifierDevice gets a reference to the given NullableString and assigns it to the LastModifierDevice field.
func (o *CreateOrUpdatePuupeeDto) SetLastModifierDevice(v string) {
	o.LastModifierDevice.Set(&v)
}
// SetLastModifierDeviceNil sets the value for LastModifierDevice to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetLastModifierDeviceNil() {
	o.LastModifierDevice.Set(nil)
}

// UnsetLastModifierDevice ensures that no value is present for LastModifierDevice, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetLastModifierDevice() {
	o.LastModifierDevice.Unset()
}

// GetAppName returns the AppName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdatePuupeeDto) GetAppName() string {
	if o == nil || IsNil(o.AppName.Get()) {
		var ret string
		return ret
	}
	return *o.AppName.Get()
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdatePuupeeDto) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppName.Get(), o.AppName.IsSet()
}

// HasAppName returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasAppName() bool {
	if o != nil && o.AppName.IsSet() {
		return true
	}

	return false
}

// SetAppName gets a reference to the given NullableString and assigns it to the AppName field.
func (o *CreateOrUpdatePuupeeDto) SetAppName(v string) {
	o.AppName.Set(&v)
}
// SetAppNameNil sets the value for AppName to be an explicit nil
func (o *CreateOrUpdatePuupeeDto) SetAppNameNil() {
	o.AppName.Set(nil)
}

// UnsetAppName ensures that no value is present for AppName, not even an explicit nil
func (o *CreateOrUpdatePuupeeDto) UnsetAppName() {
	o.AppName.Unset()
}

// GetPushToUser returns the PushToUser field value if set, zero value otherwise.
func (o *CreateOrUpdatePuupeeDto) GetPushToUser() bool {
	if o == nil || IsNil(o.PushToUser) {
		var ret bool
		return ret
	}
	return *o.PushToUser
}

// GetPushToUserOk returns a tuple with the PushToUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetPushToUserOk() (*bool, bool) {
	if o == nil || IsNil(o.PushToUser) {
		return nil, false
	}
	return o.PushToUser, true
}

// HasPushToUser returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasPushToUser() bool {
	if o != nil && !IsNil(o.PushToUser) {
		return true
	}

	return false
}

// SetPushToUser gets a reference to the given bool and assigns it to the PushToUser field.
func (o *CreateOrUpdatePuupeeDto) SetPushToUser(v bool) {
	o.PushToUser = &v
}

// GetSortIndex returns the SortIndex field value if set, zero value otherwise.
func (o *CreateOrUpdatePuupeeDto) GetSortIndex() int32 {
	if o == nil || IsNil(o.SortIndex) {
		var ret int32
		return ret
	}
	return *o.SortIndex
}

// GetSortIndexOk returns a tuple with the SortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdatePuupeeDto) GetSortIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.SortIndex) {
		return nil, false
	}
	return o.SortIndex, true
}

// HasSortIndex returns a boolean if a field has been set.
func (o *CreateOrUpdatePuupeeDto) HasSortIndex() bool {
	if o != nil && !IsNil(o.SortIndex) {
		return true
	}

	return false
}

// SetSortIndex gets a reference to the given int32 and assigns it to the SortIndex field.
func (o *CreateOrUpdatePuupeeDto) SetSortIndex(v int32) {
	o.SortIndex = &v
}

func (o CreateOrUpdatePuupeeDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdatePuupeeDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if !IsNil(o.IsHidden) {
		toSerialize["isHidden"] = o.IsHidden
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Text.IsSet() {
		toSerialize["text"] = o.Text.Get()
	}
	if o.Content.IsSet() {
		toSerialize["content"] = o.Content.Get()
	}
	if o.Format.IsSet() {
		toSerialize["format"] = o.Format.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if o.Key.IsSet() {
		toSerialize["key"] = o.Key.Get()
	}
	if o.Md5.IsSet() {
		toSerialize["md5"] = o.Md5.Get()
	}
	if o.SliceMd5.IsSet() {
		toSerialize["sliceMd5"] = o.SliceMd5.Get()
	}
	if o.RapidCode.IsSet() {
		toSerialize["rapidCode"] = o.RapidCode.Get()
	}
	if o.ContentType.IsSet() {
		toSerialize["contentType"] = o.ContentType.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.DisplayStyle.IsSet() {
		toSerialize["displayStyle"] = o.DisplayStyle.Get()
	}
	if o.Extension.IsSet() {
		toSerialize["extension"] = o.Extension.Get()
	}
	if o.StorageClass.IsSet() {
		toSerialize["storageClass"] = o.StorageClass.Get()
	}
	if o.StorageObjectCreatedAt.IsSet() {
		toSerialize["storageObjectCreatedAt"] = o.StorageObjectCreatedAt.Get()
	}
	if o.StorageObjectUpdatedAt.IsSet() {
		toSerialize["storageObjectUpdatedAt"] = o.StorageObjectUpdatedAt.Get()
	}
	if !IsNil(o.SyncVersion) {
		toSerialize["syncVersion"] = o.SyncVersion
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if o.DeletionTime.IsSet() {
		toSerialize["deletionTime"] = o.DeletionTime.Get()
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if o.LastModificationTime.IsSet() {
		toSerialize["lastModificationTime"] = o.LastModificationTime.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.StartAt.IsSet() {
		toSerialize["startAt"] = o.StartAt.Get()
	}
	if o.EndAt.IsSet() {
		toSerialize["endAt"] = o.EndAt.Get()
	}
	if o.NotifyAt.IsSet() {
		toSerialize["notifyAt"] = o.NotifyAt.Get()
	}
	if o.NotifyTimingType.IsSet() {
		toSerialize["notifyTimingType"] = o.NotifyTimingType.Get()
	}
	if o.NotifyTimingUnit.IsSet() {
		toSerialize["notifyTimingUnit"] = o.NotifyTimingUnit.Get()
	}
	if o.NotifyTimingValue.IsSet() {
		toSerialize["notifyTimingValue"] = o.NotifyTimingValue.Get()
	}
	if o.Repeat.IsSet() {
		toSerialize["repeat"] = o.Repeat.Get()
	}
	if o.RepeatOffAt.IsSet() {
		toSerialize["repeatOffAt"] = o.RepeatOffAt.Get()
	}
	if o.RepeatOffTimes.IsSet() {
		toSerialize["repeatOffTimes"] = o.RepeatOffTimes.Get()
	}
	if o.Repetitions.IsSet() {
		toSerialize["repetitions"] = o.Repetitions.Get()
	}
	if !IsNil(o.IsDone) {
		toSerialize["isDone"] = o.IsDone
	}
	if o.DoneAt.IsSet() {
		toSerialize["doneAt"] = o.DoneAt.Get()
	}
	if o.CreatorId.IsSet() {
		toSerialize["creatorId"] = o.CreatorId.Get()
	}
	if o.LastModifierId.IsSet() {
		toSerialize["lastModifierId"] = o.LastModifierId.Get()
	}
	if o.DeleterId.IsSet() {
		toSerialize["deleterId"] = o.DeleterId.Get()
	}
	if o.Tagging.IsSet() {
		toSerialize["tagging"] = o.Tagging.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if o.LastModifierDeviceToken.IsSet() {
		toSerialize["lastModifierDeviceToken"] = o.LastModifierDeviceToken.Get()
	}
	if o.LastModifierDevice.IsSet() {
		toSerialize["lastModifierDevice"] = o.LastModifierDevice.Get()
	}
	if o.AppName.IsSet() {
		toSerialize["appName"] = o.AppName.Get()
	}
	if !IsNil(o.PushToUser) {
		toSerialize["pushToUser"] = o.PushToUser
	}
	if !IsNil(o.SortIndex) {
		toSerialize["sortIndex"] = o.SortIndex
	}
	return toSerialize, nil
}

type NullableCreateOrUpdatePuupeeDto struct {
	value *CreateOrUpdatePuupeeDto
	isSet bool
}

func (v NullableCreateOrUpdatePuupeeDto) Get() *CreateOrUpdatePuupeeDto {
	return v.value
}

func (v *NullableCreateOrUpdatePuupeeDto) Set(val *CreateOrUpdatePuupeeDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdatePuupeeDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdatePuupeeDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdatePuupeeDto(val *CreateOrUpdatePuupeeDto) *NullableCreateOrUpdatePuupeeDto {
	return &NullableCreateOrUpdatePuupeeDto{value: val, isSet: true}
}

func (v NullableCreateOrUpdatePuupeeDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdatePuupeeDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


