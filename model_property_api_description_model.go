/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the PropertyApiDescriptionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropertyApiDescriptionModel{}

// PropertyApiDescriptionModel struct for PropertyApiDescriptionModel
type PropertyApiDescriptionModel struct {
	Name NullableString `json:"name,omitempty"`
	JsonName NullableString `json:"jsonName,omitempty"`
	Type NullableString `json:"type,omitempty"`
	TypeSimple NullableString `json:"typeSimple,omitempty"`
	IsRequired *bool `json:"isRequired,omitempty"`
	MinLength NullableInt32 `json:"minLength,omitempty"`
	MaxLength NullableInt32 `json:"maxLength,omitempty"`
	Minimum NullableString `json:"minimum,omitempty"`
	Maximum NullableString `json:"maximum,omitempty"`
	Regex NullableString `json:"regex,omitempty"`
}

// NewPropertyApiDescriptionModel instantiates a new PropertyApiDescriptionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyApiDescriptionModel() *PropertyApiDescriptionModel {
	this := PropertyApiDescriptionModel{}
	return &this
}

// NewPropertyApiDescriptionModelWithDefaults instantiates a new PropertyApiDescriptionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyApiDescriptionModelWithDefaults() *PropertyApiDescriptionModel {
	this := PropertyApiDescriptionModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *PropertyApiDescriptionModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *PropertyApiDescriptionModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetName() {
	o.Name.Unset()
}

// GetJsonName returns the JsonName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetJsonName() string {
	if o == nil || IsNil(o.JsonName.Get()) {
		var ret string
		return ret
	}
	return *o.JsonName.Get()
}

// GetJsonNameOk returns a tuple with the JsonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetJsonNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JsonName.Get(), o.JsonName.IsSet()
}

// HasJsonName returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasJsonName() bool {
	if o != nil && o.JsonName.IsSet() {
		return true
	}

	return false
}

// SetJsonName gets a reference to the given NullableString and assigns it to the JsonName field.
func (o *PropertyApiDescriptionModel) SetJsonName(v string) {
	o.JsonName.Set(&v)
}
// SetJsonNameNil sets the value for JsonName to be an explicit nil
func (o *PropertyApiDescriptionModel) SetJsonNameNil() {
	o.JsonName.Set(nil)
}

// UnsetJsonName ensures that no value is present for JsonName, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetJsonName() {
	o.JsonName.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *PropertyApiDescriptionModel) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *PropertyApiDescriptionModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetType() {
	o.Type.Unset()
}

// GetTypeSimple returns the TypeSimple field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetTypeSimple() string {
	if o == nil || IsNil(o.TypeSimple.Get()) {
		var ret string
		return ret
	}
	return *o.TypeSimple.Get()
}

// GetTypeSimpleOk returns a tuple with the TypeSimple field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetTypeSimpleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TypeSimple.Get(), o.TypeSimple.IsSet()
}

// HasTypeSimple returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasTypeSimple() bool {
	if o != nil && o.TypeSimple.IsSet() {
		return true
	}

	return false
}

// SetTypeSimple gets a reference to the given NullableString and assigns it to the TypeSimple field.
func (o *PropertyApiDescriptionModel) SetTypeSimple(v string) {
	o.TypeSimple.Set(&v)
}
// SetTypeSimpleNil sets the value for TypeSimple to be an explicit nil
func (o *PropertyApiDescriptionModel) SetTypeSimpleNil() {
	o.TypeSimple.Set(nil)
}

// UnsetTypeSimple ensures that no value is present for TypeSimple, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetTypeSimple() {
	o.TypeSimple.Unset()
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *PropertyApiDescriptionModel) GetIsRequired() bool {
	if o == nil || IsNil(o.IsRequired) {
		var ret bool
		return ret
	}
	return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyApiDescriptionModel) GetIsRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRequired) {
		return nil, false
	}
	return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasIsRequired() bool {
	if o != nil && !IsNil(o.IsRequired) {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *PropertyApiDescriptionModel) SetIsRequired(v bool) {
	o.IsRequired = &v
}

// GetMinLength returns the MinLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetMinLength() int32 {
	if o == nil || IsNil(o.MinLength.Get()) {
		var ret int32
		return ret
	}
	return *o.MinLength.Get()
}

// GetMinLengthOk returns a tuple with the MinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetMinLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinLength.Get(), o.MinLength.IsSet()
}

// HasMinLength returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasMinLength() bool {
	if o != nil && o.MinLength.IsSet() {
		return true
	}

	return false
}

// SetMinLength gets a reference to the given NullableInt32 and assigns it to the MinLength field.
func (o *PropertyApiDescriptionModel) SetMinLength(v int32) {
	o.MinLength.Set(&v)
}
// SetMinLengthNil sets the value for MinLength to be an explicit nil
func (o *PropertyApiDescriptionModel) SetMinLengthNil() {
	o.MinLength.Set(nil)
}

// UnsetMinLength ensures that no value is present for MinLength, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetMinLength() {
	o.MinLength.Unset()
}

// GetMaxLength returns the MaxLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetMaxLength() int32 {
	if o == nil || IsNil(o.MaxLength.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxLength.Get()
}

// GetMaxLengthOk returns a tuple with the MaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetMaxLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxLength.Get(), o.MaxLength.IsSet()
}

// HasMaxLength returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasMaxLength() bool {
	if o != nil && o.MaxLength.IsSet() {
		return true
	}

	return false
}

// SetMaxLength gets a reference to the given NullableInt32 and assigns it to the MaxLength field.
func (o *PropertyApiDescriptionModel) SetMaxLength(v int32) {
	o.MaxLength.Set(&v)
}
// SetMaxLengthNil sets the value for MaxLength to be an explicit nil
func (o *PropertyApiDescriptionModel) SetMaxLengthNil() {
	o.MaxLength.Set(nil)
}

// UnsetMaxLength ensures that no value is present for MaxLength, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetMaxLength() {
	o.MaxLength.Unset()
}

// GetMinimum returns the Minimum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetMinimum() string {
	if o == nil || IsNil(o.Minimum.Get()) {
		var ret string
		return ret
	}
	return *o.Minimum.Get()
}

// GetMinimumOk returns a tuple with the Minimum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetMinimumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Minimum.Get(), o.Minimum.IsSet()
}

// HasMinimum returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasMinimum() bool {
	if o != nil && o.Minimum.IsSet() {
		return true
	}

	return false
}

// SetMinimum gets a reference to the given NullableString and assigns it to the Minimum field.
func (o *PropertyApiDescriptionModel) SetMinimum(v string) {
	o.Minimum.Set(&v)
}
// SetMinimumNil sets the value for Minimum to be an explicit nil
func (o *PropertyApiDescriptionModel) SetMinimumNil() {
	o.Minimum.Set(nil)
}

// UnsetMinimum ensures that no value is present for Minimum, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetMinimum() {
	o.Minimum.Unset()
}

// GetMaximum returns the Maximum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetMaximum() string {
	if o == nil || IsNil(o.Maximum.Get()) {
		var ret string
		return ret
	}
	return *o.Maximum.Get()
}

// GetMaximumOk returns a tuple with the Maximum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetMaximumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Maximum.Get(), o.Maximum.IsSet()
}

// HasMaximum returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasMaximum() bool {
	if o != nil && o.Maximum.IsSet() {
		return true
	}

	return false
}

// SetMaximum gets a reference to the given NullableString and assigns it to the Maximum field.
func (o *PropertyApiDescriptionModel) SetMaximum(v string) {
	o.Maximum.Set(&v)
}
// SetMaximumNil sets the value for Maximum to be an explicit nil
func (o *PropertyApiDescriptionModel) SetMaximumNil() {
	o.Maximum.Set(nil)
}

// UnsetMaximum ensures that no value is present for Maximum, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetMaximum() {
	o.Maximum.Unset()
}

// GetRegex returns the Regex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetRegex() string {
	if o == nil || IsNil(o.Regex.Get()) {
		var ret string
		return ret
	}
	return *o.Regex.Get()
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetRegexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Regex.Get(), o.Regex.IsSet()
}

// HasRegex returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasRegex() bool {
	if o != nil && o.Regex.IsSet() {
		return true
	}

	return false
}

// SetRegex gets a reference to the given NullableString and assigns it to the Regex field.
func (o *PropertyApiDescriptionModel) SetRegex(v string) {
	o.Regex.Set(&v)
}
// SetRegexNil sets the value for Regex to be an explicit nil
func (o *PropertyApiDescriptionModel) SetRegexNil() {
	o.Regex.Set(nil)
}

// UnsetRegex ensures that no value is present for Regex, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetRegex() {
	o.Regex.Unset()
}

func (o PropertyApiDescriptionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropertyApiDescriptionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.JsonName.IsSet() {
		toSerialize["jsonName"] = o.JsonName.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.TypeSimple.IsSet() {
		toSerialize["typeSimple"] = o.TypeSimple.Get()
	}
	if !IsNil(o.IsRequired) {
		toSerialize["isRequired"] = o.IsRequired
	}
	if o.MinLength.IsSet() {
		toSerialize["minLength"] = o.MinLength.Get()
	}
	if o.MaxLength.IsSet() {
		toSerialize["maxLength"] = o.MaxLength.Get()
	}
	if o.Minimum.IsSet() {
		toSerialize["minimum"] = o.Minimum.Get()
	}
	if o.Maximum.IsSet() {
		toSerialize["maximum"] = o.Maximum.Get()
	}
	if o.Regex.IsSet() {
		toSerialize["regex"] = o.Regex.Get()
	}
	return toSerialize, nil
}

type NullablePropertyApiDescriptionModel struct {
	value *PropertyApiDescriptionModel
	isSet bool
}

func (v NullablePropertyApiDescriptionModel) Get() *PropertyApiDescriptionModel {
	return v.value
}

func (v *NullablePropertyApiDescriptionModel) Set(val *PropertyApiDescriptionModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyApiDescriptionModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyApiDescriptionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyApiDescriptionModel(val *PropertyApiDescriptionModel) *NullablePropertyApiDescriptionModel {
	return &NullablePropertyApiDescriptionModel{value: val, isSet: true}
}

func (v NullablePropertyApiDescriptionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyApiDescriptionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


