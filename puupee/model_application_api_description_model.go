/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// ApplicationApiDescriptionModel struct for ApplicationApiDescriptionModel
type ApplicationApiDescriptionModel struct {
	Modules *map[string]ModuleApiDescriptionModel `json:"modules,omitempty"`
	Types *map[string]TypeApiDescriptionModel `json:"types,omitempty"`
}

// NewApplicationApiDescriptionModel instantiates a new ApplicationApiDescriptionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationApiDescriptionModel() *ApplicationApiDescriptionModel {
	this := ApplicationApiDescriptionModel{}
	return &this
}

// NewApplicationApiDescriptionModelWithDefaults instantiates a new ApplicationApiDescriptionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationApiDescriptionModelWithDefaults() *ApplicationApiDescriptionModel {
	this := ApplicationApiDescriptionModel{}
	return &this
}

// GetModules returns the Modules field value if set, zero value otherwise.
func (o *ApplicationApiDescriptionModel) GetModules() map[string]ModuleApiDescriptionModel {
	if o == nil || isNil(o.Modules) {
		var ret map[string]ModuleApiDescriptionModel
		return ret
	}
	return *o.Modules
}

// GetModulesOk returns a tuple with the Modules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApiDescriptionModel) GetModulesOk() (*map[string]ModuleApiDescriptionModel, bool) {
	if o == nil || isNil(o.Modules) {
    return nil, false
	}
	return o.Modules, true
}

// HasModules returns a boolean if a field has been set.
func (o *ApplicationApiDescriptionModel) HasModules() bool {
	if o != nil && !isNil(o.Modules) {
		return true
	}

	return false
}

// SetModules gets a reference to the given map[string]ModuleApiDescriptionModel and assigns it to the Modules field.
func (o *ApplicationApiDescriptionModel) SetModules(v map[string]ModuleApiDescriptionModel) {
	o.Modules = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *ApplicationApiDescriptionModel) GetTypes() map[string]TypeApiDescriptionModel {
	if o == nil || isNil(o.Types) {
		var ret map[string]TypeApiDescriptionModel
		return ret
	}
	return *o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApiDescriptionModel) GetTypesOk() (*map[string]TypeApiDescriptionModel, bool) {
	if o == nil || isNil(o.Types) {
    return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *ApplicationApiDescriptionModel) HasTypes() bool {
	if o != nil && !isNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given map[string]TypeApiDescriptionModel and assigns it to the Types field.
func (o *ApplicationApiDescriptionModel) SetTypes(v map[string]TypeApiDescriptionModel) {
	o.Types = &v
}

func (o ApplicationApiDescriptionModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Modules) {
		toSerialize["modules"] = o.Modules
	}
	if !isNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationApiDescriptionModel struct {
	value *ApplicationApiDescriptionModel
	isSet bool
}

func (v NullableApplicationApiDescriptionModel) Get() *ApplicationApiDescriptionModel {
	return v.value
}

func (v *NullableApplicationApiDescriptionModel) Set(val *ApplicationApiDescriptionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationApiDescriptionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationApiDescriptionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationApiDescriptionModel(val *ApplicationApiDescriptionModel) *NullableApplicationApiDescriptionModel {
	return &NullableApplicationApiDescriptionModel{value: val, isSet: true}
}

func (v NullableApplicationApiDescriptionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationApiDescriptionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


