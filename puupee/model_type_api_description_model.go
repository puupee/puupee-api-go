/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// TypeApiDescriptionModel struct for TypeApiDescriptionModel
type TypeApiDescriptionModel struct {
	BaseType *string `json:"baseType,omitempty"`
	IsEnum *bool `json:"isEnum,omitempty"`
	EnumNames []string `json:"enumNames,omitempty"`
	EnumValues []map[string]interface{} `json:"enumValues,omitempty"`
	GenericArguments []string `json:"genericArguments,omitempty"`
	Properties []PropertyApiDescriptionModel `json:"properties,omitempty"`
}

// NewTypeApiDescriptionModel instantiates a new TypeApiDescriptionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypeApiDescriptionModel() *TypeApiDescriptionModel {
	this := TypeApiDescriptionModel{}
	return &this
}

// NewTypeApiDescriptionModelWithDefaults instantiates a new TypeApiDescriptionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypeApiDescriptionModelWithDefaults() *TypeApiDescriptionModel {
	this := TypeApiDescriptionModel{}
	return &this
}

// GetBaseType returns the BaseType field value if set, zero value otherwise.
func (o *TypeApiDescriptionModel) GetBaseType() string {
	if o == nil || isNil(o.BaseType) {
		var ret string
		return ret
	}
	return *o.BaseType
}

// GetBaseTypeOk returns a tuple with the BaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeApiDescriptionModel) GetBaseTypeOk() (*string, bool) {
	if o == nil || isNil(o.BaseType) {
    return nil, false
	}
	return o.BaseType, true
}

// HasBaseType returns a boolean if a field has been set.
func (o *TypeApiDescriptionModel) HasBaseType() bool {
	if o != nil && !isNil(o.BaseType) {
		return true
	}

	return false
}

// SetBaseType gets a reference to the given string and assigns it to the BaseType field.
func (o *TypeApiDescriptionModel) SetBaseType(v string) {
	o.BaseType = &v
}

// GetIsEnum returns the IsEnum field value if set, zero value otherwise.
func (o *TypeApiDescriptionModel) GetIsEnum() bool {
	if o == nil || isNil(o.IsEnum) {
		var ret bool
		return ret
	}
	return *o.IsEnum
}

// GetIsEnumOk returns a tuple with the IsEnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeApiDescriptionModel) GetIsEnumOk() (*bool, bool) {
	if o == nil || isNil(o.IsEnum) {
    return nil, false
	}
	return o.IsEnum, true
}

// HasIsEnum returns a boolean if a field has been set.
func (o *TypeApiDescriptionModel) HasIsEnum() bool {
	if o != nil && !isNil(o.IsEnum) {
		return true
	}

	return false
}

// SetIsEnum gets a reference to the given bool and assigns it to the IsEnum field.
func (o *TypeApiDescriptionModel) SetIsEnum(v bool) {
	o.IsEnum = &v
}

// GetEnumNames returns the EnumNames field value if set, zero value otherwise.
func (o *TypeApiDescriptionModel) GetEnumNames() []string {
	if o == nil || isNil(o.EnumNames) {
		var ret []string
		return ret
	}
	return o.EnumNames
}

// GetEnumNamesOk returns a tuple with the EnumNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeApiDescriptionModel) GetEnumNamesOk() ([]string, bool) {
	if o == nil || isNil(o.EnumNames) {
    return nil, false
	}
	return o.EnumNames, true
}

// HasEnumNames returns a boolean if a field has been set.
func (o *TypeApiDescriptionModel) HasEnumNames() bool {
	if o != nil && !isNil(o.EnumNames) {
		return true
	}

	return false
}

// SetEnumNames gets a reference to the given []string and assigns it to the EnumNames field.
func (o *TypeApiDescriptionModel) SetEnumNames(v []string) {
	o.EnumNames = v
}

// GetEnumValues returns the EnumValues field value if set, zero value otherwise.
func (o *TypeApiDescriptionModel) GetEnumValues() []map[string]interface{} {
	if o == nil || isNil(o.EnumValues) {
		var ret []map[string]interface{}
		return ret
	}
	return o.EnumValues
}

// GetEnumValuesOk returns a tuple with the EnumValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeApiDescriptionModel) GetEnumValuesOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.EnumValues) {
    return nil, false
	}
	return o.EnumValues, true
}

// HasEnumValues returns a boolean if a field has been set.
func (o *TypeApiDescriptionModel) HasEnumValues() bool {
	if o != nil && !isNil(o.EnumValues) {
		return true
	}

	return false
}

// SetEnumValues gets a reference to the given []map[string]interface{} and assigns it to the EnumValues field.
func (o *TypeApiDescriptionModel) SetEnumValues(v []map[string]interface{}) {
	o.EnumValues = v
}

// GetGenericArguments returns the GenericArguments field value if set, zero value otherwise.
func (o *TypeApiDescriptionModel) GetGenericArguments() []string {
	if o == nil || isNil(o.GenericArguments) {
		var ret []string
		return ret
	}
	return o.GenericArguments
}

// GetGenericArgumentsOk returns a tuple with the GenericArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeApiDescriptionModel) GetGenericArgumentsOk() ([]string, bool) {
	if o == nil || isNil(o.GenericArguments) {
    return nil, false
	}
	return o.GenericArguments, true
}

// HasGenericArguments returns a boolean if a field has been set.
func (o *TypeApiDescriptionModel) HasGenericArguments() bool {
	if o != nil && !isNil(o.GenericArguments) {
		return true
	}

	return false
}

// SetGenericArguments gets a reference to the given []string and assigns it to the GenericArguments field.
func (o *TypeApiDescriptionModel) SetGenericArguments(v []string) {
	o.GenericArguments = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *TypeApiDescriptionModel) GetProperties() []PropertyApiDescriptionModel {
	if o == nil || isNil(o.Properties) {
		var ret []PropertyApiDescriptionModel
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeApiDescriptionModel) GetPropertiesOk() ([]PropertyApiDescriptionModel, bool) {
	if o == nil || isNil(o.Properties) {
    return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *TypeApiDescriptionModel) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []PropertyApiDescriptionModel and assigns it to the Properties field.
func (o *TypeApiDescriptionModel) SetProperties(v []PropertyApiDescriptionModel) {
	o.Properties = v
}

func (o TypeApiDescriptionModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BaseType) {
		toSerialize["baseType"] = o.BaseType
	}
	if !isNil(o.IsEnum) {
		toSerialize["isEnum"] = o.IsEnum
	}
	if !isNil(o.EnumNames) {
		toSerialize["enumNames"] = o.EnumNames
	}
	if !isNil(o.EnumValues) {
		toSerialize["enumValues"] = o.EnumValues
	}
	if !isNil(o.GenericArguments) {
		toSerialize["genericArguments"] = o.GenericArguments
	}
	if !isNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableTypeApiDescriptionModel struct {
	value *TypeApiDescriptionModel
	isSet bool
}

func (v NullableTypeApiDescriptionModel) Get() *TypeApiDescriptionModel {
	return v.value
}

func (v *NullableTypeApiDescriptionModel) Set(val *TypeApiDescriptionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTypeApiDescriptionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTypeApiDescriptionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypeApiDescriptionModel(val *TypeApiDescriptionModel) *NullableTypeApiDescriptionModel {
	return &NullableTypeApiDescriptionModel{value: val, isSet: true}
}

func (v NullableTypeApiDescriptionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypeApiDescriptionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


