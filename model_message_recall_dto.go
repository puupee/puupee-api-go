/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// MessageRecallDto struct for MessageRecallDto
type MessageRecallDto struct {
	PuupeeId *string `json:"puupeeId,omitempty"`
}

// NewMessageRecallDto instantiates a new MessageRecallDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageRecallDto() *MessageRecallDto {
	this := MessageRecallDto{}
	return &this
}

// NewMessageRecallDtoWithDefaults instantiates a new MessageRecallDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageRecallDtoWithDefaults() *MessageRecallDto {
	this := MessageRecallDto{}
	return &this
}

// GetPuupeeId returns the PuupeeId field value if set, zero value otherwise.
func (o *MessageRecallDto) GetPuupeeId() string {
	if o == nil || isNil(o.PuupeeId) {
		var ret string
		return ret
	}
	return *o.PuupeeId
}

// GetPuupeeIdOk returns a tuple with the PuupeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageRecallDto) GetPuupeeIdOk() (*string, bool) {
	if o == nil || isNil(o.PuupeeId) {
    return nil, false
	}
	return o.PuupeeId, true
}

// HasPuupeeId returns a boolean if a field has been set.
func (o *MessageRecallDto) HasPuupeeId() bool {
	if o != nil && !isNil(o.PuupeeId) {
		return true
	}

	return false
}

// SetPuupeeId gets a reference to the given string and assigns it to the PuupeeId field.
func (o *MessageRecallDto) SetPuupeeId(v string) {
	o.PuupeeId = &v
}

func (o MessageRecallDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PuupeeId) {
		toSerialize["puupeeId"] = o.PuupeeId
	}
	return json.Marshal(toSerialize)
}

type NullableMessageRecallDto struct {
	value *MessageRecallDto
	isSet bool
}

func (v NullableMessageRecallDto) Get() *MessageRecallDto {
	return v.value
}

func (v *NullableMessageRecallDto) Set(val *MessageRecallDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageRecallDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageRecallDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageRecallDto(val *MessageRecallDto) *NullableMessageRecallDto {
	return &NullableMessageRecallDto{value: val, isSet: true}
}

func (v NullableMessageRecallDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageRecallDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


