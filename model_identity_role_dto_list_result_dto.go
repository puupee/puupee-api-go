/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// IdentityRoleDtoListResultDto struct for IdentityRoleDtoListResultDto
type IdentityRoleDtoListResultDto struct {
	Items []IdentityRoleDto `json:"items,omitempty"`
}

// NewIdentityRoleDtoListResultDto instantiates a new IdentityRoleDtoListResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityRoleDtoListResultDto() *IdentityRoleDtoListResultDto {
	this := IdentityRoleDtoListResultDto{}
	return &this
}

// NewIdentityRoleDtoListResultDtoWithDefaults instantiates a new IdentityRoleDtoListResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityRoleDtoListResultDtoWithDefaults() *IdentityRoleDtoListResultDto {
	this := IdentityRoleDtoListResultDto{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *IdentityRoleDtoListResultDto) GetItems() []IdentityRoleDto {
	if o == nil || isNil(o.Items) {
		var ret []IdentityRoleDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRoleDtoListResultDto) GetItemsOk() ([]IdentityRoleDto, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *IdentityRoleDtoListResultDto) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []IdentityRoleDto and assigns it to the Items field.
func (o *IdentityRoleDtoListResultDto) SetItems(v []IdentityRoleDto) {
	o.Items = v
}

func (o IdentityRoleDtoListResultDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityRoleDtoListResultDto struct {
	value *IdentityRoleDtoListResultDto
	isSet bool
}

func (v NullableIdentityRoleDtoListResultDto) Get() *IdentityRoleDtoListResultDto {
	return v.value
}

func (v *NullableIdentityRoleDtoListResultDto) Set(val *IdentityRoleDtoListResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityRoleDtoListResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityRoleDtoListResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityRoleDtoListResultDto(val *IdentityRoleDtoListResultDto) *NullableIdentityRoleDtoListResultDto {
	return &NullableIdentityRoleDtoListResultDto{value: val, isSet: true}
}

func (v NullableIdentityRoleDtoListResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityRoleDtoListResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


