/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the Anv2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Anv2{}

// Anv2 struct for Anv2
type Anv2 struct {
	SignedPayload *string `json:"signedPayload,omitempty"`
}

// NewAnv2 instantiates a new Anv2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnv2() *Anv2 {
	this := Anv2{}
	return &this
}

// NewAnv2WithDefaults instantiates a new Anv2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnv2WithDefaults() *Anv2 {
	this := Anv2{}
	return &this
}

// GetSignedPayload returns the SignedPayload field value if set, zero value otherwise.
func (o *Anv2) GetSignedPayload() string {
	if o == nil || IsNil(o.SignedPayload) {
		var ret string
		return ret
	}
	return *o.SignedPayload
}

// GetSignedPayloadOk returns a tuple with the SignedPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Anv2) GetSignedPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.SignedPayload) {
		return nil, false
	}
	return o.SignedPayload, true
}

// HasSignedPayload returns a boolean if a field has been set.
func (o *Anv2) HasSignedPayload() bool {
	if o != nil && !IsNil(o.SignedPayload) {
		return true
	}

	return false
}

// SetSignedPayload gets a reference to the given string and assigns it to the SignedPayload field.
func (o *Anv2) SetSignedPayload(v string) {
	o.SignedPayload = &v
}

func (o Anv2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Anv2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignedPayload) {
		toSerialize["signedPayload"] = o.SignedPayload
	}
	return toSerialize, nil
}

type NullableAnv2 struct {
	value *Anv2
	isSet bool
}

func (v NullableAnv2) Get() *Anv2 {
	return v.value
}

func (v *NullableAnv2) Set(val *Anv2) {
	v.value = val
	v.isSet = true
}

func (v NullableAnv2) IsSet() bool {
	return v.isSet
}

func (v *NullableAnv2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnv2(val *Anv2) *NullableAnv2 {
	return &NullableAnv2{value: val, isSet: true}
}

func (v NullableAnv2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnv2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


