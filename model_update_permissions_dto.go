/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the UpdatePermissionsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePermissionsDto{}

// UpdatePermissionsDto struct for UpdatePermissionsDto
type UpdatePermissionsDto struct {
	Permissions []UpdatePermissionDto `json:"permissions,omitempty"`
}

// NewUpdatePermissionsDto instantiates a new UpdatePermissionsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePermissionsDto() *UpdatePermissionsDto {
	this := UpdatePermissionsDto{}
	return &this
}

// NewUpdatePermissionsDtoWithDefaults instantiates a new UpdatePermissionsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePermissionsDtoWithDefaults() *UpdatePermissionsDto {
	this := UpdatePermissionsDto{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePermissionsDto) GetPermissions() []UpdatePermissionDto {
	if o == nil {
		var ret []UpdatePermissionDto
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePermissionsDto) GetPermissionsOk() ([]UpdatePermissionDto, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UpdatePermissionsDto) HasPermissions() bool {
	if o != nil && IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []UpdatePermissionDto and assigns it to the Permissions field.
func (o *UpdatePermissionsDto) SetPermissions(v []UpdatePermissionDto) {
	o.Permissions = v
}

func (o UpdatePermissionsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePermissionsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableUpdatePermissionsDto struct {
	value *UpdatePermissionsDto
	isSet bool
}

func (v NullableUpdatePermissionsDto) Get() *UpdatePermissionsDto {
	return v.value
}

func (v *NullableUpdatePermissionsDto) Set(val *UpdatePermissionsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePermissionsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePermissionsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePermissionsDto(val *UpdatePermissionsDto) *NullableUpdatePermissionsDto {
	return &NullableUpdatePermissionsDto{value: val, isSet: true}
}

func (v NullableUpdatePermissionsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePermissionsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


