/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
	"time"
)

// checks if the AppleNotificaionDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppleNotificaionDto{}

// AppleNotificaionDto struct for AppleNotificaionDto
type AppleNotificaionDto struct {
	Id *string `json:"id,omitempty"`
	CreationTime *time.Time `json:"creationTime,omitempty"`
	CreatorId *string `json:"creatorId,omitempty"`
	LastModificationTime *time.Time `json:"lastModificationTime,omitempty"`
	LastModifierId *string `json:"lastModifierId,omitempty"`
	IsDeleted *bool `json:"isDeleted,omitempty"`
	DeleterId *string `json:"deleterId,omitempty"`
	DeletionTime *time.Time `json:"deletionTime,omitempty"`
	SignedPayload *string `json:"signedPayload,omitempty"`
}

// NewAppleNotificaionDto instantiates a new AppleNotificaionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppleNotificaionDto() *AppleNotificaionDto {
	this := AppleNotificaionDto{}
	return &this
}

// NewAppleNotificaionDtoWithDefaults instantiates a new AppleNotificaionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppleNotificaionDtoWithDefaults() *AppleNotificaionDto {
	this := AppleNotificaionDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AppleNotificaionDto) SetId(v string) {
	o.Id = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *AppleNotificaionDto) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *AppleNotificaionDto) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModificationTime returns the LastModificationTime field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetLastModificationTime() time.Time {
	if o == nil || IsNil(o.LastModificationTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModificationTime
}

// GetLastModificationTimeOk returns a tuple with the LastModificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetLastModificationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModificationTime) {
		return nil, false
	}
	return o.LastModificationTime, true
}

// HasLastModificationTime returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasLastModificationTime() bool {
	if o != nil && !IsNil(o.LastModificationTime) {
		return true
	}

	return false
}

// SetLastModificationTime gets a reference to the given time.Time and assigns it to the LastModificationTime field.
func (o *AppleNotificaionDto) SetLastModificationTime(v time.Time) {
	o.LastModificationTime = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *AppleNotificaionDto) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *AppleNotificaionDto) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetDeleterId returns the DeleterId field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetDeleterId() string {
	if o == nil || IsNil(o.DeleterId) {
		var ret string
		return ret
	}
	return *o.DeleterId
}

// GetDeleterIdOk returns a tuple with the DeleterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetDeleterIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeleterId) {
		return nil, false
	}
	return o.DeleterId, true
}

// HasDeleterId returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasDeleterId() bool {
	if o != nil && !IsNil(o.DeleterId) {
		return true
	}

	return false
}

// SetDeleterId gets a reference to the given string and assigns it to the DeleterId field.
func (o *AppleNotificaionDto) SetDeleterId(v string) {
	o.DeleterId = &v
}

// GetDeletionTime returns the DeletionTime field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetDeletionTime() time.Time {
	if o == nil || IsNil(o.DeletionTime) {
		var ret time.Time
		return ret
	}
	return *o.DeletionTime
}

// GetDeletionTimeOk returns a tuple with the DeletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetDeletionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletionTime) {
		return nil, false
	}
	return o.DeletionTime, true
}

// HasDeletionTime returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasDeletionTime() bool {
	if o != nil && !IsNil(o.DeletionTime) {
		return true
	}

	return false
}

// SetDeletionTime gets a reference to the given time.Time and assigns it to the DeletionTime field.
func (o *AppleNotificaionDto) SetDeletionTime(v time.Time) {
	o.DeletionTime = &v
}

// GetSignedPayload returns the SignedPayload field value if set, zero value otherwise.
func (o *AppleNotificaionDto) GetSignedPayload() string {
	if o == nil || IsNil(o.SignedPayload) {
		var ret string
		return ret
	}
	return *o.SignedPayload
}

// GetSignedPayloadOk returns a tuple with the SignedPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppleNotificaionDto) GetSignedPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.SignedPayload) {
		return nil, false
	}
	return o.SignedPayload, true
}

// HasSignedPayload returns a boolean if a field has been set.
func (o *AppleNotificaionDto) HasSignedPayload() bool {
	if o != nil && !IsNil(o.SignedPayload) {
		return true
	}

	return false
}

// SetSignedPayload gets a reference to the given string and assigns it to the SignedPayload field.
func (o *AppleNotificaionDto) SetSignedPayload(v string) {
	o.SignedPayload = &v
}

func (o AppleNotificaionDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppleNotificaionDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.LastModificationTime) {
		toSerialize["lastModificationTime"] = o.LastModificationTime
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if !IsNil(o.DeleterId) {
		toSerialize["deleterId"] = o.DeleterId
	}
	if !IsNil(o.DeletionTime) {
		toSerialize["deletionTime"] = o.DeletionTime
	}
	if !IsNil(o.SignedPayload) {
		toSerialize["signedPayload"] = o.SignedPayload
	}
	return toSerialize, nil
}

type NullableAppleNotificaionDto struct {
	value *AppleNotificaionDto
	isSet bool
}

func (v NullableAppleNotificaionDto) Get() *AppleNotificaionDto {
	return v.value
}

func (v *NullableAppleNotificaionDto) Set(val *AppleNotificaionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAppleNotificaionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAppleNotificaionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppleNotificaionDto(val *AppleNotificaionDto) *NullableAppleNotificaionDto {
	return &NullableAppleNotificaionDto{value: val, isSet: true}
}

func (v NullableAppleNotificaionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppleNotificaionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


