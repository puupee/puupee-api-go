/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the ExtensionPropertyApiUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionPropertyApiUpdateDto{}

// ExtensionPropertyApiUpdateDto struct for ExtensionPropertyApiUpdateDto
type ExtensionPropertyApiUpdateDto struct {
	IsAvailable *bool `json:"isAvailable,omitempty"`
}

// NewExtensionPropertyApiUpdateDto instantiates a new ExtensionPropertyApiUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionPropertyApiUpdateDto() *ExtensionPropertyApiUpdateDto {
	this := ExtensionPropertyApiUpdateDto{}
	return &this
}

// NewExtensionPropertyApiUpdateDtoWithDefaults instantiates a new ExtensionPropertyApiUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionPropertyApiUpdateDtoWithDefaults() *ExtensionPropertyApiUpdateDto {
	this := ExtensionPropertyApiUpdateDto{}
	return &this
}

// GetIsAvailable returns the IsAvailable field value if set, zero value otherwise.
func (o *ExtensionPropertyApiUpdateDto) GetIsAvailable() bool {
	if o == nil || IsNil(o.IsAvailable) {
		var ret bool
		return ret
	}
	return *o.IsAvailable
}

// GetIsAvailableOk returns a tuple with the IsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionPropertyApiUpdateDto) GetIsAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAvailable) {
		return nil, false
	}
	return o.IsAvailable, true
}

// HasIsAvailable returns a boolean if a field has been set.
func (o *ExtensionPropertyApiUpdateDto) HasIsAvailable() bool {
	if o != nil && !IsNil(o.IsAvailable) {
		return true
	}

	return false
}

// SetIsAvailable gets a reference to the given bool and assigns it to the IsAvailable field.
func (o *ExtensionPropertyApiUpdateDto) SetIsAvailable(v bool) {
	o.IsAvailable = &v
}

func (o ExtensionPropertyApiUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionPropertyApiUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsAvailable) {
		toSerialize["isAvailable"] = o.IsAvailable
	}
	return toSerialize, nil
}

type NullableExtensionPropertyApiUpdateDto struct {
	value *ExtensionPropertyApiUpdateDto
	isSet bool
}

func (v NullableExtensionPropertyApiUpdateDto) Get() *ExtensionPropertyApiUpdateDto {
	return v.value
}

func (v *NullableExtensionPropertyApiUpdateDto) Set(val *ExtensionPropertyApiUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionPropertyApiUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionPropertyApiUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionPropertyApiUpdateDto(val *ExtensionPropertyApiUpdateDto) *NullableExtensionPropertyApiUpdateDto {
	return &NullableExtensionPropertyApiUpdateDto{value: val, isSet: true}
}

func (v NullableExtensionPropertyApiUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionPropertyApiUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


