/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the Receipt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Receipt{}

// Receipt struct for Receipt
type Receipt struct {
	ReceiptType NullableString `json:"receipt_type,omitempty"`
	AdamId *int32 `json:"adam_id,omitempty"`
	AppItemId *int32 `json:"app_item_id,omitempty"`
	BundleId NullableString `json:"bundle_id,omitempty"`
	ApplicationVersion NullableString `json:"application_version,omitempty"`
	DownloadId *int32 `json:"download_id,omitempty"`
	VersionExternalIdentifier *int32 `json:"version_external_identifier,omitempty"`
	ReceiptCreationDate NullableString `json:"receipt_creation_date,omitempty"`
	ReceiptCreationDateMs NullableString `json:"receipt_creation_date_ms,omitempty"`
	ReceiptCreationDatePst NullableString `json:"receipt_creation_date_pst,omitempty"`
	RequestDate NullableString `json:"request_date,omitempty"`
	RequestDateMs NullableString `json:"request_date_ms,omitempty"`
	RequestDatePst NullableString `json:"request_date_pst,omitempty"`
	OriginalPurchaseDate NullableString `json:"original_purchase_date,omitempty"`
	OriginalPurchaseDateMs NullableString `json:"original_purchase_date_ms,omitempty"`
	OriginalPurchaseDatePst NullableString `json:"original_purchase_date_pst,omitempty"`
	OriginalApplicationVersion NullableString `json:"original_application_version,omitempty"`
	InApp []InApp `json:"in_app,omitempty"`
}

// NewReceipt instantiates a new Receipt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReceipt() *Receipt {
	this := Receipt{}
	return &this
}

// NewReceiptWithDefaults instantiates a new Receipt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReceiptWithDefaults() *Receipt {
	this := Receipt{}
	return &this
}

// GetReceiptType returns the ReceiptType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetReceiptType() string {
	if o == nil || IsNil(o.ReceiptType.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiptType.Get()
}

// GetReceiptTypeOk returns a tuple with the ReceiptType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetReceiptTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiptType.Get(), o.ReceiptType.IsSet()
}

// HasReceiptType returns a boolean if a field has been set.
func (o *Receipt) HasReceiptType() bool {
	if o != nil && o.ReceiptType.IsSet() {
		return true
	}

	return false
}

// SetReceiptType gets a reference to the given NullableString and assigns it to the ReceiptType field.
func (o *Receipt) SetReceiptType(v string) {
	o.ReceiptType.Set(&v)
}
// SetReceiptTypeNil sets the value for ReceiptType to be an explicit nil
func (o *Receipt) SetReceiptTypeNil() {
	o.ReceiptType.Set(nil)
}

// UnsetReceiptType ensures that no value is present for ReceiptType, not even an explicit nil
func (o *Receipt) UnsetReceiptType() {
	o.ReceiptType.Unset()
}

// GetAdamId returns the AdamId field value if set, zero value otherwise.
func (o *Receipt) GetAdamId() int32 {
	if o == nil || IsNil(o.AdamId) {
		var ret int32
		return ret
	}
	return *o.AdamId
}

// GetAdamIdOk returns a tuple with the AdamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetAdamIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AdamId) {
		return nil, false
	}
	return o.AdamId, true
}

// HasAdamId returns a boolean if a field has been set.
func (o *Receipt) HasAdamId() bool {
	if o != nil && !IsNil(o.AdamId) {
		return true
	}

	return false
}

// SetAdamId gets a reference to the given int32 and assigns it to the AdamId field.
func (o *Receipt) SetAdamId(v int32) {
	o.AdamId = &v
}

// GetAppItemId returns the AppItemId field value if set, zero value otherwise.
func (o *Receipt) GetAppItemId() int32 {
	if o == nil || IsNil(o.AppItemId) {
		var ret int32
		return ret
	}
	return *o.AppItemId
}

// GetAppItemIdOk returns a tuple with the AppItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetAppItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AppItemId) {
		return nil, false
	}
	return o.AppItemId, true
}

// HasAppItemId returns a boolean if a field has been set.
func (o *Receipt) HasAppItemId() bool {
	if o != nil && !IsNil(o.AppItemId) {
		return true
	}

	return false
}

// SetAppItemId gets a reference to the given int32 and assigns it to the AppItemId field.
func (o *Receipt) SetAppItemId(v int32) {
	o.AppItemId = &v
}

// GetBundleId returns the BundleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetBundleId() string {
	if o == nil || IsNil(o.BundleId.Get()) {
		var ret string
		return ret
	}
	return *o.BundleId.Get()
}

// GetBundleIdOk returns a tuple with the BundleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetBundleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BundleId.Get(), o.BundleId.IsSet()
}

// HasBundleId returns a boolean if a field has been set.
func (o *Receipt) HasBundleId() bool {
	if o != nil && o.BundleId.IsSet() {
		return true
	}

	return false
}

// SetBundleId gets a reference to the given NullableString and assigns it to the BundleId field.
func (o *Receipt) SetBundleId(v string) {
	o.BundleId.Set(&v)
}
// SetBundleIdNil sets the value for BundleId to be an explicit nil
func (o *Receipt) SetBundleIdNil() {
	o.BundleId.Set(nil)
}

// UnsetBundleId ensures that no value is present for BundleId, not even an explicit nil
func (o *Receipt) UnsetBundleId() {
	o.BundleId.Unset()
}

// GetApplicationVersion returns the ApplicationVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetApplicationVersion() string {
	if o == nil || IsNil(o.ApplicationVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ApplicationVersion.Get()
}

// GetApplicationVersionOk returns a tuple with the ApplicationVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetApplicationVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationVersion.Get(), o.ApplicationVersion.IsSet()
}

// HasApplicationVersion returns a boolean if a field has been set.
func (o *Receipt) HasApplicationVersion() bool {
	if o != nil && o.ApplicationVersion.IsSet() {
		return true
	}

	return false
}

// SetApplicationVersion gets a reference to the given NullableString and assigns it to the ApplicationVersion field.
func (o *Receipt) SetApplicationVersion(v string) {
	o.ApplicationVersion.Set(&v)
}
// SetApplicationVersionNil sets the value for ApplicationVersion to be an explicit nil
func (o *Receipt) SetApplicationVersionNil() {
	o.ApplicationVersion.Set(nil)
}

// UnsetApplicationVersion ensures that no value is present for ApplicationVersion, not even an explicit nil
func (o *Receipt) UnsetApplicationVersion() {
	o.ApplicationVersion.Unset()
}

// GetDownloadId returns the DownloadId field value if set, zero value otherwise.
func (o *Receipt) GetDownloadId() int32 {
	if o == nil || IsNil(o.DownloadId) {
		var ret int32
		return ret
	}
	return *o.DownloadId
}

// GetDownloadIdOk returns a tuple with the DownloadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetDownloadIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DownloadId) {
		return nil, false
	}
	return o.DownloadId, true
}

// HasDownloadId returns a boolean if a field has been set.
func (o *Receipt) HasDownloadId() bool {
	if o != nil && !IsNil(o.DownloadId) {
		return true
	}

	return false
}

// SetDownloadId gets a reference to the given int32 and assigns it to the DownloadId field.
func (o *Receipt) SetDownloadId(v int32) {
	o.DownloadId = &v
}

// GetVersionExternalIdentifier returns the VersionExternalIdentifier field value if set, zero value otherwise.
func (o *Receipt) GetVersionExternalIdentifier() int32 {
	if o == nil || IsNil(o.VersionExternalIdentifier) {
		var ret int32
		return ret
	}
	return *o.VersionExternalIdentifier
}

// GetVersionExternalIdentifierOk returns a tuple with the VersionExternalIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetVersionExternalIdentifierOk() (*int32, bool) {
	if o == nil || IsNil(o.VersionExternalIdentifier) {
		return nil, false
	}
	return o.VersionExternalIdentifier, true
}

// HasVersionExternalIdentifier returns a boolean if a field has been set.
func (o *Receipt) HasVersionExternalIdentifier() bool {
	if o != nil && !IsNil(o.VersionExternalIdentifier) {
		return true
	}

	return false
}

// SetVersionExternalIdentifier gets a reference to the given int32 and assigns it to the VersionExternalIdentifier field.
func (o *Receipt) SetVersionExternalIdentifier(v int32) {
	o.VersionExternalIdentifier = &v
}

// GetReceiptCreationDate returns the ReceiptCreationDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetReceiptCreationDate() string {
	if o == nil || IsNil(o.ReceiptCreationDate.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiptCreationDate.Get()
}

// GetReceiptCreationDateOk returns a tuple with the ReceiptCreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetReceiptCreationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiptCreationDate.Get(), o.ReceiptCreationDate.IsSet()
}

// HasReceiptCreationDate returns a boolean if a field has been set.
func (o *Receipt) HasReceiptCreationDate() bool {
	if o != nil && o.ReceiptCreationDate.IsSet() {
		return true
	}

	return false
}

// SetReceiptCreationDate gets a reference to the given NullableString and assigns it to the ReceiptCreationDate field.
func (o *Receipt) SetReceiptCreationDate(v string) {
	o.ReceiptCreationDate.Set(&v)
}
// SetReceiptCreationDateNil sets the value for ReceiptCreationDate to be an explicit nil
func (o *Receipt) SetReceiptCreationDateNil() {
	o.ReceiptCreationDate.Set(nil)
}

// UnsetReceiptCreationDate ensures that no value is present for ReceiptCreationDate, not even an explicit nil
func (o *Receipt) UnsetReceiptCreationDate() {
	o.ReceiptCreationDate.Unset()
}

// GetReceiptCreationDateMs returns the ReceiptCreationDateMs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetReceiptCreationDateMs() string {
	if o == nil || IsNil(o.ReceiptCreationDateMs.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiptCreationDateMs.Get()
}

// GetReceiptCreationDateMsOk returns a tuple with the ReceiptCreationDateMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetReceiptCreationDateMsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiptCreationDateMs.Get(), o.ReceiptCreationDateMs.IsSet()
}

// HasReceiptCreationDateMs returns a boolean if a field has been set.
func (o *Receipt) HasReceiptCreationDateMs() bool {
	if o != nil && o.ReceiptCreationDateMs.IsSet() {
		return true
	}

	return false
}

// SetReceiptCreationDateMs gets a reference to the given NullableString and assigns it to the ReceiptCreationDateMs field.
func (o *Receipt) SetReceiptCreationDateMs(v string) {
	o.ReceiptCreationDateMs.Set(&v)
}
// SetReceiptCreationDateMsNil sets the value for ReceiptCreationDateMs to be an explicit nil
func (o *Receipt) SetReceiptCreationDateMsNil() {
	o.ReceiptCreationDateMs.Set(nil)
}

// UnsetReceiptCreationDateMs ensures that no value is present for ReceiptCreationDateMs, not even an explicit nil
func (o *Receipt) UnsetReceiptCreationDateMs() {
	o.ReceiptCreationDateMs.Unset()
}

// GetReceiptCreationDatePst returns the ReceiptCreationDatePst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetReceiptCreationDatePst() string {
	if o == nil || IsNil(o.ReceiptCreationDatePst.Get()) {
		var ret string
		return ret
	}
	return *o.ReceiptCreationDatePst.Get()
}

// GetReceiptCreationDatePstOk returns a tuple with the ReceiptCreationDatePst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetReceiptCreationDatePstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReceiptCreationDatePst.Get(), o.ReceiptCreationDatePst.IsSet()
}

// HasReceiptCreationDatePst returns a boolean if a field has been set.
func (o *Receipt) HasReceiptCreationDatePst() bool {
	if o != nil && o.ReceiptCreationDatePst.IsSet() {
		return true
	}

	return false
}

// SetReceiptCreationDatePst gets a reference to the given NullableString and assigns it to the ReceiptCreationDatePst field.
func (o *Receipt) SetReceiptCreationDatePst(v string) {
	o.ReceiptCreationDatePst.Set(&v)
}
// SetReceiptCreationDatePstNil sets the value for ReceiptCreationDatePst to be an explicit nil
func (o *Receipt) SetReceiptCreationDatePstNil() {
	o.ReceiptCreationDatePst.Set(nil)
}

// UnsetReceiptCreationDatePst ensures that no value is present for ReceiptCreationDatePst, not even an explicit nil
func (o *Receipt) UnsetReceiptCreationDatePst() {
	o.ReceiptCreationDatePst.Unset()
}

// GetRequestDate returns the RequestDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetRequestDate() string {
	if o == nil || IsNil(o.RequestDate.Get()) {
		var ret string
		return ret
	}
	return *o.RequestDate.Get()
}

// GetRequestDateOk returns a tuple with the RequestDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetRequestDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestDate.Get(), o.RequestDate.IsSet()
}

// HasRequestDate returns a boolean if a field has been set.
func (o *Receipt) HasRequestDate() bool {
	if o != nil && o.RequestDate.IsSet() {
		return true
	}

	return false
}

// SetRequestDate gets a reference to the given NullableString and assigns it to the RequestDate field.
func (o *Receipt) SetRequestDate(v string) {
	o.RequestDate.Set(&v)
}
// SetRequestDateNil sets the value for RequestDate to be an explicit nil
func (o *Receipt) SetRequestDateNil() {
	o.RequestDate.Set(nil)
}

// UnsetRequestDate ensures that no value is present for RequestDate, not even an explicit nil
func (o *Receipt) UnsetRequestDate() {
	o.RequestDate.Unset()
}

// GetRequestDateMs returns the RequestDateMs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetRequestDateMs() string {
	if o == nil || IsNil(o.RequestDateMs.Get()) {
		var ret string
		return ret
	}
	return *o.RequestDateMs.Get()
}

// GetRequestDateMsOk returns a tuple with the RequestDateMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetRequestDateMsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestDateMs.Get(), o.RequestDateMs.IsSet()
}

// HasRequestDateMs returns a boolean if a field has been set.
func (o *Receipt) HasRequestDateMs() bool {
	if o != nil && o.RequestDateMs.IsSet() {
		return true
	}

	return false
}

// SetRequestDateMs gets a reference to the given NullableString and assigns it to the RequestDateMs field.
func (o *Receipt) SetRequestDateMs(v string) {
	o.RequestDateMs.Set(&v)
}
// SetRequestDateMsNil sets the value for RequestDateMs to be an explicit nil
func (o *Receipt) SetRequestDateMsNil() {
	o.RequestDateMs.Set(nil)
}

// UnsetRequestDateMs ensures that no value is present for RequestDateMs, not even an explicit nil
func (o *Receipt) UnsetRequestDateMs() {
	o.RequestDateMs.Unset()
}

// GetRequestDatePst returns the RequestDatePst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetRequestDatePst() string {
	if o == nil || IsNil(o.RequestDatePst.Get()) {
		var ret string
		return ret
	}
	return *o.RequestDatePst.Get()
}

// GetRequestDatePstOk returns a tuple with the RequestDatePst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetRequestDatePstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestDatePst.Get(), o.RequestDatePst.IsSet()
}

// HasRequestDatePst returns a boolean if a field has been set.
func (o *Receipt) HasRequestDatePst() bool {
	if o != nil && o.RequestDatePst.IsSet() {
		return true
	}

	return false
}

// SetRequestDatePst gets a reference to the given NullableString and assigns it to the RequestDatePst field.
func (o *Receipt) SetRequestDatePst(v string) {
	o.RequestDatePst.Set(&v)
}
// SetRequestDatePstNil sets the value for RequestDatePst to be an explicit nil
func (o *Receipt) SetRequestDatePstNil() {
	o.RequestDatePst.Set(nil)
}

// UnsetRequestDatePst ensures that no value is present for RequestDatePst, not even an explicit nil
func (o *Receipt) UnsetRequestDatePst() {
	o.RequestDatePst.Unset()
}

// GetOriginalPurchaseDate returns the OriginalPurchaseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetOriginalPurchaseDate() string {
	if o == nil || IsNil(o.OriginalPurchaseDate.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalPurchaseDate.Get()
}

// GetOriginalPurchaseDateOk returns a tuple with the OriginalPurchaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetOriginalPurchaseDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalPurchaseDate.Get(), o.OriginalPurchaseDate.IsSet()
}

// HasOriginalPurchaseDate returns a boolean if a field has been set.
func (o *Receipt) HasOriginalPurchaseDate() bool {
	if o != nil && o.OriginalPurchaseDate.IsSet() {
		return true
	}

	return false
}

// SetOriginalPurchaseDate gets a reference to the given NullableString and assigns it to the OriginalPurchaseDate field.
func (o *Receipt) SetOriginalPurchaseDate(v string) {
	o.OriginalPurchaseDate.Set(&v)
}
// SetOriginalPurchaseDateNil sets the value for OriginalPurchaseDate to be an explicit nil
func (o *Receipt) SetOriginalPurchaseDateNil() {
	o.OriginalPurchaseDate.Set(nil)
}

// UnsetOriginalPurchaseDate ensures that no value is present for OriginalPurchaseDate, not even an explicit nil
func (o *Receipt) UnsetOriginalPurchaseDate() {
	o.OriginalPurchaseDate.Unset()
}

// GetOriginalPurchaseDateMs returns the OriginalPurchaseDateMs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetOriginalPurchaseDateMs() string {
	if o == nil || IsNil(o.OriginalPurchaseDateMs.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalPurchaseDateMs.Get()
}

// GetOriginalPurchaseDateMsOk returns a tuple with the OriginalPurchaseDateMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetOriginalPurchaseDateMsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalPurchaseDateMs.Get(), o.OriginalPurchaseDateMs.IsSet()
}

// HasOriginalPurchaseDateMs returns a boolean if a field has been set.
func (o *Receipt) HasOriginalPurchaseDateMs() bool {
	if o != nil && o.OriginalPurchaseDateMs.IsSet() {
		return true
	}

	return false
}

// SetOriginalPurchaseDateMs gets a reference to the given NullableString and assigns it to the OriginalPurchaseDateMs field.
func (o *Receipt) SetOriginalPurchaseDateMs(v string) {
	o.OriginalPurchaseDateMs.Set(&v)
}
// SetOriginalPurchaseDateMsNil sets the value for OriginalPurchaseDateMs to be an explicit nil
func (o *Receipt) SetOriginalPurchaseDateMsNil() {
	o.OriginalPurchaseDateMs.Set(nil)
}

// UnsetOriginalPurchaseDateMs ensures that no value is present for OriginalPurchaseDateMs, not even an explicit nil
func (o *Receipt) UnsetOriginalPurchaseDateMs() {
	o.OriginalPurchaseDateMs.Unset()
}

// GetOriginalPurchaseDatePst returns the OriginalPurchaseDatePst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetOriginalPurchaseDatePst() string {
	if o == nil || IsNil(o.OriginalPurchaseDatePst.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalPurchaseDatePst.Get()
}

// GetOriginalPurchaseDatePstOk returns a tuple with the OriginalPurchaseDatePst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetOriginalPurchaseDatePstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalPurchaseDatePst.Get(), o.OriginalPurchaseDatePst.IsSet()
}

// HasOriginalPurchaseDatePst returns a boolean if a field has been set.
func (o *Receipt) HasOriginalPurchaseDatePst() bool {
	if o != nil && o.OriginalPurchaseDatePst.IsSet() {
		return true
	}

	return false
}

// SetOriginalPurchaseDatePst gets a reference to the given NullableString and assigns it to the OriginalPurchaseDatePst field.
func (o *Receipt) SetOriginalPurchaseDatePst(v string) {
	o.OriginalPurchaseDatePst.Set(&v)
}
// SetOriginalPurchaseDatePstNil sets the value for OriginalPurchaseDatePst to be an explicit nil
func (o *Receipt) SetOriginalPurchaseDatePstNil() {
	o.OriginalPurchaseDatePst.Set(nil)
}

// UnsetOriginalPurchaseDatePst ensures that no value is present for OriginalPurchaseDatePst, not even an explicit nil
func (o *Receipt) UnsetOriginalPurchaseDatePst() {
	o.OriginalPurchaseDatePst.Unset()
}

// GetOriginalApplicationVersion returns the OriginalApplicationVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetOriginalApplicationVersion() string {
	if o == nil || IsNil(o.OriginalApplicationVersion.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalApplicationVersion.Get()
}

// GetOriginalApplicationVersionOk returns a tuple with the OriginalApplicationVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetOriginalApplicationVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalApplicationVersion.Get(), o.OriginalApplicationVersion.IsSet()
}

// HasOriginalApplicationVersion returns a boolean if a field has been set.
func (o *Receipt) HasOriginalApplicationVersion() bool {
	if o != nil && o.OriginalApplicationVersion.IsSet() {
		return true
	}

	return false
}

// SetOriginalApplicationVersion gets a reference to the given NullableString and assigns it to the OriginalApplicationVersion field.
func (o *Receipt) SetOriginalApplicationVersion(v string) {
	o.OriginalApplicationVersion.Set(&v)
}
// SetOriginalApplicationVersionNil sets the value for OriginalApplicationVersion to be an explicit nil
func (o *Receipt) SetOriginalApplicationVersionNil() {
	o.OriginalApplicationVersion.Set(nil)
}

// UnsetOriginalApplicationVersion ensures that no value is present for OriginalApplicationVersion, not even an explicit nil
func (o *Receipt) UnsetOriginalApplicationVersion() {
	o.OriginalApplicationVersion.Unset()
}

// GetInApp returns the InApp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Receipt) GetInApp() []InApp {
	if o == nil {
		var ret []InApp
		return ret
	}
	return o.InApp
}

// GetInAppOk returns a tuple with the InApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Receipt) GetInAppOk() ([]InApp, bool) {
	if o == nil || IsNil(o.InApp) {
		return nil, false
	}
	return o.InApp, true
}

// HasInApp returns a boolean if a field has been set.
func (o *Receipt) HasInApp() bool {
	if o != nil && IsNil(o.InApp) {
		return true
	}

	return false
}

// SetInApp gets a reference to the given []InApp and assigns it to the InApp field.
func (o *Receipt) SetInApp(v []InApp) {
	o.InApp = v
}

func (o Receipt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Receipt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ReceiptType.IsSet() {
		toSerialize["receipt_type"] = o.ReceiptType.Get()
	}
	if !IsNil(o.AdamId) {
		toSerialize["adam_id"] = o.AdamId
	}
	if !IsNil(o.AppItemId) {
		toSerialize["app_item_id"] = o.AppItemId
	}
	if o.BundleId.IsSet() {
		toSerialize["bundle_id"] = o.BundleId.Get()
	}
	if o.ApplicationVersion.IsSet() {
		toSerialize["application_version"] = o.ApplicationVersion.Get()
	}
	if !IsNil(o.DownloadId) {
		toSerialize["download_id"] = o.DownloadId
	}
	if !IsNil(o.VersionExternalIdentifier) {
		toSerialize["version_external_identifier"] = o.VersionExternalIdentifier
	}
	if o.ReceiptCreationDate.IsSet() {
		toSerialize["receipt_creation_date"] = o.ReceiptCreationDate.Get()
	}
	if o.ReceiptCreationDateMs.IsSet() {
		toSerialize["receipt_creation_date_ms"] = o.ReceiptCreationDateMs.Get()
	}
	if o.ReceiptCreationDatePst.IsSet() {
		toSerialize["receipt_creation_date_pst"] = o.ReceiptCreationDatePst.Get()
	}
	if o.RequestDate.IsSet() {
		toSerialize["request_date"] = o.RequestDate.Get()
	}
	if o.RequestDateMs.IsSet() {
		toSerialize["request_date_ms"] = o.RequestDateMs.Get()
	}
	if o.RequestDatePst.IsSet() {
		toSerialize["request_date_pst"] = o.RequestDatePst.Get()
	}
	if o.OriginalPurchaseDate.IsSet() {
		toSerialize["original_purchase_date"] = o.OriginalPurchaseDate.Get()
	}
	if o.OriginalPurchaseDateMs.IsSet() {
		toSerialize["original_purchase_date_ms"] = o.OriginalPurchaseDateMs.Get()
	}
	if o.OriginalPurchaseDatePst.IsSet() {
		toSerialize["original_purchase_date_pst"] = o.OriginalPurchaseDatePst.Get()
	}
	if o.OriginalApplicationVersion.IsSet() {
		toSerialize["original_application_version"] = o.OriginalApplicationVersion.Get()
	}
	if o.InApp != nil {
		toSerialize["in_app"] = o.InApp
	}
	return toSerialize, nil
}

type NullableReceipt struct {
	value *Receipt
	isSet bool
}

func (v NullableReceipt) Get() *Receipt {
	return v.value
}

func (v *NullableReceipt) Set(val *Receipt) {
	v.value = val
	v.isSet = true
}

func (v NullableReceipt) IsSet() bool {
	return v.isSet
}

func (v *NullableReceipt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceipt(val *Receipt) *NullableReceipt {
	return &NullableReceipt{value: val, isSet: true}
}

func (v NullableReceipt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceipt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


