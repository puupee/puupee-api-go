/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the ExtensionPropertyUiFormDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionPropertyUiFormDto{}

// ExtensionPropertyUiFormDto struct for ExtensionPropertyUiFormDto
type ExtensionPropertyUiFormDto struct {
	IsVisible *bool `json:"isVisible,omitempty"`
}

// NewExtensionPropertyUiFormDto instantiates a new ExtensionPropertyUiFormDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionPropertyUiFormDto() *ExtensionPropertyUiFormDto {
	this := ExtensionPropertyUiFormDto{}
	return &this
}

// NewExtensionPropertyUiFormDtoWithDefaults instantiates a new ExtensionPropertyUiFormDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionPropertyUiFormDtoWithDefaults() *ExtensionPropertyUiFormDto {
	this := ExtensionPropertyUiFormDto{}
	return &this
}

// GetIsVisible returns the IsVisible field value if set, zero value otherwise.
func (o *ExtensionPropertyUiFormDto) GetIsVisible() bool {
	if o == nil || IsNil(o.IsVisible) {
		var ret bool
		return ret
	}
	return *o.IsVisible
}

// GetIsVisibleOk returns a tuple with the IsVisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionPropertyUiFormDto) GetIsVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVisible) {
		return nil, false
	}
	return o.IsVisible, true
}

// HasIsVisible returns a boolean if a field has been set.
func (o *ExtensionPropertyUiFormDto) HasIsVisible() bool {
	if o != nil && !IsNil(o.IsVisible) {
		return true
	}

	return false
}

// SetIsVisible gets a reference to the given bool and assigns it to the IsVisible field.
func (o *ExtensionPropertyUiFormDto) SetIsVisible(v bool) {
	o.IsVisible = &v
}

func (o ExtensionPropertyUiFormDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionPropertyUiFormDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsVisible) {
		toSerialize["isVisible"] = o.IsVisible
	}
	return toSerialize, nil
}

type NullableExtensionPropertyUiFormDto struct {
	value *ExtensionPropertyUiFormDto
	isSet bool
}

func (v NullableExtensionPropertyUiFormDto) Get() *ExtensionPropertyUiFormDto {
	return v.value
}

func (v *NullableExtensionPropertyUiFormDto) Set(val *ExtensionPropertyUiFormDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionPropertyUiFormDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionPropertyUiFormDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionPropertyUiFormDto(val *ExtensionPropertyUiFormDto) *NullableExtensionPropertyUiFormDto {
	return &NullableExtensionPropertyUiFormDto{value: val, isSet: true}
}

func (v NullableExtensionPropertyUiFormDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionPropertyUiFormDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


