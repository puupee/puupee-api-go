/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the RefreshDeviceStatusDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshDeviceStatusDto{}

// RefreshDeviceStatusDto struct for RefreshDeviceStatusDto
type RefreshDeviceStatusDto struct {
	Token NullableString `json:"token,omitempty"`
	Status NullableString `json:"status,omitempty"`
}

// NewRefreshDeviceStatusDto instantiates a new RefreshDeviceStatusDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshDeviceStatusDto() *RefreshDeviceStatusDto {
	this := RefreshDeviceStatusDto{}
	return &this
}

// NewRefreshDeviceStatusDtoWithDefaults instantiates a new RefreshDeviceStatusDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshDeviceStatusDtoWithDefaults() *RefreshDeviceStatusDto {
	this := RefreshDeviceStatusDto{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RefreshDeviceStatusDto) GetToken() string {
	if o == nil || IsNil(o.Token.Get()) {
		var ret string
		return ret
	}
	return *o.Token.Get()
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RefreshDeviceStatusDto) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token.Get(), o.Token.IsSet()
}

// HasToken returns a boolean if a field has been set.
func (o *RefreshDeviceStatusDto) HasToken() bool {
	if o != nil && o.Token.IsSet() {
		return true
	}

	return false
}

// SetToken gets a reference to the given NullableString and assigns it to the Token field.
func (o *RefreshDeviceStatusDto) SetToken(v string) {
	o.Token.Set(&v)
}
// SetTokenNil sets the value for Token to be an explicit nil
func (o *RefreshDeviceStatusDto) SetTokenNil() {
	o.Token.Set(nil)
}

// UnsetToken ensures that no value is present for Token, not even an explicit nil
func (o *RefreshDeviceStatusDto) UnsetToken() {
	o.Token.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RefreshDeviceStatusDto) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RefreshDeviceStatusDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *RefreshDeviceStatusDto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *RefreshDeviceStatusDto) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *RefreshDeviceStatusDto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *RefreshDeviceStatusDto) UnsetStatus() {
	o.Status.Unset()
}

func (o RefreshDeviceStatusDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshDeviceStatusDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Token.IsSet() {
		toSerialize["token"] = o.Token.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	return toSerialize, nil
}

type NullableRefreshDeviceStatusDto struct {
	value *RefreshDeviceStatusDto
	isSet bool
}

func (v NullableRefreshDeviceStatusDto) Get() *RefreshDeviceStatusDto {
	return v.value
}

func (v *NullableRefreshDeviceStatusDto) Set(val *RefreshDeviceStatusDto) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshDeviceStatusDto) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshDeviceStatusDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshDeviceStatusDto(val *RefreshDeviceStatusDto) *NullableRefreshDeviceStatusDto {
	return &NullableRefreshDeviceStatusDto{value: val, isSet: true}
}

func (v NullableRefreshDeviceStatusDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshDeviceStatusDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


