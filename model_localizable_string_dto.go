/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the LocalizableStringDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocalizableStringDto{}

// LocalizableStringDto struct for LocalizableStringDto
type LocalizableStringDto struct {
	Name *string `json:"name,omitempty"`
	Resource *string `json:"resource,omitempty"`
}

// NewLocalizableStringDto instantiates a new LocalizableStringDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalizableStringDto() *LocalizableStringDto {
	this := LocalizableStringDto{}
	return &this
}

// NewLocalizableStringDtoWithDefaults instantiates a new LocalizableStringDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalizableStringDtoWithDefaults() *LocalizableStringDto {
	this := LocalizableStringDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LocalizableStringDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalizableStringDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LocalizableStringDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LocalizableStringDto) SetName(v string) {
	o.Name = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *LocalizableStringDto) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalizableStringDto) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *LocalizableStringDto) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *LocalizableStringDto) SetResource(v string) {
	o.Resource = &v
}

func (o LocalizableStringDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalizableStringDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	return toSerialize, nil
}

type NullableLocalizableStringDto struct {
	value *LocalizableStringDto
	isSet bool
}

func (v NullableLocalizableStringDto) Get() *LocalizableStringDto {
	return v.value
}

func (v *NullableLocalizableStringDto) Set(val *LocalizableStringDto) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalizableStringDto) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalizableStringDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalizableStringDto(val *LocalizableStringDto) *NullableLocalizableStringDto {
	return &NullableLocalizableStringDto{value: val, isSet: true}
}

func (v NullableLocalizableStringDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalizableStringDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


