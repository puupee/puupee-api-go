/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the CreateOrUpdateAppPricingItemDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateAppPricingItemDto{}

// CreateOrUpdateAppPricingItemDto struct for CreateOrUpdateAppPricingItemDto
type CreateOrUpdateAppPricingItemDto struct {
	Name NullableString `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	LinkUrl NullableString `json:"linkUrl,omitempty"`
	Display NullableString `json:"display,omitempty"`
	AppId *string `json:"appId,omitempty"`
	IsAvailable *bool `json:"isAvailable,omitempty"`
	HasValue *bool `json:"hasValue,omitempty"`
	SortIndex *int32 `json:"sortIndex,omitempty"`
}

// NewCreateOrUpdateAppPricingItemDto instantiates a new CreateOrUpdateAppPricingItemDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateAppPricingItemDto() *CreateOrUpdateAppPricingItemDto {
	this := CreateOrUpdateAppPricingItemDto{}
	return &this
}

// NewCreateOrUpdateAppPricingItemDtoWithDefaults instantiates a new CreateOrUpdateAppPricingItemDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateAppPricingItemDtoWithDefaults() *CreateOrUpdateAppPricingItemDto {
	this := CreateOrUpdateAppPricingItemDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppPricingItemDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppPricingItemDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateOrUpdateAppPricingItemDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateOrUpdateAppPricingItemDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateOrUpdateAppPricingItemDto) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppPricingItemDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppPricingItemDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateOrUpdateAppPricingItemDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateOrUpdateAppPricingItemDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateOrUpdateAppPricingItemDto) UnsetDescription() {
	o.Description.Unset()
}

// GetLinkUrl returns the LinkUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppPricingItemDto) GetLinkUrl() string {
	if o == nil || IsNil(o.LinkUrl.Get()) {
		var ret string
		return ret
	}
	return *o.LinkUrl.Get()
}

// GetLinkUrlOk returns a tuple with the LinkUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppPricingItemDto) GetLinkUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkUrl.Get(), o.LinkUrl.IsSet()
}

// HasLinkUrl returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasLinkUrl() bool {
	if o != nil && o.LinkUrl.IsSet() {
		return true
	}

	return false
}

// SetLinkUrl gets a reference to the given NullableString and assigns it to the LinkUrl field.
func (o *CreateOrUpdateAppPricingItemDto) SetLinkUrl(v string) {
	o.LinkUrl.Set(&v)
}
// SetLinkUrlNil sets the value for LinkUrl to be an explicit nil
func (o *CreateOrUpdateAppPricingItemDto) SetLinkUrlNil() {
	o.LinkUrl.Set(nil)
}

// UnsetLinkUrl ensures that no value is present for LinkUrl, not even an explicit nil
func (o *CreateOrUpdateAppPricingItemDto) UnsetLinkUrl() {
	o.LinkUrl.Unset()
}

// GetDisplay returns the Display field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppPricingItemDto) GetDisplay() string {
	if o == nil || IsNil(o.Display.Get()) {
		var ret string
		return ret
	}
	return *o.Display.Get()
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppPricingItemDto) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Display.Get(), o.Display.IsSet()
}

// HasDisplay returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasDisplay() bool {
	if o != nil && o.Display.IsSet() {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given NullableString and assigns it to the Display field.
func (o *CreateOrUpdateAppPricingItemDto) SetDisplay(v string) {
	o.Display.Set(&v)
}
// SetDisplayNil sets the value for Display to be an explicit nil
func (o *CreateOrUpdateAppPricingItemDto) SetDisplayNil() {
	o.Display.Set(nil)
}

// UnsetDisplay ensures that no value is present for Display, not even an explicit nil
func (o *CreateOrUpdateAppPricingItemDto) UnsetDisplay() {
	o.Display.Unset()
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *CreateOrUpdateAppPricingItemDto) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppPricingItemDto) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *CreateOrUpdateAppPricingItemDto) SetAppId(v string) {
	o.AppId = &v
}

// GetIsAvailable returns the IsAvailable field value if set, zero value otherwise.
func (o *CreateOrUpdateAppPricingItemDto) GetIsAvailable() bool {
	if o == nil || IsNil(o.IsAvailable) {
		var ret bool
		return ret
	}
	return *o.IsAvailable
}

// GetIsAvailableOk returns a tuple with the IsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppPricingItemDto) GetIsAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAvailable) {
		return nil, false
	}
	return o.IsAvailable, true
}

// HasIsAvailable returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasIsAvailable() bool {
	if o != nil && !IsNil(o.IsAvailable) {
		return true
	}

	return false
}

// SetIsAvailable gets a reference to the given bool and assigns it to the IsAvailable field.
func (o *CreateOrUpdateAppPricingItemDto) SetIsAvailable(v bool) {
	o.IsAvailable = &v
}

// GetHasValue returns the HasValue field value if set, zero value otherwise.
func (o *CreateOrUpdateAppPricingItemDto) GetHasValue() bool {
	if o == nil || IsNil(o.HasValue) {
		var ret bool
		return ret
	}
	return *o.HasValue
}

// GetHasValueOk returns a tuple with the HasValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppPricingItemDto) GetHasValueOk() (*bool, bool) {
	if o == nil || IsNil(o.HasValue) {
		return nil, false
	}
	return o.HasValue, true
}

// HasHasValue returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasHasValue() bool {
	if o != nil && !IsNil(o.HasValue) {
		return true
	}

	return false
}

// SetHasValue gets a reference to the given bool and assigns it to the HasValue field.
func (o *CreateOrUpdateAppPricingItemDto) SetHasValue(v bool) {
	o.HasValue = &v
}

// GetSortIndex returns the SortIndex field value if set, zero value otherwise.
func (o *CreateOrUpdateAppPricingItemDto) GetSortIndex() int32 {
	if o == nil || IsNil(o.SortIndex) {
		var ret int32
		return ret
	}
	return *o.SortIndex
}

// GetSortIndexOk returns a tuple with the SortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppPricingItemDto) GetSortIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.SortIndex) {
		return nil, false
	}
	return o.SortIndex, true
}

// HasSortIndex returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasSortIndex() bool {
	if o != nil && !IsNil(o.SortIndex) {
		return true
	}

	return false
}

// SetSortIndex gets a reference to the given int32 and assigns it to the SortIndex field.
func (o *CreateOrUpdateAppPricingItemDto) SetSortIndex(v int32) {
	o.SortIndex = &v
}

func (o CreateOrUpdateAppPricingItemDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateAppPricingItemDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.LinkUrl.IsSet() {
		toSerialize["linkUrl"] = o.LinkUrl.Get()
	}
	if o.Display.IsSet() {
		toSerialize["display"] = o.Display.Get()
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.IsAvailable) {
		toSerialize["isAvailable"] = o.IsAvailable
	}
	if !IsNil(o.HasValue) {
		toSerialize["hasValue"] = o.HasValue
	}
	if !IsNil(o.SortIndex) {
		toSerialize["sortIndex"] = o.SortIndex
	}
	return toSerialize, nil
}

type NullableCreateOrUpdateAppPricingItemDto struct {
	value *CreateOrUpdateAppPricingItemDto
	isSet bool
}

func (v NullableCreateOrUpdateAppPricingItemDto) Get() *CreateOrUpdateAppPricingItemDto {
	return v.value
}

func (v *NullableCreateOrUpdateAppPricingItemDto) Set(val *CreateOrUpdateAppPricingItemDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateAppPricingItemDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateAppPricingItemDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateAppPricingItemDto(val *CreateOrUpdateAppPricingItemDto) *NullableCreateOrUpdateAppPricingItemDto {
	return &NullableCreateOrUpdateAppPricingItemDto{value: val, isSet: true}
}

func (v NullableCreateOrUpdateAppPricingItemDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateAppPricingItemDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


