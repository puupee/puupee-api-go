/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the CreateOrUpdateAppPricingItemDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateAppPricingItemDto{}

// CreateOrUpdateAppPricingItemDto struct for CreateOrUpdateAppPricingItemDto
type CreateOrUpdateAppPricingItemDto struct {
	Name *string `json:"name,omitempty"`
	Display *string `json:"display,omitempty"`
	AppId *string `json:"appId,omitempty"`
	HasValue *bool `json:"hasValue,omitempty"`
}

// NewCreateOrUpdateAppPricingItemDto instantiates a new CreateOrUpdateAppPricingItemDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateAppPricingItemDto() *CreateOrUpdateAppPricingItemDto {
	this := CreateOrUpdateAppPricingItemDto{}
	return &this
}

// NewCreateOrUpdateAppPricingItemDtoWithDefaults instantiates a new CreateOrUpdateAppPricingItemDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateAppPricingItemDtoWithDefaults() *CreateOrUpdateAppPricingItemDto {
	this := CreateOrUpdateAppPricingItemDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrUpdateAppPricingItemDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppPricingItemDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrUpdateAppPricingItemDto) SetName(v string) {
	o.Name = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *CreateOrUpdateAppPricingItemDto) GetDisplay() string {
	if o == nil || IsNil(o.Display) {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppPricingItemDto) GetDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *CreateOrUpdateAppPricingItemDto) SetDisplay(v string) {
	o.Display = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *CreateOrUpdateAppPricingItemDto) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppPricingItemDto) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *CreateOrUpdateAppPricingItemDto) SetAppId(v string) {
	o.AppId = &v
}

// GetHasValue returns the HasValue field value if set, zero value otherwise.
func (o *CreateOrUpdateAppPricingItemDto) GetHasValue() bool {
	if o == nil || IsNil(o.HasValue) {
		var ret bool
		return ret
	}
	return *o.HasValue
}

// GetHasValueOk returns a tuple with the HasValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppPricingItemDto) GetHasValueOk() (*bool, bool) {
	if o == nil || IsNil(o.HasValue) {
		return nil, false
	}
	return o.HasValue, true
}

// HasHasValue returns a boolean if a field has been set.
func (o *CreateOrUpdateAppPricingItemDto) HasHasValue() bool {
	if o != nil && !IsNil(o.HasValue) {
		return true
	}

	return false
}

// SetHasValue gets a reference to the given bool and assigns it to the HasValue field.
func (o *CreateOrUpdateAppPricingItemDto) SetHasValue(v bool) {
	o.HasValue = &v
}

func (o CreateOrUpdateAppPricingItemDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateAppPricingItemDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.HasValue) {
		toSerialize["hasValue"] = o.HasValue
	}
	return toSerialize, nil
}

type NullableCreateOrUpdateAppPricingItemDto struct {
	value *CreateOrUpdateAppPricingItemDto
	isSet bool
}

func (v NullableCreateOrUpdateAppPricingItemDto) Get() *CreateOrUpdateAppPricingItemDto {
	return v.value
}

func (v *NullableCreateOrUpdateAppPricingItemDto) Set(val *CreateOrUpdateAppPricingItemDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateAppPricingItemDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateAppPricingItemDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateAppPricingItemDto(val *CreateOrUpdateAppPricingItemDto) *NullableCreateOrUpdateAppPricingItemDto {
	return &NullableCreateOrUpdateAppPricingItemDto{value: val, isSet: true}
}

func (v NullableCreateOrUpdateAppPricingItemDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateAppPricingItemDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


