/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the ExtensionPropertyUiLookupDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionPropertyUiLookupDto{}

// ExtensionPropertyUiLookupDto struct for ExtensionPropertyUiLookupDto
type ExtensionPropertyUiLookupDto struct {
	Url NullableString `json:"url,omitempty"`
	ResultListPropertyName NullableString `json:"resultListPropertyName,omitempty"`
	DisplayPropertyName NullableString `json:"displayPropertyName,omitempty"`
	ValuePropertyName NullableString `json:"valuePropertyName,omitempty"`
	FilterParamName NullableString `json:"filterParamName,omitempty"`
}

// NewExtensionPropertyUiLookupDto instantiates a new ExtensionPropertyUiLookupDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionPropertyUiLookupDto() *ExtensionPropertyUiLookupDto {
	this := ExtensionPropertyUiLookupDto{}
	return &this
}

// NewExtensionPropertyUiLookupDtoWithDefaults instantiates a new ExtensionPropertyUiLookupDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionPropertyUiLookupDtoWithDefaults() *ExtensionPropertyUiLookupDto {
	this := ExtensionPropertyUiLookupDto{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtensionPropertyUiLookupDto) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtensionPropertyUiLookupDto) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ExtensionPropertyUiLookupDto) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ExtensionPropertyUiLookupDto) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *ExtensionPropertyUiLookupDto) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ExtensionPropertyUiLookupDto) UnsetUrl() {
	o.Url.Unset()
}

// GetResultListPropertyName returns the ResultListPropertyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtensionPropertyUiLookupDto) GetResultListPropertyName() string {
	if o == nil || IsNil(o.ResultListPropertyName.Get()) {
		var ret string
		return ret
	}
	return *o.ResultListPropertyName.Get()
}

// GetResultListPropertyNameOk returns a tuple with the ResultListPropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtensionPropertyUiLookupDto) GetResultListPropertyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResultListPropertyName.Get(), o.ResultListPropertyName.IsSet()
}

// HasResultListPropertyName returns a boolean if a field has been set.
func (o *ExtensionPropertyUiLookupDto) HasResultListPropertyName() bool {
	if o != nil && o.ResultListPropertyName.IsSet() {
		return true
	}

	return false
}

// SetResultListPropertyName gets a reference to the given NullableString and assigns it to the ResultListPropertyName field.
func (o *ExtensionPropertyUiLookupDto) SetResultListPropertyName(v string) {
	o.ResultListPropertyName.Set(&v)
}
// SetResultListPropertyNameNil sets the value for ResultListPropertyName to be an explicit nil
func (o *ExtensionPropertyUiLookupDto) SetResultListPropertyNameNil() {
	o.ResultListPropertyName.Set(nil)
}

// UnsetResultListPropertyName ensures that no value is present for ResultListPropertyName, not even an explicit nil
func (o *ExtensionPropertyUiLookupDto) UnsetResultListPropertyName() {
	o.ResultListPropertyName.Unset()
}

// GetDisplayPropertyName returns the DisplayPropertyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtensionPropertyUiLookupDto) GetDisplayPropertyName() string {
	if o == nil || IsNil(o.DisplayPropertyName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayPropertyName.Get()
}

// GetDisplayPropertyNameOk returns a tuple with the DisplayPropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtensionPropertyUiLookupDto) GetDisplayPropertyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayPropertyName.Get(), o.DisplayPropertyName.IsSet()
}

// HasDisplayPropertyName returns a boolean if a field has been set.
func (o *ExtensionPropertyUiLookupDto) HasDisplayPropertyName() bool {
	if o != nil && o.DisplayPropertyName.IsSet() {
		return true
	}

	return false
}

// SetDisplayPropertyName gets a reference to the given NullableString and assigns it to the DisplayPropertyName field.
func (o *ExtensionPropertyUiLookupDto) SetDisplayPropertyName(v string) {
	o.DisplayPropertyName.Set(&v)
}
// SetDisplayPropertyNameNil sets the value for DisplayPropertyName to be an explicit nil
func (o *ExtensionPropertyUiLookupDto) SetDisplayPropertyNameNil() {
	o.DisplayPropertyName.Set(nil)
}

// UnsetDisplayPropertyName ensures that no value is present for DisplayPropertyName, not even an explicit nil
func (o *ExtensionPropertyUiLookupDto) UnsetDisplayPropertyName() {
	o.DisplayPropertyName.Unset()
}

// GetValuePropertyName returns the ValuePropertyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtensionPropertyUiLookupDto) GetValuePropertyName() string {
	if o == nil || IsNil(o.ValuePropertyName.Get()) {
		var ret string
		return ret
	}
	return *o.ValuePropertyName.Get()
}

// GetValuePropertyNameOk returns a tuple with the ValuePropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtensionPropertyUiLookupDto) GetValuePropertyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValuePropertyName.Get(), o.ValuePropertyName.IsSet()
}

// HasValuePropertyName returns a boolean if a field has been set.
func (o *ExtensionPropertyUiLookupDto) HasValuePropertyName() bool {
	if o != nil && o.ValuePropertyName.IsSet() {
		return true
	}

	return false
}

// SetValuePropertyName gets a reference to the given NullableString and assigns it to the ValuePropertyName field.
func (o *ExtensionPropertyUiLookupDto) SetValuePropertyName(v string) {
	o.ValuePropertyName.Set(&v)
}
// SetValuePropertyNameNil sets the value for ValuePropertyName to be an explicit nil
func (o *ExtensionPropertyUiLookupDto) SetValuePropertyNameNil() {
	o.ValuePropertyName.Set(nil)
}

// UnsetValuePropertyName ensures that no value is present for ValuePropertyName, not even an explicit nil
func (o *ExtensionPropertyUiLookupDto) UnsetValuePropertyName() {
	o.ValuePropertyName.Unset()
}

// GetFilterParamName returns the FilterParamName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExtensionPropertyUiLookupDto) GetFilterParamName() string {
	if o == nil || IsNil(o.FilterParamName.Get()) {
		var ret string
		return ret
	}
	return *o.FilterParamName.Get()
}

// GetFilterParamNameOk returns a tuple with the FilterParamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtensionPropertyUiLookupDto) GetFilterParamNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilterParamName.Get(), o.FilterParamName.IsSet()
}

// HasFilterParamName returns a boolean if a field has been set.
func (o *ExtensionPropertyUiLookupDto) HasFilterParamName() bool {
	if o != nil && o.FilterParamName.IsSet() {
		return true
	}

	return false
}

// SetFilterParamName gets a reference to the given NullableString and assigns it to the FilterParamName field.
func (o *ExtensionPropertyUiLookupDto) SetFilterParamName(v string) {
	o.FilterParamName.Set(&v)
}
// SetFilterParamNameNil sets the value for FilterParamName to be an explicit nil
func (o *ExtensionPropertyUiLookupDto) SetFilterParamNameNil() {
	o.FilterParamName.Set(nil)
}

// UnsetFilterParamName ensures that no value is present for FilterParamName, not even an explicit nil
func (o *ExtensionPropertyUiLookupDto) UnsetFilterParamName() {
	o.FilterParamName.Unset()
}

func (o ExtensionPropertyUiLookupDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionPropertyUiLookupDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.ResultListPropertyName.IsSet() {
		toSerialize["resultListPropertyName"] = o.ResultListPropertyName.Get()
	}
	if o.DisplayPropertyName.IsSet() {
		toSerialize["displayPropertyName"] = o.DisplayPropertyName.Get()
	}
	if o.ValuePropertyName.IsSet() {
		toSerialize["valuePropertyName"] = o.ValuePropertyName.Get()
	}
	if o.FilterParamName.IsSet() {
		toSerialize["filterParamName"] = o.FilterParamName.Get()
	}
	return toSerialize, nil
}

type NullableExtensionPropertyUiLookupDto struct {
	value *ExtensionPropertyUiLookupDto
	isSet bool
}

func (v NullableExtensionPropertyUiLookupDto) Get() *ExtensionPropertyUiLookupDto {
	return v.value
}

func (v *NullableExtensionPropertyUiLookupDto) Set(val *ExtensionPropertyUiLookupDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionPropertyUiLookupDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionPropertyUiLookupDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionPropertyUiLookupDto(val *ExtensionPropertyUiLookupDto) *NullableExtensionPropertyUiLookupDto {
	return &NullableExtensionPropertyUiLookupDto{value: val, isSet: true}
}

func (v NullableExtensionPropertyUiLookupDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionPropertyUiLookupDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


