/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the CreatePushNotificationDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePushNotificationDto{}

// CreatePushNotificationDto struct for CreatePushNotificationDto
type CreatePushNotificationDto struct {
	Title NullableString `json:"title,omitempty"`
	Description NullableString `json:"description,omitempty"`
	PuupeeId NullableString `json:"puupeeId,omitempty"`
	CreatorId NullableString `json:"creatorId,omitempty"`
	App NullableString `json:"app,omitempty"`
}

// NewCreatePushNotificationDto instantiates a new CreatePushNotificationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePushNotificationDto() *CreatePushNotificationDto {
	this := CreatePushNotificationDto{}
	return &this
}

// NewCreatePushNotificationDtoWithDefaults instantiates a new CreatePushNotificationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePushNotificationDtoWithDefaults() *CreatePushNotificationDto {
	this := CreatePushNotificationDto{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *CreatePushNotificationDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *CreatePushNotificationDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreatePushNotificationDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreatePushNotificationDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetDescription() {
	o.Description.Unset()
}

// GetPuupeeId returns the PuupeeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetPuupeeId() string {
	if o == nil || IsNil(o.PuupeeId.Get()) {
		var ret string
		return ret
	}
	return *o.PuupeeId.Get()
}

// GetPuupeeIdOk returns a tuple with the PuupeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetPuupeeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PuupeeId.Get(), o.PuupeeId.IsSet()
}

// HasPuupeeId returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasPuupeeId() bool {
	if o != nil && o.PuupeeId.IsSet() {
		return true
	}

	return false
}

// SetPuupeeId gets a reference to the given NullableString and assigns it to the PuupeeId field.
func (o *CreatePushNotificationDto) SetPuupeeId(v string) {
	o.PuupeeId.Set(&v)
}
// SetPuupeeIdNil sets the value for PuupeeId to be an explicit nil
func (o *CreatePushNotificationDto) SetPuupeeIdNil() {
	o.PuupeeId.Set(nil)
}

// UnsetPuupeeId ensures that no value is present for PuupeeId, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetPuupeeId() {
	o.PuupeeId.Unset()
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId.Get()) {
		var ret string
		return ret
	}
	return *o.CreatorId.Get()
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetCreatorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorId.Get(), o.CreatorId.IsSet()
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasCreatorId() bool {
	if o != nil && o.CreatorId.IsSet() {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given NullableString and assigns it to the CreatorId field.
func (o *CreatePushNotificationDto) SetCreatorId(v string) {
	o.CreatorId.Set(&v)
}
// SetCreatorIdNil sets the value for CreatorId to be an explicit nil
func (o *CreatePushNotificationDto) SetCreatorIdNil() {
	o.CreatorId.Set(nil)
}

// UnsetCreatorId ensures that no value is present for CreatorId, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetCreatorId() {
	o.CreatorId.Unset()
}

// GetApp returns the App field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetApp() string {
	if o == nil || IsNil(o.App.Get()) {
		var ret string
		return ret
	}
	return *o.App.Get()
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetAppOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.App.Get(), o.App.IsSet()
}

// HasApp returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasApp() bool {
	if o != nil && o.App.IsSet() {
		return true
	}

	return false
}

// SetApp gets a reference to the given NullableString and assigns it to the App field.
func (o *CreatePushNotificationDto) SetApp(v string) {
	o.App.Set(&v)
}
// SetAppNil sets the value for App to be an explicit nil
func (o *CreatePushNotificationDto) SetAppNil() {
	o.App.Set(nil)
}

// UnsetApp ensures that no value is present for App, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetApp() {
	o.App.Unset()
}

func (o CreatePushNotificationDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePushNotificationDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.PuupeeId.IsSet() {
		toSerialize["puupeeId"] = o.PuupeeId.Get()
	}
	if o.CreatorId.IsSet() {
		toSerialize["creatorId"] = o.CreatorId.Get()
	}
	if o.App.IsSet() {
		toSerialize["app"] = o.App.Get()
	}
	return toSerialize, nil
}

type NullableCreatePushNotificationDto struct {
	value *CreatePushNotificationDto
	isSet bool
}

func (v NullableCreatePushNotificationDto) Get() *CreatePushNotificationDto {
	return v.value
}

func (v *NullableCreatePushNotificationDto) Set(val *CreatePushNotificationDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePushNotificationDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePushNotificationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePushNotificationDto(val *CreatePushNotificationDto) *NullableCreatePushNotificationDto {
	return &NullableCreatePushNotificationDto{value: val, isSet: true}
}

func (v NullableCreatePushNotificationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePushNotificationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


