/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// CreateOrUpdateAppDto struct for CreateOrUpdateAppDto
type CreateOrUpdateAppDto struct {
	Name *string `json:"name,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Framework *string `json:"framework,omitempty"`
	AppType *string `json:"appType,omitempty"`
	Description *string `json:"description,omitempty"`
	Icon *string `json:"icon,omitempty"`
	HomePage *string `json:"homePage,omitempty"`
	SortIndex *int32 `json:"sortIndex,omitempty"`
	GitRepository *string `json:"gitRepository,omitempty"`
	GitRepositoryType *string `json:"gitRepositoryType,omitempty"`
	IsEnabled *bool `json:"isEnabled,omitempty"`
	WebhookUrl *string `json:"webhookUrl,omitempty"`
	BusinessDomain *string `json:"businessDomain,omitempty"`
	BusinessUrl *string `json:"businessUrl,omitempty"`
	SubscriptionEnabled *bool `json:"subscriptionEnabled,omitempty"`
	SubscriptionPlatforms *string `json:"subscriptionPlatforms,omitempty"`
	IsPublished *bool `json:"isPublished,omitempty"`
	Features []AppFeatureDto `json:"features,omitempty"`
	Sdks []AppSdkDto `json:"sdks,omitempty"`
	OpenClient *CreateOpenIddictApplicationDto `json:"openClient,omitempty"`
}

// NewCreateOrUpdateAppDto instantiates a new CreateOrUpdateAppDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateAppDto() *CreateOrUpdateAppDto {
	this := CreateOrUpdateAppDto{}
	return &this
}

// NewCreateOrUpdateAppDtoWithDefaults instantiates a new CreateOrUpdateAppDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateAppDtoWithDefaults() *CreateOrUpdateAppDto {
	this := CreateOrUpdateAppDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOrUpdateAppDto) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CreateOrUpdateAppDto) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFramework returns the Framework field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetFramework() string {
	if o == nil || isNil(o.Framework) {
		var ret string
		return ret
	}
	return *o.Framework
}

// GetFrameworkOk returns a tuple with the Framework field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetFrameworkOk() (*string, bool) {
	if o == nil || isNil(o.Framework) {
    return nil, false
	}
	return o.Framework, true
}

// HasFramework returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasFramework() bool {
	if o != nil && !isNil(o.Framework) {
		return true
	}

	return false
}

// SetFramework gets a reference to the given string and assigns it to the Framework field.
func (o *CreateOrUpdateAppDto) SetFramework(v string) {
	o.Framework = &v
}

// GetAppType returns the AppType field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetAppType() string {
	if o == nil || isNil(o.AppType) {
		var ret string
		return ret
	}
	return *o.AppType
}

// GetAppTypeOk returns a tuple with the AppType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetAppTypeOk() (*string, bool) {
	if o == nil || isNil(o.AppType) {
    return nil, false
	}
	return o.AppType, true
}

// HasAppType returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasAppType() bool {
	if o != nil && !isNil(o.AppType) {
		return true
	}

	return false
}

// SetAppType gets a reference to the given string and assigns it to the AppType field.
func (o *CreateOrUpdateAppDto) SetAppType(v string) {
	o.AppType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateOrUpdateAppDto) SetDescription(v string) {
	o.Description = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetIcon() string {
	if o == nil || isNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetIconOk() (*string, bool) {
	if o == nil || isNil(o.Icon) {
    return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasIcon() bool {
	if o != nil && !isNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CreateOrUpdateAppDto) SetIcon(v string) {
	o.Icon = &v
}

// GetHomePage returns the HomePage field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetHomePage() string {
	if o == nil || isNil(o.HomePage) {
		var ret string
		return ret
	}
	return *o.HomePage
}

// GetHomePageOk returns a tuple with the HomePage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetHomePageOk() (*string, bool) {
	if o == nil || isNil(o.HomePage) {
    return nil, false
	}
	return o.HomePage, true
}

// HasHomePage returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasHomePage() bool {
	if o != nil && !isNil(o.HomePage) {
		return true
	}

	return false
}

// SetHomePage gets a reference to the given string and assigns it to the HomePage field.
func (o *CreateOrUpdateAppDto) SetHomePage(v string) {
	o.HomePage = &v
}

// GetSortIndex returns the SortIndex field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetSortIndex() int32 {
	if o == nil || isNil(o.SortIndex) {
		var ret int32
		return ret
	}
	return *o.SortIndex
}

// GetSortIndexOk returns a tuple with the SortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetSortIndexOk() (*int32, bool) {
	if o == nil || isNil(o.SortIndex) {
    return nil, false
	}
	return o.SortIndex, true
}

// HasSortIndex returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasSortIndex() bool {
	if o != nil && !isNil(o.SortIndex) {
		return true
	}

	return false
}

// SetSortIndex gets a reference to the given int32 and assigns it to the SortIndex field.
func (o *CreateOrUpdateAppDto) SetSortIndex(v int32) {
	o.SortIndex = &v
}

// GetGitRepository returns the GitRepository field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetGitRepository() string {
	if o == nil || isNil(o.GitRepository) {
		var ret string
		return ret
	}
	return *o.GitRepository
}

// GetGitRepositoryOk returns a tuple with the GitRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetGitRepositoryOk() (*string, bool) {
	if o == nil || isNil(o.GitRepository) {
    return nil, false
	}
	return o.GitRepository, true
}

// HasGitRepository returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasGitRepository() bool {
	if o != nil && !isNil(o.GitRepository) {
		return true
	}

	return false
}

// SetGitRepository gets a reference to the given string and assigns it to the GitRepository field.
func (o *CreateOrUpdateAppDto) SetGitRepository(v string) {
	o.GitRepository = &v
}

// GetGitRepositoryType returns the GitRepositoryType field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetGitRepositoryType() string {
	if o == nil || isNil(o.GitRepositoryType) {
		var ret string
		return ret
	}
	return *o.GitRepositoryType
}

// GetGitRepositoryTypeOk returns a tuple with the GitRepositoryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetGitRepositoryTypeOk() (*string, bool) {
	if o == nil || isNil(o.GitRepositoryType) {
    return nil, false
	}
	return o.GitRepositoryType, true
}

// HasGitRepositoryType returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasGitRepositoryType() bool {
	if o != nil && !isNil(o.GitRepositoryType) {
		return true
	}

	return false
}

// SetGitRepositoryType gets a reference to the given string and assigns it to the GitRepositoryType field.
func (o *CreateOrUpdateAppDto) SetGitRepositoryType(v string) {
	o.GitRepositoryType = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetIsEnabled() bool {
	if o == nil || isNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetIsEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.IsEnabled) {
    return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasIsEnabled() bool {
	if o != nil && !isNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *CreateOrUpdateAppDto) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetWebhookUrl() string {
	if o == nil || isNil(o.WebhookUrl) {
		var ret string
		return ret
	}
	return *o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetWebhookUrlOk() (*string, bool) {
	if o == nil || isNil(o.WebhookUrl) {
    return nil, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasWebhookUrl() bool {
	if o != nil && !isNil(o.WebhookUrl) {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given string and assigns it to the WebhookUrl field.
func (o *CreateOrUpdateAppDto) SetWebhookUrl(v string) {
	o.WebhookUrl = &v
}

// GetBusinessDomain returns the BusinessDomain field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetBusinessDomain() string {
	if o == nil || isNil(o.BusinessDomain) {
		var ret string
		return ret
	}
	return *o.BusinessDomain
}

// GetBusinessDomainOk returns a tuple with the BusinessDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetBusinessDomainOk() (*string, bool) {
	if o == nil || isNil(o.BusinessDomain) {
    return nil, false
	}
	return o.BusinessDomain, true
}

// HasBusinessDomain returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasBusinessDomain() bool {
	if o != nil && !isNil(o.BusinessDomain) {
		return true
	}

	return false
}

// SetBusinessDomain gets a reference to the given string and assigns it to the BusinessDomain field.
func (o *CreateOrUpdateAppDto) SetBusinessDomain(v string) {
	o.BusinessDomain = &v
}

// GetBusinessUrl returns the BusinessUrl field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetBusinessUrl() string {
	if o == nil || isNil(o.BusinessUrl) {
		var ret string
		return ret
	}
	return *o.BusinessUrl
}

// GetBusinessUrlOk returns a tuple with the BusinessUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetBusinessUrlOk() (*string, bool) {
	if o == nil || isNil(o.BusinessUrl) {
    return nil, false
	}
	return o.BusinessUrl, true
}

// HasBusinessUrl returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasBusinessUrl() bool {
	if o != nil && !isNil(o.BusinessUrl) {
		return true
	}

	return false
}

// SetBusinessUrl gets a reference to the given string and assigns it to the BusinessUrl field.
func (o *CreateOrUpdateAppDto) SetBusinessUrl(v string) {
	o.BusinessUrl = &v
}

// GetSubscriptionEnabled returns the SubscriptionEnabled field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetSubscriptionEnabled() bool {
	if o == nil || isNil(o.SubscriptionEnabled) {
		var ret bool
		return ret
	}
	return *o.SubscriptionEnabled
}

// GetSubscriptionEnabledOk returns a tuple with the SubscriptionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetSubscriptionEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.SubscriptionEnabled) {
    return nil, false
	}
	return o.SubscriptionEnabled, true
}

// HasSubscriptionEnabled returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasSubscriptionEnabled() bool {
	if o != nil && !isNil(o.SubscriptionEnabled) {
		return true
	}

	return false
}

// SetSubscriptionEnabled gets a reference to the given bool and assigns it to the SubscriptionEnabled field.
func (o *CreateOrUpdateAppDto) SetSubscriptionEnabled(v bool) {
	o.SubscriptionEnabled = &v
}

// GetSubscriptionPlatforms returns the SubscriptionPlatforms field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetSubscriptionPlatforms() string {
	if o == nil || isNil(o.SubscriptionPlatforms) {
		var ret string
		return ret
	}
	return *o.SubscriptionPlatforms
}

// GetSubscriptionPlatformsOk returns a tuple with the SubscriptionPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetSubscriptionPlatformsOk() (*string, bool) {
	if o == nil || isNil(o.SubscriptionPlatforms) {
    return nil, false
	}
	return o.SubscriptionPlatforms, true
}

// HasSubscriptionPlatforms returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasSubscriptionPlatforms() bool {
	if o != nil && !isNil(o.SubscriptionPlatforms) {
		return true
	}

	return false
}

// SetSubscriptionPlatforms gets a reference to the given string and assigns it to the SubscriptionPlatforms field.
func (o *CreateOrUpdateAppDto) SetSubscriptionPlatforms(v string) {
	o.SubscriptionPlatforms = &v
}

// GetIsPublished returns the IsPublished field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetIsPublished() bool {
	if o == nil || isNil(o.IsPublished) {
		var ret bool
		return ret
	}
	return *o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetIsPublishedOk() (*bool, bool) {
	if o == nil || isNil(o.IsPublished) {
    return nil, false
	}
	return o.IsPublished, true
}

// HasIsPublished returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasIsPublished() bool {
	if o != nil && !isNil(o.IsPublished) {
		return true
	}

	return false
}

// SetIsPublished gets a reference to the given bool and assigns it to the IsPublished field.
func (o *CreateOrUpdateAppDto) SetIsPublished(v bool) {
	o.IsPublished = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetFeatures() []AppFeatureDto {
	if o == nil || isNil(o.Features) {
		var ret []AppFeatureDto
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetFeaturesOk() ([]AppFeatureDto, bool) {
	if o == nil || isNil(o.Features) {
    return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasFeatures() bool {
	if o != nil && !isNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []AppFeatureDto and assigns it to the Features field.
func (o *CreateOrUpdateAppDto) SetFeatures(v []AppFeatureDto) {
	o.Features = v
}

// GetSdks returns the Sdks field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetSdks() []AppSdkDto {
	if o == nil || isNil(o.Sdks) {
		var ret []AppSdkDto
		return ret
	}
	return o.Sdks
}

// GetSdksOk returns a tuple with the Sdks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetSdksOk() ([]AppSdkDto, bool) {
	if o == nil || isNil(o.Sdks) {
    return nil, false
	}
	return o.Sdks, true
}

// HasSdks returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasSdks() bool {
	if o != nil && !isNil(o.Sdks) {
		return true
	}

	return false
}

// SetSdks gets a reference to the given []AppSdkDto and assigns it to the Sdks field.
func (o *CreateOrUpdateAppDto) SetSdks(v []AppSdkDto) {
	o.Sdks = v
}

// GetOpenClient returns the OpenClient field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetOpenClient() CreateOpenIddictApplicationDto {
	if o == nil || isNil(o.OpenClient) {
		var ret CreateOpenIddictApplicationDto
		return ret
	}
	return *o.OpenClient
}

// GetOpenClientOk returns a tuple with the OpenClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetOpenClientOk() (*CreateOpenIddictApplicationDto, bool) {
	if o == nil || isNil(o.OpenClient) {
    return nil, false
	}
	return o.OpenClient, true
}

// HasOpenClient returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasOpenClient() bool {
	if o != nil && !isNil(o.OpenClient) {
		return true
	}

	return false
}

// SetOpenClient gets a reference to the given CreateOpenIddictApplicationDto and assigns it to the OpenClient field.
func (o *CreateOrUpdateAppDto) SetOpenClient(v CreateOpenIddictApplicationDto) {
	o.OpenClient = &v
}

func (o CreateOrUpdateAppDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.Framework) {
		toSerialize["framework"] = o.Framework
	}
	if !isNil(o.AppType) {
		toSerialize["appType"] = o.AppType
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !isNil(o.HomePage) {
		toSerialize["homePage"] = o.HomePage
	}
	if !isNil(o.SortIndex) {
		toSerialize["sortIndex"] = o.SortIndex
	}
	if !isNil(o.GitRepository) {
		toSerialize["gitRepository"] = o.GitRepository
	}
	if !isNil(o.GitRepositoryType) {
		toSerialize["gitRepositoryType"] = o.GitRepositoryType
	}
	if !isNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if !isNil(o.WebhookUrl) {
		toSerialize["webhookUrl"] = o.WebhookUrl
	}
	if !isNil(o.BusinessDomain) {
		toSerialize["businessDomain"] = o.BusinessDomain
	}
	if !isNil(o.BusinessUrl) {
		toSerialize["businessUrl"] = o.BusinessUrl
	}
	if !isNil(o.SubscriptionEnabled) {
		toSerialize["subscriptionEnabled"] = o.SubscriptionEnabled
	}
	if !isNil(o.SubscriptionPlatforms) {
		toSerialize["subscriptionPlatforms"] = o.SubscriptionPlatforms
	}
	if !isNil(o.IsPublished) {
		toSerialize["isPublished"] = o.IsPublished
	}
	if !isNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !isNil(o.Sdks) {
		toSerialize["sdks"] = o.Sdks
	}
	if !isNil(o.OpenClient) {
		toSerialize["openClient"] = o.OpenClient
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrUpdateAppDto struct {
	value *CreateOrUpdateAppDto
	isSet bool
}

func (v NullableCreateOrUpdateAppDto) Get() *CreateOrUpdateAppDto {
	return v.value
}

func (v *NullableCreateOrUpdateAppDto) Set(val *CreateOrUpdateAppDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateAppDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateAppDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateAppDto(val *CreateOrUpdateAppDto) *NullableCreateOrUpdateAppDto {
	return &NullableCreateOrUpdateAppDto{value: val, isSet: true}
}

func (v NullableCreateOrUpdateAppDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateAppDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


