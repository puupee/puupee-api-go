/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the CreateOrUpdateAppDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateAppDto{}

// CreateOrUpdateAppDto struct for CreateOrUpdateAppDto
type CreateOrUpdateAppDto struct {
	Name NullableString `json:"name,omitempty"`
	DisplayName NullableString `json:"displayName,omitempty"`
	Framework NullableString `json:"framework,omitempty"`
	AppType NullableString `json:"appType,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Icon NullableString `json:"icon,omitempty"`
	HomePage NullableString `json:"homePage,omitempty"`
	SortIndex *int32 `json:"sortIndex,omitempty"`
	GitRepository NullableString `json:"gitRepository,omitempty"`
	GitRepositoryType NullableString `json:"gitRepositoryType,omitempty"`
	IsEnabled *bool `json:"isEnabled,omitempty"`
	WebhookUrl NullableString `json:"webhookUrl,omitempty"`
	BusinessDomain NullableString `json:"businessDomain,omitempty"`
	BusinessUrl NullableString `json:"businessUrl,omitempty"`
	SubscriptionPlatforms NullableString `json:"subscriptionPlatforms,omitempty"`
	FreePlatforms NullableString `json:"freePlatforms,omitempty"`
	SpecJsonSchema NullableString `json:"specJsonSchema,omitempty"`
	DefaultStorageSize *int64 `json:"defaultStorageSize,omitempty"`
	DefaultSingleFileMaxSize *int64 `json:"defaultSingleFileMaxSize,omitempty"`
	IsPublished *bool `json:"isPublished,omitempty"`
	Features []AppFeatureDto `json:"features,omitempty"`
	Sdks []AppSdkDto `json:"sdks,omitempty"`
	OpenClient *CreateOpenIddictApplicationDto `json:"openClient,omitempty"`
}

// NewCreateOrUpdateAppDto instantiates a new CreateOrUpdateAppDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateAppDto() *CreateOrUpdateAppDto {
	this := CreateOrUpdateAppDto{}
	return &this
}

// NewCreateOrUpdateAppDtoWithDefaults instantiates a new CreateOrUpdateAppDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateAppDtoWithDefaults() *CreateOrUpdateAppDto {
	this := CreateOrUpdateAppDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateOrUpdateAppDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateOrUpdateAppDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetName() {
	o.Name.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *CreateOrUpdateAppDto) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *CreateOrUpdateAppDto) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetFramework returns the Framework field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetFramework() string {
	if o == nil || IsNil(o.Framework.Get()) {
		var ret string
		return ret
	}
	return *o.Framework.Get()
}

// GetFrameworkOk returns a tuple with the Framework field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetFrameworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Framework.Get(), o.Framework.IsSet()
}

// HasFramework returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasFramework() bool {
	if o != nil && o.Framework.IsSet() {
		return true
	}

	return false
}

// SetFramework gets a reference to the given NullableString and assigns it to the Framework field.
func (o *CreateOrUpdateAppDto) SetFramework(v string) {
	o.Framework.Set(&v)
}
// SetFrameworkNil sets the value for Framework to be an explicit nil
func (o *CreateOrUpdateAppDto) SetFrameworkNil() {
	o.Framework.Set(nil)
}

// UnsetFramework ensures that no value is present for Framework, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetFramework() {
	o.Framework.Unset()
}

// GetAppType returns the AppType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetAppType() string {
	if o == nil || IsNil(o.AppType.Get()) {
		var ret string
		return ret
	}
	return *o.AppType.Get()
}

// GetAppTypeOk returns a tuple with the AppType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetAppTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppType.Get(), o.AppType.IsSet()
}

// HasAppType returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasAppType() bool {
	if o != nil && o.AppType.IsSet() {
		return true
	}

	return false
}

// SetAppType gets a reference to the given NullableString and assigns it to the AppType field.
func (o *CreateOrUpdateAppDto) SetAppType(v string) {
	o.AppType.Set(&v)
}
// SetAppTypeNil sets the value for AppType to be an explicit nil
func (o *CreateOrUpdateAppDto) SetAppTypeNil() {
	o.AppType.Set(nil)
}

// UnsetAppType ensures that no value is present for AppType, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetAppType() {
	o.AppType.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateOrUpdateAppDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateOrUpdateAppDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetDescription() {
	o.Description.Unset()
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *CreateOrUpdateAppDto) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *CreateOrUpdateAppDto) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetIcon() {
	o.Icon.Unset()
}

// GetHomePage returns the HomePage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetHomePage() string {
	if o == nil || IsNil(o.HomePage.Get()) {
		var ret string
		return ret
	}
	return *o.HomePage.Get()
}

// GetHomePageOk returns a tuple with the HomePage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetHomePageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HomePage.Get(), o.HomePage.IsSet()
}

// HasHomePage returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasHomePage() bool {
	if o != nil && o.HomePage.IsSet() {
		return true
	}

	return false
}

// SetHomePage gets a reference to the given NullableString and assigns it to the HomePage field.
func (o *CreateOrUpdateAppDto) SetHomePage(v string) {
	o.HomePage.Set(&v)
}
// SetHomePageNil sets the value for HomePage to be an explicit nil
func (o *CreateOrUpdateAppDto) SetHomePageNil() {
	o.HomePage.Set(nil)
}

// UnsetHomePage ensures that no value is present for HomePage, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetHomePage() {
	o.HomePage.Unset()
}

// GetSortIndex returns the SortIndex field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetSortIndex() int32 {
	if o == nil || IsNil(o.SortIndex) {
		var ret int32
		return ret
	}
	return *o.SortIndex
}

// GetSortIndexOk returns a tuple with the SortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetSortIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.SortIndex) {
		return nil, false
	}
	return o.SortIndex, true
}

// HasSortIndex returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasSortIndex() bool {
	if o != nil && !IsNil(o.SortIndex) {
		return true
	}

	return false
}

// SetSortIndex gets a reference to the given int32 and assigns it to the SortIndex field.
func (o *CreateOrUpdateAppDto) SetSortIndex(v int32) {
	o.SortIndex = &v
}

// GetGitRepository returns the GitRepository field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetGitRepository() string {
	if o == nil || IsNil(o.GitRepository.Get()) {
		var ret string
		return ret
	}
	return *o.GitRepository.Get()
}

// GetGitRepositoryOk returns a tuple with the GitRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetGitRepositoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitRepository.Get(), o.GitRepository.IsSet()
}

// HasGitRepository returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasGitRepository() bool {
	if o != nil && o.GitRepository.IsSet() {
		return true
	}

	return false
}

// SetGitRepository gets a reference to the given NullableString and assigns it to the GitRepository field.
func (o *CreateOrUpdateAppDto) SetGitRepository(v string) {
	o.GitRepository.Set(&v)
}
// SetGitRepositoryNil sets the value for GitRepository to be an explicit nil
func (o *CreateOrUpdateAppDto) SetGitRepositoryNil() {
	o.GitRepository.Set(nil)
}

// UnsetGitRepository ensures that no value is present for GitRepository, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetGitRepository() {
	o.GitRepository.Unset()
}

// GetGitRepositoryType returns the GitRepositoryType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetGitRepositoryType() string {
	if o == nil || IsNil(o.GitRepositoryType.Get()) {
		var ret string
		return ret
	}
	return *o.GitRepositoryType.Get()
}

// GetGitRepositoryTypeOk returns a tuple with the GitRepositoryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetGitRepositoryTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitRepositoryType.Get(), o.GitRepositoryType.IsSet()
}

// HasGitRepositoryType returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasGitRepositoryType() bool {
	if o != nil && o.GitRepositoryType.IsSet() {
		return true
	}

	return false
}

// SetGitRepositoryType gets a reference to the given NullableString and assigns it to the GitRepositoryType field.
func (o *CreateOrUpdateAppDto) SetGitRepositoryType(v string) {
	o.GitRepositoryType.Set(&v)
}
// SetGitRepositoryTypeNil sets the value for GitRepositoryType to be an explicit nil
func (o *CreateOrUpdateAppDto) SetGitRepositoryTypeNil() {
	o.GitRepositoryType.Set(nil)
}

// UnsetGitRepositoryType ensures that no value is present for GitRepositoryType, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetGitRepositoryType() {
	o.GitRepositoryType.Unset()
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetIsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasIsEnabled() bool {
	if o != nil && !IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *CreateOrUpdateAppDto) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookUrl.Get()
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookUrl.Get(), o.WebhookUrl.IsSet()
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasWebhookUrl() bool {
	if o != nil && o.WebhookUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given NullableString and assigns it to the WebhookUrl field.
func (o *CreateOrUpdateAppDto) SetWebhookUrl(v string) {
	o.WebhookUrl.Set(&v)
}
// SetWebhookUrlNil sets the value for WebhookUrl to be an explicit nil
func (o *CreateOrUpdateAppDto) SetWebhookUrlNil() {
	o.WebhookUrl.Set(nil)
}

// UnsetWebhookUrl ensures that no value is present for WebhookUrl, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetWebhookUrl() {
	o.WebhookUrl.Unset()
}

// GetBusinessDomain returns the BusinessDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetBusinessDomain() string {
	if o == nil || IsNil(o.BusinessDomain.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessDomain.Get()
}

// GetBusinessDomainOk returns a tuple with the BusinessDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetBusinessDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessDomain.Get(), o.BusinessDomain.IsSet()
}

// HasBusinessDomain returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasBusinessDomain() bool {
	if o != nil && o.BusinessDomain.IsSet() {
		return true
	}

	return false
}

// SetBusinessDomain gets a reference to the given NullableString and assigns it to the BusinessDomain field.
func (o *CreateOrUpdateAppDto) SetBusinessDomain(v string) {
	o.BusinessDomain.Set(&v)
}
// SetBusinessDomainNil sets the value for BusinessDomain to be an explicit nil
func (o *CreateOrUpdateAppDto) SetBusinessDomainNil() {
	o.BusinessDomain.Set(nil)
}

// UnsetBusinessDomain ensures that no value is present for BusinessDomain, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetBusinessDomain() {
	o.BusinessDomain.Unset()
}

// GetBusinessUrl returns the BusinessUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetBusinessUrl() string {
	if o == nil || IsNil(o.BusinessUrl.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessUrl.Get()
}

// GetBusinessUrlOk returns a tuple with the BusinessUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetBusinessUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessUrl.Get(), o.BusinessUrl.IsSet()
}

// HasBusinessUrl returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasBusinessUrl() bool {
	if o != nil && o.BusinessUrl.IsSet() {
		return true
	}

	return false
}

// SetBusinessUrl gets a reference to the given NullableString and assigns it to the BusinessUrl field.
func (o *CreateOrUpdateAppDto) SetBusinessUrl(v string) {
	o.BusinessUrl.Set(&v)
}
// SetBusinessUrlNil sets the value for BusinessUrl to be an explicit nil
func (o *CreateOrUpdateAppDto) SetBusinessUrlNil() {
	o.BusinessUrl.Set(nil)
}

// UnsetBusinessUrl ensures that no value is present for BusinessUrl, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetBusinessUrl() {
	o.BusinessUrl.Unset()
}

// GetSubscriptionPlatforms returns the SubscriptionPlatforms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetSubscriptionPlatforms() string {
	if o == nil || IsNil(o.SubscriptionPlatforms.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionPlatforms.Get()
}

// GetSubscriptionPlatformsOk returns a tuple with the SubscriptionPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetSubscriptionPlatformsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionPlatforms.Get(), o.SubscriptionPlatforms.IsSet()
}

// HasSubscriptionPlatforms returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasSubscriptionPlatforms() bool {
	if o != nil && o.SubscriptionPlatforms.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionPlatforms gets a reference to the given NullableString and assigns it to the SubscriptionPlatforms field.
func (o *CreateOrUpdateAppDto) SetSubscriptionPlatforms(v string) {
	o.SubscriptionPlatforms.Set(&v)
}
// SetSubscriptionPlatformsNil sets the value for SubscriptionPlatforms to be an explicit nil
func (o *CreateOrUpdateAppDto) SetSubscriptionPlatformsNil() {
	o.SubscriptionPlatforms.Set(nil)
}

// UnsetSubscriptionPlatforms ensures that no value is present for SubscriptionPlatforms, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetSubscriptionPlatforms() {
	o.SubscriptionPlatforms.Unset()
}

// GetFreePlatforms returns the FreePlatforms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetFreePlatforms() string {
	if o == nil || IsNil(o.FreePlatforms.Get()) {
		var ret string
		return ret
	}
	return *o.FreePlatforms.Get()
}

// GetFreePlatformsOk returns a tuple with the FreePlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetFreePlatformsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreePlatforms.Get(), o.FreePlatforms.IsSet()
}

// HasFreePlatforms returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasFreePlatforms() bool {
	if o != nil && o.FreePlatforms.IsSet() {
		return true
	}

	return false
}

// SetFreePlatforms gets a reference to the given NullableString and assigns it to the FreePlatforms field.
func (o *CreateOrUpdateAppDto) SetFreePlatforms(v string) {
	o.FreePlatforms.Set(&v)
}
// SetFreePlatformsNil sets the value for FreePlatforms to be an explicit nil
func (o *CreateOrUpdateAppDto) SetFreePlatformsNil() {
	o.FreePlatforms.Set(nil)
}

// UnsetFreePlatforms ensures that no value is present for FreePlatforms, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetFreePlatforms() {
	o.FreePlatforms.Unset()
}

// GetSpecJsonSchema returns the SpecJsonSchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetSpecJsonSchema() string {
	if o == nil || IsNil(o.SpecJsonSchema.Get()) {
		var ret string
		return ret
	}
	return *o.SpecJsonSchema.Get()
}

// GetSpecJsonSchemaOk returns a tuple with the SpecJsonSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetSpecJsonSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecJsonSchema.Get(), o.SpecJsonSchema.IsSet()
}

// HasSpecJsonSchema returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasSpecJsonSchema() bool {
	if o != nil && o.SpecJsonSchema.IsSet() {
		return true
	}

	return false
}

// SetSpecJsonSchema gets a reference to the given NullableString and assigns it to the SpecJsonSchema field.
func (o *CreateOrUpdateAppDto) SetSpecJsonSchema(v string) {
	o.SpecJsonSchema.Set(&v)
}
// SetSpecJsonSchemaNil sets the value for SpecJsonSchema to be an explicit nil
func (o *CreateOrUpdateAppDto) SetSpecJsonSchemaNil() {
	o.SpecJsonSchema.Set(nil)
}

// UnsetSpecJsonSchema ensures that no value is present for SpecJsonSchema, not even an explicit nil
func (o *CreateOrUpdateAppDto) UnsetSpecJsonSchema() {
	o.SpecJsonSchema.Unset()
}

// GetDefaultStorageSize returns the DefaultStorageSize field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetDefaultStorageSize() int64 {
	if o == nil || IsNil(o.DefaultStorageSize) {
		var ret int64
		return ret
	}
	return *o.DefaultStorageSize
}

// GetDefaultStorageSizeOk returns a tuple with the DefaultStorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetDefaultStorageSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.DefaultStorageSize) {
		return nil, false
	}
	return o.DefaultStorageSize, true
}

// HasDefaultStorageSize returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasDefaultStorageSize() bool {
	if o != nil && !IsNil(o.DefaultStorageSize) {
		return true
	}

	return false
}

// SetDefaultStorageSize gets a reference to the given int64 and assigns it to the DefaultStorageSize field.
func (o *CreateOrUpdateAppDto) SetDefaultStorageSize(v int64) {
	o.DefaultStorageSize = &v
}

// GetDefaultSingleFileMaxSize returns the DefaultSingleFileMaxSize field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetDefaultSingleFileMaxSize() int64 {
	if o == nil || IsNil(o.DefaultSingleFileMaxSize) {
		var ret int64
		return ret
	}
	return *o.DefaultSingleFileMaxSize
}

// GetDefaultSingleFileMaxSizeOk returns a tuple with the DefaultSingleFileMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetDefaultSingleFileMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.DefaultSingleFileMaxSize) {
		return nil, false
	}
	return o.DefaultSingleFileMaxSize, true
}

// HasDefaultSingleFileMaxSize returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasDefaultSingleFileMaxSize() bool {
	if o != nil && !IsNil(o.DefaultSingleFileMaxSize) {
		return true
	}

	return false
}

// SetDefaultSingleFileMaxSize gets a reference to the given int64 and assigns it to the DefaultSingleFileMaxSize field.
func (o *CreateOrUpdateAppDto) SetDefaultSingleFileMaxSize(v int64) {
	o.DefaultSingleFileMaxSize = &v
}

// GetIsPublished returns the IsPublished field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetIsPublished() bool {
	if o == nil || IsNil(o.IsPublished) {
		var ret bool
		return ret
	}
	return *o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetIsPublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublished) {
		return nil, false
	}
	return o.IsPublished, true
}

// HasIsPublished returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasIsPublished() bool {
	if o != nil && !IsNil(o.IsPublished) {
		return true
	}

	return false
}

// SetIsPublished gets a reference to the given bool and assigns it to the IsPublished field.
func (o *CreateOrUpdateAppDto) SetIsPublished(v bool) {
	o.IsPublished = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetFeatures() []AppFeatureDto {
	if o == nil {
		var ret []AppFeatureDto
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetFeaturesOk() ([]AppFeatureDto, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasFeatures() bool {
	if o != nil && IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []AppFeatureDto and assigns it to the Features field.
func (o *CreateOrUpdateAppDto) SetFeatures(v []AppFeatureDto) {
	o.Features = v
}

// GetSdks returns the Sdks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateAppDto) GetSdks() []AppSdkDto {
	if o == nil {
		var ret []AppSdkDto
		return ret
	}
	return o.Sdks
}

// GetSdksOk returns a tuple with the Sdks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateAppDto) GetSdksOk() ([]AppSdkDto, bool) {
	if o == nil || IsNil(o.Sdks) {
		return nil, false
	}
	return o.Sdks, true
}

// HasSdks returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasSdks() bool {
	if o != nil && IsNil(o.Sdks) {
		return true
	}

	return false
}

// SetSdks gets a reference to the given []AppSdkDto and assigns it to the Sdks field.
func (o *CreateOrUpdateAppDto) SetSdks(v []AppSdkDto) {
	o.Sdks = v
}

// GetOpenClient returns the OpenClient field value if set, zero value otherwise.
func (o *CreateOrUpdateAppDto) GetOpenClient() CreateOpenIddictApplicationDto {
	if o == nil || IsNil(o.OpenClient) {
		var ret CreateOpenIddictApplicationDto
		return ret
	}
	return *o.OpenClient
}

// GetOpenClientOk returns a tuple with the OpenClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppDto) GetOpenClientOk() (*CreateOpenIddictApplicationDto, bool) {
	if o == nil || IsNil(o.OpenClient) {
		return nil, false
	}
	return o.OpenClient, true
}

// HasOpenClient returns a boolean if a field has been set.
func (o *CreateOrUpdateAppDto) HasOpenClient() bool {
	if o != nil && !IsNil(o.OpenClient) {
		return true
	}

	return false
}

// SetOpenClient gets a reference to the given CreateOpenIddictApplicationDto and assigns it to the OpenClient field.
func (o *CreateOrUpdateAppDto) SetOpenClient(v CreateOpenIddictApplicationDto) {
	o.OpenClient = &v
}

func (o CreateOrUpdateAppDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateAppDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Framework.IsSet() {
		toSerialize["framework"] = o.Framework.Get()
	}
	if o.AppType.IsSet() {
		toSerialize["appType"] = o.AppType.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if o.HomePage.IsSet() {
		toSerialize["homePage"] = o.HomePage.Get()
	}
	if !IsNil(o.SortIndex) {
		toSerialize["sortIndex"] = o.SortIndex
	}
	if o.GitRepository.IsSet() {
		toSerialize["gitRepository"] = o.GitRepository.Get()
	}
	if o.GitRepositoryType.IsSet() {
		toSerialize["gitRepositoryType"] = o.GitRepositoryType.Get()
	}
	if !IsNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if o.WebhookUrl.IsSet() {
		toSerialize["webhookUrl"] = o.WebhookUrl.Get()
	}
	if o.BusinessDomain.IsSet() {
		toSerialize["businessDomain"] = o.BusinessDomain.Get()
	}
	if o.BusinessUrl.IsSet() {
		toSerialize["businessUrl"] = o.BusinessUrl.Get()
	}
	if o.SubscriptionPlatforms.IsSet() {
		toSerialize["subscriptionPlatforms"] = o.SubscriptionPlatforms.Get()
	}
	if o.FreePlatforms.IsSet() {
		toSerialize["freePlatforms"] = o.FreePlatforms.Get()
	}
	if o.SpecJsonSchema.IsSet() {
		toSerialize["specJsonSchema"] = o.SpecJsonSchema.Get()
	}
	if !IsNil(o.DefaultStorageSize) {
		toSerialize["defaultStorageSize"] = o.DefaultStorageSize
	}
	if !IsNil(o.DefaultSingleFileMaxSize) {
		toSerialize["defaultSingleFileMaxSize"] = o.DefaultSingleFileMaxSize
	}
	if !IsNil(o.IsPublished) {
		toSerialize["isPublished"] = o.IsPublished
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.Sdks != nil {
		toSerialize["sdks"] = o.Sdks
	}
	if !IsNil(o.OpenClient) {
		toSerialize["openClient"] = o.OpenClient
	}
	return toSerialize, nil
}

type NullableCreateOrUpdateAppDto struct {
	value *CreateOrUpdateAppDto
	isSet bool
}

func (v NullableCreateOrUpdateAppDto) Get() *CreateOrUpdateAppDto {
	return v.value
}

func (v *NullableCreateOrUpdateAppDto) Set(val *CreateOrUpdateAppDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateAppDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateAppDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateAppDto(val *CreateOrUpdateAppDto) *NullableCreateOrUpdateAppDto {
	return &NullableCreateOrUpdateAppDto{value: val, isSet: true}
}

func (v NullableCreateOrUpdateAppDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateAppDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


