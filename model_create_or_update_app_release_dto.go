/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// CreateOrUpdateAppReleaseDto struct for CreateOrUpdateAppReleaseDto
type CreateOrUpdateAppReleaseDto struct {
	Version *string `json:"version,omitempty"`
	VersionName *string `json:"versionName,omitempty"`
	VersionCode *int64 `json:"versionCode,omitempty"`
	Notes *string `json:"notes,omitempty"`
	Platform *string `json:"platform,omitempty"`
	Key *string `json:"key,omitempty"`
	RapidCode *string `json:"rapidCode,omitempty"`
	Size *int64 `json:"size,omitempty"`
	Md5 *string `json:"md5,omitempty"`
	SliceMd5 *string `json:"sliceMd5,omitempty"`
	ProductType *string `json:"productType,omitempty"`
	IsForceUpdate *bool `json:"isForceUpdate,omitempty"`
	AppId *string `json:"appId,omitempty"`
	IsEnabled *bool `json:"isEnabled,omitempty"`
	Channel *string `json:"channel,omitempty"`
	Environment *string `json:"environment,omitempty"`
}

// NewCreateOrUpdateAppReleaseDto instantiates a new CreateOrUpdateAppReleaseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateAppReleaseDto() *CreateOrUpdateAppReleaseDto {
	this := CreateOrUpdateAppReleaseDto{}
	return &this
}

// NewCreateOrUpdateAppReleaseDtoWithDefaults instantiates a new CreateOrUpdateAppReleaseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateAppReleaseDtoWithDefaults() *CreateOrUpdateAppReleaseDto {
	this := CreateOrUpdateAppReleaseDto{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CreateOrUpdateAppReleaseDto) SetVersion(v string) {
	o.Version = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetVersionName() string {
	if o == nil || isNil(o.VersionName) {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetVersionNameOk() (*string, bool) {
	if o == nil || isNil(o.VersionName) {
    return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasVersionName() bool {
	if o != nil && !isNil(o.VersionName) {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *CreateOrUpdateAppReleaseDto) SetVersionName(v string) {
	o.VersionName = &v
}

// GetVersionCode returns the VersionCode field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetVersionCode() int64 {
	if o == nil || isNil(o.VersionCode) {
		var ret int64
		return ret
	}
	return *o.VersionCode
}

// GetVersionCodeOk returns a tuple with the VersionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetVersionCodeOk() (*int64, bool) {
	if o == nil || isNil(o.VersionCode) {
    return nil, false
	}
	return o.VersionCode, true
}

// HasVersionCode returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasVersionCode() bool {
	if o != nil && !isNil(o.VersionCode) {
		return true
	}

	return false
}

// SetVersionCode gets a reference to the given int64 and assigns it to the VersionCode field.
func (o *CreateOrUpdateAppReleaseDto) SetVersionCode(v int64) {
	o.VersionCode = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
    return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *CreateOrUpdateAppReleaseDto) SetNotes(v string) {
	o.Notes = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetPlatform() string {
	if o == nil || isNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetPlatformOk() (*string, bool) {
	if o == nil || isNil(o.Platform) {
    return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasPlatform() bool {
	if o != nil && !isNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *CreateOrUpdateAppReleaseDto) SetPlatform(v string) {
	o.Platform = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetKey() string {
	if o == nil || isNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetKeyOk() (*string, bool) {
	if o == nil || isNil(o.Key) {
    return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CreateOrUpdateAppReleaseDto) SetKey(v string) {
	o.Key = &v
}

// GetRapidCode returns the RapidCode field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetRapidCode() string {
	if o == nil || isNil(o.RapidCode) {
		var ret string
		return ret
	}
	return *o.RapidCode
}

// GetRapidCodeOk returns a tuple with the RapidCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetRapidCodeOk() (*string, bool) {
	if o == nil || isNil(o.RapidCode) {
    return nil, false
	}
	return o.RapidCode, true
}

// HasRapidCode returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasRapidCode() bool {
	if o != nil && !isNil(o.RapidCode) {
		return true
	}

	return false
}

// SetRapidCode gets a reference to the given string and assigns it to the RapidCode field.
func (o *CreateOrUpdateAppReleaseDto) SetRapidCode(v string) {
	o.RapidCode = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetSize() int64 {
	if o == nil || isNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetSizeOk() (*int64, bool) {
	if o == nil || isNil(o.Size) {
    return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasSize() bool {
	if o != nil && !isNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *CreateOrUpdateAppReleaseDto) SetSize(v int64) {
	o.Size = &v
}

// GetMd5 returns the Md5 field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetMd5() string {
	if o == nil || isNil(o.Md5) {
		var ret string
		return ret
	}
	return *o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetMd5Ok() (*string, bool) {
	if o == nil || isNil(o.Md5) {
    return nil, false
	}
	return o.Md5, true
}

// HasMd5 returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasMd5() bool {
	if o != nil && !isNil(o.Md5) {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given string and assigns it to the Md5 field.
func (o *CreateOrUpdateAppReleaseDto) SetMd5(v string) {
	o.Md5 = &v
}

// GetSliceMd5 returns the SliceMd5 field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetSliceMd5() string {
	if o == nil || isNil(o.SliceMd5) {
		var ret string
		return ret
	}
	return *o.SliceMd5
}

// GetSliceMd5Ok returns a tuple with the SliceMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetSliceMd5Ok() (*string, bool) {
	if o == nil || isNil(o.SliceMd5) {
    return nil, false
	}
	return o.SliceMd5, true
}

// HasSliceMd5 returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasSliceMd5() bool {
	if o != nil && !isNil(o.SliceMd5) {
		return true
	}

	return false
}

// SetSliceMd5 gets a reference to the given string and assigns it to the SliceMd5 field.
func (o *CreateOrUpdateAppReleaseDto) SetSliceMd5(v string) {
	o.SliceMd5 = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetProductType() string {
	if o == nil || isNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetProductTypeOk() (*string, bool) {
	if o == nil || isNil(o.ProductType) {
    return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasProductType() bool {
	if o != nil && !isNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *CreateOrUpdateAppReleaseDto) SetProductType(v string) {
	o.ProductType = &v
}

// GetIsForceUpdate returns the IsForceUpdate field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetIsForceUpdate() bool {
	if o == nil || isNil(o.IsForceUpdate) {
		var ret bool
		return ret
	}
	return *o.IsForceUpdate
}

// GetIsForceUpdateOk returns a tuple with the IsForceUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetIsForceUpdateOk() (*bool, bool) {
	if o == nil || isNil(o.IsForceUpdate) {
    return nil, false
	}
	return o.IsForceUpdate, true
}

// HasIsForceUpdate returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasIsForceUpdate() bool {
	if o != nil && !isNil(o.IsForceUpdate) {
		return true
	}

	return false
}

// SetIsForceUpdate gets a reference to the given bool and assigns it to the IsForceUpdate field.
func (o *CreateOrUpdateAppReleaseDto) SetIsForceUpdate(v bool) {
	o.IsForceUpdate = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetAppId() string {
	if o == nil || isNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetAppIdOk() (*string, bool) {
	if o == nil || isNil(o.AppId) {
    return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *CreateOrUpdateAppReleaseDto) SetAppId(v string) {
	o.AppId = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetIsEnabled() bool {
	if o == nil || isNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetIsEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.IsEnabled) {
    return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasIsEnabled() bool {
	if o != nil && !isNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *CreateOrUpdateAppReleaseDto) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetChannel() string {
	if o == nil || isNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetChannelOk() (*string, bool) {
	if o == nil || isNil(o.Channel) {
    return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasChannel() bool {
	if o != nil && !isNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *CreateOrUpdateAppReleaseDto) SetChannel(v string) {
	o.Channel = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *CreateOrUpdateAppReleaseDto) GetEnvironment() string {
	if o == nil || isNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateAppReleaseDto) GetEnvironmentOk() (*string, bool) {
	if o == nil || isNil(o.Environment) {
    return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *CreateOrUpdateAppReleaseDto) HasEnvironment() bool {
	if o != nil && !isNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *CreateOrUpdateAppReleaseDto) SetEnvironment(v string) {
	o.Environment = &v
}

func (o CreateOrUpdateAppReleaseDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.VersionName) {
		toSerialize["versionName"] = o.VersionName
	}
	if !isNil(o.VersionCode) {
		toSerialize["versionCode"] = o.VersionCode
	}
	if !isNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !isNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !isNil(o.RapidCode) {
		toSerialize["rapidCode"] = o.RapidCode
	}
	if !isNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !isNil(o.Md5) {
		toSerialize["md5"] = o.Md5
	}
	if !isNil(o.SliceMd5) {
		toSerialize["sliceMd5"] = o.SliceMd5
	}
	if !isNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	if !isNil(o.IsForceUpdate) {
		toSerialize["isForceUpdate"] = o.IsForceUpdate
	}
	if !isNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !isNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if !isNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !isNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrUpdateAppReleaseDto struct {
	value *CreateOrUpdateAppReleaseDto
	isSet bool
}

func (v NullableCreateOrUpdateAppReleaseDto) Get() *CreateOrUpdateAppReleaseDto {
	return v.value
}

func (v *NullableCreateOrUpdateAppReleaseDto) Set(val *CreateOrUpdateAppReleaseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateAppReleaseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateAppReleaseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateAppReleaseDto(val *CreateOrUpdateAppReleaseDto) *NullableCreateOrUpdateAppReleaseDto {
	return &NullableCreateOrUpdateAppReleaseDto{value: val, isSet: true}
}

func (v NullableCreateOrUpdateAppReleaseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateAppReleaseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


