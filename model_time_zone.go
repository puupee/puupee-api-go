/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the TimeZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeZone{}

// TimeZone struct for TimeZone
type TimeZone struct {
	Iana *IanaTimeZone `json:"iana,omitempty"`
	Windows *WindowsTimeZone `json:"windows,omitempty"`
}

// NewTimeZone instantiates a new TimeZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeZone() *TimeZone {
	this := TimeZone{}
	return &this
}

// NewTimeZoneWithDefaults instantiates a new TimeZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeZoneWithDefaults() *TimeZone {
	this := TimeZone{}
	return &this
}

// GetIana returns the Iana field value if set, zero value otherwise.
func (o *TimeZone) GetIana() IanaTimeZone {
	if o == nil || IsNil(o.Iana) {
		var ret IanaTimeZone
		return ret
	}
	return *o.Iana
}

// GetIanaOk returns a tuple with the Iana field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZone) GetIanaOk() (*IanaTimeZone, bool) {
	if o == nil || IsNil(o.Iana) {
		return nil, false
	}
	return o.Iana, true
}

// HasIana returns a boolean if a field has been set.
func (o *TimeZone) HasIana() bool {
	if o != nil && !IsNil(o.Iana) {
		return true
	}

	return false
}

// SetIana gets a reference to the given IanaTimeZone and assigns it to the Iana field.
func (o *TimeZone) SetIana(v IanaTimeZone) {
	o.Iana = &v
}

// GetWindows returns the Windows field value if set, zero value otherwise.
func (o *TimeZone) GetWindows() WindowsTimeZone {
	if o == nil || IsNil(o.Windows) {
		var ret WindowsTimeZone
		return ret
	}
	return *o.Windows
}

// GetWindowsOk returns a tuple with the Windows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZone) GetWindowsOk() (*WindowsTimeZone, bool) {
	if o == nil || IsNil(o.Windows) {
		return nil, false
	}
	return o.Windows, true
}

// HasWindows returns a boolean if a field has been set.
func (o *TimeZone) HasWindows() bool {
	if o != nil && !IsNil(o.Windows) {
		return true
	}

	return false
}

// SetWindows gets a reference to the given WindowsTimeZone and assigns it to the Windows field.
func (o *TimeZone) SetWindows(v WindowsTimeZone) {
	o.Windows = &v
}

func (o TimeZone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Iana) {
		toSerialize["iana"] = o.Iana
	}
	if !IsNil(o.Windows) {
		toSerialize["windows"] = o.Windows
	}
	return toSerialize, nil
}

type NullableTimeZone struct {
	value *TimeZone
	isSet bool
}

func (v NullableTimeZone) Get() *TimeZone {
	return v.value
}

func (v *NullableTimeZone) Set(val *TimeZone) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeZone) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeZone(val *TimeZone) *NullableTimeZone {
	return &NullableTimeZone{value: val, isSet: true}
}

func (v NullableTimeZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


