/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// PendingRenewalInfo struct for PendingRenewalInfo
type PendingRenewalInfo struct {
	AutoRenewProductId *string `json:"auto_renew_product_id,omitempty"`
	AutoRenewStatus *string `json:"auto_renew_status,omitempty"`
	IsInBillingRetryPeriod *string `json:"is_in_billing_retry_period,omitempty"`
	OriginalTransactionId *string `json:"original_transaction_id,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	ExpirationIntent *string `json:"expiration_intent,omitempty"`
	PriceConsentStatus *string `json:"price_consent_status,omitempty"`
	GracePeriodExpiresDate *string `json:"grace_period_expires_date,omitempty"`
	GracePeriodExpiresDateMs *string `json:"grace_period_expires_date_ms,omitempty"`
	GracePeriodExpiresDatePst *string `json:"grace_period_expires_date_pst,omitempty"`
}

// NewPendingRenewalInfo instantiates a new PendingRenewalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPendingRenewalInfo() *PendingRenewalInfo {
	this := PendingRenewalInfo{}
	return &this
}

// NewPendingRenewalInfoWithDefaults instantiates a new PendingRenewalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPendingRenewalInfoWithDefaults() *PendingRenewalInfo {
	this := PendingRenewalInfo{}
	return &this
}

// GetAutoRenewProductId returns the AutoRenewProductId field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetAutoRenewProductId() string {
	if o == nil || isNil(o.AutoRenewProductId) {
		var ret string
		return ret
	}
	return *o.AutoRenewProductId
}

// GetAutoRenewProductIdOk returns a tuple with the AutoRenewProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetAutoRenewProductIdOk() (*string, bool) {
	if o == nil || isNil(o.AutoRenewProductId) {
    return nil, false
	}
	return o.AutoRenewProductId, true
}

// HasAutoRenewProductId returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasAutoRenewProductId() bool {
	if o != nil && !isNil(o.AutoRenewProductId) {
		return true
	}

	return false
}

// SetAutoRenewProductId gets a reference to the given string and assigns it to the AutoRenewProductId field.
func (o *PendingRenewalInfo) SetAutoRenewProductId(v string) {
	o.AutoRenewProductId = &v
}

// GetAutoRenewStatus returns the AutoRenewStatus field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetAutoRenewStatus() string {
	if o == nil || isNil(o.AutoRenewStatus) {
		var ret string
		return ret
	}
	return *o.AutoRenewStatus
}

// GetAutoRenewStatusOk returns a tuple with the AutoRenewStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetAutoRenewStatusOk() (*string, bool) {
	if o == nil || isNil(o.AutoRenewStatus) {
    return nil, false
	}
	return o.AutoRenewStatus, true
}

// HasAutoRenewStatus returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasAutoRenewStatus() bool {
	if o != nil && !isNil(o.AutoRenewStatus) {
		return true
	}

	return false
}

// SetAutoRenewStatus gets a reference to the given string and assigns it to the AutoRenewStatus field.
func (o *PendingRenewalInfo) SetAutoRenewStatus(v string) {
	o.AutoRenewStatus = &v
}

// GetIsInBillingRetryPeriod returns the IsInBillingRetryPeriod field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetIsInBillingRetryPeriod() string {
	if o == nil || isNil(o.IsInBillingRetryPeriod) {
		var ret string
		return ret
	}
	return *o.IsInBillingRetryPeriod
}

// GetIsInBillingRetryPeriodOk returns a tuple with the IsInBillingRetryPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetIsInBillingRetryPeriodOk() (*string, bool) {
	if o == nil || isNil(o.IsInBillingRetryPeriod) {
    return nil, false
	}
	return o.IsInBillingRetryPeriod, true
}

// HasIsInBillingRetryPeriod returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasIsInBillingRetryPeriod() bool {
	if o != nil && !isNil(o.IsInBillingRetryPeriod) {
		return true
	}

	return false
}

// SetIsInBillingRetryPeriod gets a reference to the given string and assigns it to the IsInBillingRetryPeriod field.
func (o *PendingRenewalInfo) SetIsInBillingRetryPeriod(v string) {
	o.IsInBillingRetryPeriod = &v
}

// GetOriginalTransactionId returns the OriginalTransactionId field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetOriginalTransactionId() string {
	if o == nil || isNil(o.OriginalTransactionId) {
		var ret string
		return ret
	}
	return *o.OriginalTransactionId
}

// GetOriginalTransactionIdOk returns a tuple with the OriginalTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetOriginalTransactionIdOk() (*string, bool) {
	if o == nil || isNil(o.OriginalTransactionId) {
    return nil, false
	}
	return o.OriginalTransactionId, true
}

// HasOriginalTransactionId returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasOriginalTransactionId() bool {
	if o != nil && !isNil(o.OriginalTransactionId) {
		return true
	}

	return false
}

// SetOriginalTransactionId gets a reference to the given string and assigns it to the OriginalTransactionId field.
func (o *PendingRenewalInfo) SetOriginalTransactionId(v string) {
	o.OriginalTransactionId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetProductId() string {
	if o == nil || isNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetProductIdOk() (*string, bool) {
	if o == nil || isNil(o.ProductId) {
    return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasProductId() bool {
	if o != nil && !isNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *PendingRenewalInfo) SetProductId(v string) {
	o.ProductId = &v
}

// GetExpirationIntent returns the ExpirationIntent field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetExpirationIntent() string {
	if o == nil || isNil(o.ExpirationIntent) {
		var ret string
		return ret
	}
	return *o.ExpirationIntent
}

// GetExpirationIntentOk returns a tuple with the ExpirationIntent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetExpirationIntentOk() (*string, bool) {
	if o == nil || isNil(o.ExpirationIntent) {
    return nil, false
	}
	return o.ExpirationIntent, true
}

// HasExpirationIntent returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasExpirationIntent() bool {
	if o != nil && !isNil(o.ExpirationIntent) {
		return true
	}

	return false
}

// SetExpirationIntent gets a reference to the given string and assigns it to the ExpirationIntent field.
func (o *PendingRenewalInfo) SetExpirationIntent(v string) {
	o.ExpirationIntent = &v
}

// GetPriceConsentStatus returns the PriceConsentStatus field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetPriceConsentStatus() string {
	if o == nil || isNil(o.PriceConsentStatus) {
		var ret string
		return ret
	}
	return *o.PriceConsentStatus
}

// GetPriceConsentStatusOk returns a tuple with the PriceConsentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetPriceConsentStatusOk() (*string, bool) {
	if o == nil || isNil(o.PriceConsentStatus) {
    return nil, false
	}
	return o.PriceConsentStatus, true
}

// HasPriceConsentStatus returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasPriceConsentStatus() bool {
	if o != nil && !isNil(o.PriceConsentStatus) {
		return true
	}

	return false
}

// SetPriceConsentStatus gets a reference to the given string and assigns it to the PriceConsentStatus field.
func (o *PendingRenewalInfo) SetPriceConsentStatus(v string) {
	o.PriceConsentStatus = &v
}

// GetGracePeriodExpiresDate returns the GracePeriodExpiresDate field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetGracePeriodExpiresDate() string {
	if o == nil || isNil(o.GracePeriodExpiresDate) {
		var ret string
		return ret
	}
	return *o.GracePeriodExpiresDate
}

// GetGracePeriodExpiresDateOk returns a tuple with the GracePeriodExpiresDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetGracePeriodExpiresDateOk() (*string, bool) {
	if o == nil || isNil(o.GracePeriodExpiresDate) {
    return nil, false
	}
	return o.GracePeriodExpiresDate, true
}

// HasGracePeriodExpiresDate returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasGracePeriodExpiresDate() bool {
	if o != nil && !isNil(o.GracePeriodExpiresDate) {
		return true
	}

	return false
}

// SetGracePeriodExpiresDate gets a reference to the given string and assigns it to the GracePeriodExpiresDate field.
func (o *PendingRenewalInfo) SetGracePeriodExpiresDate(v string) {
	o.GracePeriodExpiresDate = &v
}

// GetGracePeriodExpiresDateMs returns the GracePeriodExpiresDateMs field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetGracePeriodExpiresDateMs() string {
	if o == nil || isNil(o.GracePeriodExpiresDateMs) {
		var ret string
		return ret
	}
	return *o.GracePeriodExpiresDateMs
}

// GetGracePeriodExpiresDateMsOk returns a tuple with the GracePeriodExpiresDateMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetGracePeriodExpiresDateMsOk() (*string, bool) {
	if o == nil || isNil(o.GracePeriodExpiresDateMs) {
    return nil, false
	}
	return o.GracePeriodExpiresDateMs, true
}

// HasGracePeriodExpiresDateMs returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasGracePeriodExpiresDateMs() bool {
	if o != nil && !isNil(o.GracePeriodExpiresDateMs) {
		return true
	}

	return false
}

// SetGracePeriodExpiresDateMs gets a reference to the given string and assigns it to the GracePeriodExpiresDateMs field.
func (o *PendingRenewalInfo) SetGracePeriodExpiresDateMs(v string) {
	o.GracePeriodExpiresDateMs = &v
}

// GetGracePeriodExpiresDatePst returns the GracePeriodExpiresDatePst field value if set, zero value otherwise.
func (o *PendingRenewalInfo) GetGracePeriodExpiresDatePst() string {
	if o == nil || isNil(o.GracePeriodExpiresDatePst) {
		var ret string
		return ret
	}
	return *o.GracePeriodExpiresDatePst
}

// GetGracePeriodExpiresDatePstOk returns a tuple with the GracePeriodExpiresDatePst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingRenewalInfo) GetGracePeriodExpiresDatePstOk() (*string, bool) {
	if o == nil || isNil(o.GracePeriodExpiresDatePst) {
    return nil, false
	}
	return o.GracePeriodExpiresDatePst, true
}

// HasGracePeriodExpiresDatePst returns a boolean if a field has been set.
func (o *PendingRenewalInfo) HasGracePeriodExpiresDatePst() bool {
	if o != nil && !isNil(o.GracePeriodExpiresDatePst) {
		return true
	}

	return false
}

// SetGracePeriodExpiresDatePst gets a reference to the given string and assigns it to the GracePeriodExpiresDatePst field.
func (o *PendingRenewalInfo) SetGracePeriodExpiresDatePst(v string) {
	o.GracePeriodExpiresDatePst = &v
}

func (o PendingRenewalInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AutoRenewProductId) {
		toSerialize["auto_renew_product_id"] = o.AutoRenewProductId
	}
	if !isNil(o.AutoRenewStatus) {
		toSerialize["auto_renew_status"] = o.AutoRenewStatus
	}
	if !isNil(o.IsInBillingRetryPeriod) {
		toSerialize["is_in_billing_retry_period"] = o.IsInBillingRetryPeriod
	}
	if !isNil(o.OriginalTransactionId) {
		toSerialize["original_transaction_id"] = o.OriginalTransactionId
	}
	if !isNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !isNil(o.ExpirationIntent) {
		toSerialize["expiration_intent"] = o.ExpirationIntent
	}
	if !isNil(o.PriceConsentStatus) {
		toSerialize["price_consent_status"] = o.PriceConsentStatus
	}
	if !isNil(o.GracePeriodExpiresDate) {
		toSerialize["grace_period_expires_date"] = o.GracePeriodExpiresDate
	}
	if !isNil(o.GracePeriodExpiresDateMs) {
		toSerialize["grace_period_expires_date_ms"] = o.GracePeriodExpiresDateMs
	}
	if !isNil(o.GracePeriodExpiresDatePst) {
		toSerialize["grace_period_expires_date_pst"] = o.GracePeriodExpiresDatePst
	}
	return json.Marshal(toSerialize)
}

type NullablePendingRenewalInfo struct {
	value *PendingRenewalInfo
	isSet bool
}

func (v NullablePendingRenewalInfo) Get() *PendingRenewalInfo {
	return v.value
}

func (v *NullablePendingRenewalInfo) Set(val *PendingRenewalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePendingRenewalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePendingRenewalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePendingRenewalInfo(val *PendingRenewalInfo) *NullablePendingRenewalInfo {
	return &NullablePendingRenewalInfo{value: val, isSet: true}
}

func (v NullablePendingRenewalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePendingRenewalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


