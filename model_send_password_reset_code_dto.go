/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the SendPasswordResetCodeDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendPasswordResetCodeDto{}

// SendPasswordResetCodeDto struct for SendPasswordResetCodeDto
type SendPasswordResetCodeDto struct {
	Email string `json:"email"`
	AppName string `json:"appName"`
	ReturnUrl NullableString `json:"returnUrl,omitempty"`
	ReturnUrlHash NullableString `json:"returnUrlHash,omitempty"`
}

// NewSendPasswordResetCodeDto instantiates a new SendPasswordResetCodeDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendPasswordResetCodeDto(email string, appName string) *SendPasswordResetCodeDto {
	this := SendPasswordResetCodeDto{}
	this.Email = email
	this.AppName = appName
	return &this
}

// NewSendPasswordResetCodeDtoWithDefaults instantiates a new SendPasswordResetCodeDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendPasswordResetCodeDtoWithDefaults() *SendPasswordResetCodeDto {
	this := SendPasswordResetCodeDto{}
	return &this
}

// GetEmail returns the Email field value
func (o *SendPasswordResetCodeDto) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SendPasswordResetCodeDto) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SendPasswordResetCodeDto) SetEmail(v string) {
	o.Email = v
}

// GetAppName returns the AppName field value
func (o *SendPasswordResetCodeDto) GetAppName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value
// and a boolean to check if the value has been set.
func (o *SendPasswordResetCodeDto) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppName, true
}

// SetAppName sets field value
func (o *SendPasswordResetCodeDto) SetAppName(v string) {
	o.AppName = v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SendPasswordResetCodeDto) GetReturnUrl() string {
	if o == nil || IsNil(o.ReturnUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ReturnUrl.Get()
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SendPasswordResetCodeDto) GetReturnUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnUrl.Get(), o.ReturnUrl.IsSet()
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *SendPasswordResetCodeDto) HasReturnUrl() bool {
	if o != nil && o.ReturnUrl.IsSet() {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given NullableString and assigns it to the ReturnUrl field.
func (o *SendPasswordResetCodeDto) SetReturnUrl(v string) {
	o.ReturnUrl.Set(&v)
}
// SetReturnUrlNil sets the value for ReturnUrl to be an explicit nil
func (o *SendPasswordResetCodeDto) SetReturnUrlNil() {
	o.ReturnUrl.Set(nil)
}

// UnsetReturnUrl ensures that no value is present for ReturnUrl, not even an explicit nil
func (o *SendPasswordResetCodeDto) UnsetReturnUrl() {
	o.ReturnUrl.Unset()
}

// GetReturnUrlHash returns the ReturnUrlHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SendPasswordResetCodeDto) GetReturnUrlHash() string {
	if o == nil || IsNil(o.ReturnUrlHash.Get()) {
		var ret string
		return ret
	}
	return *o.ReturnUrlHash.Get()
}

// GetReturnUrlHashOk returns a tuple with the ReturnUrlHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SendPasswordResetCodeDto) GetReturnUrlHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnUrlHash.Get(), o.ReturnUrlHash.IsSet()
}

// HasReturnUrlHash returns a boolean if a field has been set.
func (o *SendPasswordResetCodeDto) HasReturnUrlHash() bool {
	if o != nil && o.ReturnUrlHash.IsSet() {
		return true
	}

	return false
}

// SetReturnUrlHash gets a reference to the given NullableString and assigns it to the ReturnUrlHash field.
func (o *SendPasswordResetCodeDto) SetReturnUrlHash(v string) {
	o.ReturnUrlHash.Set(&v)
}
// SetReturnUrlHashNil sets the value for ReturnUrlHash to be an explicit nil
func (o *SendPasswordResetCodeDto) SetReturnUrlHashNil() {
	o.ReturnUrlHash.Set(nil)
}

// UnsetReturnUrlHash ensures that no value is present for ReturnUrlHash, not even an explicit nil
func (o *SendPasswordResetCodeDto) UnsetReturnUrlHash() {
	o.ReturnUrlHash.Unset()
}

func (o SendPasswordResetCodeDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendPasswordResetCodeDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["appName"] = o.AppName
	if o.ReturnUrl.IsSet() {
		toSerialize["returnUrl"] = o.ReturnUrl.Get()
	}
	if o.ReturnUrlHash.IsSet() {
		toSerialize["returnUrlHash"] = o.ReturnUrlHash.Get()
	}
	return toSerialize, nil
}

type NullableSendPasswordResetCodeDto struct {
	value *SendPasswordResetCodeDto
	isSet bool
}

func (v NullableSendPasswordResetCodeDto) Get() *SendPasswordResetCodeDto {
	return v.value
}

func (v *NullableSendPasswordResetCodeDto) Set(val *SendPasswordResetCodeDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSendPasswordResetCodeDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSendPasswordResetCodeDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendPasswordResetCodeDto(val *SendPasswordResetCodeDto) *NullableSendPasswordResetCodeDto {
	return &NullableSendPasswordResetCodeDto{value: val, isSet: true}
}

func (v NullableSendPasswordResetCodeDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendPasswordResetCodeDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


