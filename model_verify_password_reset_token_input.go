/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.12
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyPasswordResetTokenInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyPasswordResetTokenInput{}

// VerifyPasswordResetTokenInput struct for VerifyPasswordResetTokenInput
type VerifyPasswordResetTokenInput struct {
	UserId *string `json:"userId,omitempty"`
	ResetToken string `json:"resetToken"`
}

type _VerifyPasswordResetTokenInput VerifyPasswordResetTokenInput

// NewVerifyPasswordResetTokenInput instantiates a new VerifyPasswordResetTokenInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyPasswordResetTokenInput(resetToken string) *VerifyPasswordResetTokenInput {
	this := VerifyPasswordResetTokenInput{}
	this.ResetToken = resetToken
	return &this
}

// NewVerifyPasswordResetTokenInputWithDefaults instantiates a new VerifyPasswordResetTokenInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyPasswordResetTokenInputWithDefaults() *VerifyPasswordResetTokenInput {
	this := VerifyPasswordResetTokenInput{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *VerifyPasswordResetTokenInput) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyPasswordResetTokenInput) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *VerifyPasswordResetTokenInput) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *VerifyPasswordResetTokenInput) SetUserId(v string) {
	o.UserId = &v
}

// GetResetToken returns the ResetToken field value
func (o *VerifyPasswordResetTokenInput) GetResetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResetToken
}

// GetResetTokenOk returns a tuple with the ResetToken field value
// and a boolean to check if the value has been set.
func (o *VerifyPasswordResetTokenInput) GetResetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResetToken, true
}

// SetResetToken sets field value
func (o *VerifyPasswordResetTokenInput) SetResetToken(v string) {
	o.ResetToken = v
}

func (o VerifyPasswordResetTokenInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyPasswordResetTokenInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	toSerialize["resetToken"] = o.ResetToken
	return toSerialize, nil
}

func (o *VerifyPasswordResetTokenInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resetToken",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyPasswordResetTokenInput := _VerifyPasswordResetTokenInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyPasswordResetTokenInput)

	if err != nil {
		return err
	}

	*o = VerifyPasswordResetTokenInput(varVerifyPasswordResetTokenInput)

	return err
}

type NullableVerifyPasswordResetTokenInput struct {
	value *VerifyPasswordResetTokenInput
	isSet bool
}

func (v NullableVerifyPasswordResetTokenInput) Get() *VerifyPasswordResetTokenInput {
	return v.value
}

func (v *NullableVerifyPasswordResetTokenInput) Set(val *VerifyPasswordResetTokenInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyPasswordResetTokenInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyPasswordResetTokenInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyPasswordResetTokenInput(val *VerifyPasswordResetTokenInput) *NullableVerifyPasswordResetTokenInput {
	return &NullableVerifyPasswordResetTokenInput{value: val, isSet: true}
}

func (v NullableVerifyPasswordResetTokenInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyPasswordResetTokenInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


