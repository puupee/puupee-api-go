/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// AppWithUserDtoPagedResultDto struct for AppWithUserDtoPagedResultDto
type AppWithUserDtoPagedResultDto struct {
	Items []AppWithUserDto `json:"items,omitempty"`
	TotalCount *int64 `json:"totalCount,omitempty"`
}

// NewAppWithUserDtoPagedResultDto instantiates a new AppWithUserDtoPagedResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppWithUserDtoPagedResultDto() *AppWithUserDtoPagedResultDto {
	this := AppWithUserDtoPagedResultDto{}
	return &this
}

// NewAppWithUserDtoPagedResultDtoWithDefaults instantiates a new AppWithUserDtoPagedResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppWithUserDtoPagedResultDtoWithDefaults() *AppWithUserDtoPagedResultDto {
	this := AppWithUserDtoPagedResultDto{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AppWithUserDtoPagedResultDto) GetItems() []AppWithUserDto {
	if o == nil || isNil(o.Items) {
		var ret []AppWithUserDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppWithUserDtoPagedResultDto) GetItemsOk() ([]AppWithUserDto, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AppWithUserDtoPagedResultDto) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AppWithUserDto and assigns it to the Items field.
func (o *AppWithUserDtoPagedResultDto) SetItems(v []AppWithUserDto) {
	o.Items = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *AppWithUserDtoPagedResultDto) GetTotalCount() int64 {
	if o == nil || isNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppWithUserDtoPagedResultDto) GetTotalCountOk() (*int64, bool) {
	if o == nil || isNil(o.TotalCount) {
    return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *AppWithUserDtoPagedResultDto) HasTotalCount() bool {
	if o != nil && !isNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *AppWithUserDtoPagedResultDto) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o AppWithUserDtoPagedResultDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullableAppWithUserDtoPagedResultDto struct {
	value *AppWithUserDtoPagedResultDto
	isSet bool
}

func (v NullableAppWithUserDtoPagedResultDto) Get() *AppWithUserDtoPagedResultDto {
	return v.value
}

func (v *NullableAppWithUserDtoPagedResultDto) Set(val *AppWithUserDtoPagedResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAppWithUserDtoPagedResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAppWithUserDtoPagedResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppWithUserDtoPagedResultDto(val *AppWithUserDtoPagedResultDto) *NullableAppWithUserDtoPagedResultDto {
	return &NullableAppWithUserDtoPagedResultDto{value: val, isSet: true}
}

func (v NullableAppWithUserDtoPagedResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppWithUserDtoPagedResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


