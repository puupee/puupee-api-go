/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the ModuleApiDescriptionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModuleApiDescriptionModel{}

// ModuleApiDescriptionModel struct for ModuleApiDescriptionModel
type ModuleApiDescriptionModel struct {
	RootPath NullableString `json:"rootPath,omitempty"`
	RemoteServiceName NullableString `json:"remoteServiceName,omitempty"`
	Controllers map[string]ControllerApiDescriptionModel `json:"controllers,omitempty"`
}

// NewModuleApiDescriptionModel instantiates a new ModuleApiDescriptionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModuleApiDescriptionModel() *ModuleApiDescriptionModel {
	this := ModuleApiDescriptionModel{}
	return &this
}

// NewModuleApiDescriptionModelWithDefaults instantiates a new ModuleApiDescriptionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModuleApiDescriptionModelWithDefaults() *ModuleApiDescriptionModel {
	this := ModuleApiDescriptionModel{}
	return &this
}

// GetRootPath returns the RootPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModuleApiDescriptionModel) GetRootPath() string {
	if o == nil || IsNil(o.RootPath.Get()) {
		var ret string
		return ret
	}
	return *o.RootPath.Get()
}

// GetRootPathOk returns a tuple with the RootPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModuleApiDescriptionModel) GetRootPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RootPath.Get(), o.RootPath.IsSet()
}

// HasRootPath returns a boolean if a field has been set.
func (o *ModuleApiDescriptionModel) HasRootPath() bool {
	if o != nil && o.RootPath.IsSet() {
		return true
	}

	return false
}

// SetRootPath gets a reference to the given NullableString and assigns it to the RootPath field.
func (o *ModuleApiDescriptionModel) SetRootPath(v string) {
	o.RootPath.Set(&v)
}
// SetRootPathNil sets the value for RootPath to be an explicit nil
func (o *ModuleApiDescriptionModel) SetRootPathNil() {
	o.RootPath.Set(nil)
}

// UnsetRootPath ensures that no value is present for RootPath, not even an explicit nil
func (o *ModuleApiDescriptionModel) UnsetRootPath() {
	o.RootPath.Unset()
}

// GetRemoteServiceName returns the RemoteServiceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModuleApiDescriptionModel) GetRemoteServiceName() string {
	if o == nil || IsNil(o.RemoteServiceName.Get()) {
		var ret string
		return ret
	}
	return *o.RemoteServiceName.Get()
}

// GetRemoteServiceNameOk returns a tuple with the RemoteServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModuleApiDescriptionModel) GetRemoteServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteServiceName.Get(), o.RemoteServiceName.IsSet()
}

// HasRemoteServiceName returns a boolean if a field has been set.
func (o *ModuleApiDescriptionModel) HasRemoteServiceName() bool {
	if o != nil && o.RemoteServiceName.IsSet() {
		return true
	}

	return false
}

// SetRemoteServiceName gets a reference to the given NullableString and assigns it to the RemoteServiceName field.
func (o *ModuleApiDescriptionModel) SetRemoteServiceName(v string) {
	o.RemoteServiceName.Set(&v)
}
// SetRemoteServiceNameNil sets the value for RemoteServiceName to be an explicit nil
func (o *ModuleApiDescriptionModel) SetRemoteServiceNameNil() {
	o.RemoteServiceName.Set(nil)
}

// UnsetRemoteServiceName ensures that no value is present for RemoteServiceName, not even an explicit nil
func (o *ModuleApiDescriptionModel) UnsetRemoteServiceName() {
	o.RemoteServiceName.Unset()
}

// GetControllers returns the Controllers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModuleApiDescriptionModel) GetControllers() map[string]ControllerApiDescriptionModel {
	if o == nil {
		var ret map[string]ControllerApiDescriptionModel
		return ret
	}
	return o.Controllers
}

// GetControllersOk returns a tuple with the Controllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModuleApiDescriptionModel) GetControllersOk() (*map[string]ControllerApiDescriptionModel, bool) {
	if o == nil || IsNil(o.Controllers) {
		return nil, false
	}
	return &o.Controllers, true
}

// HasControllers returns a boolean if a field has been set.
func (o *ModuleApiDescriptionModel) HasControllers() bool {
	if o != nil && IsNil(o.Controllers) {
		return true
	}

	return false
}

// SetControllers gets a reference to the given map[string]ControllerApiDescriptionModel and assigns it to the Controllers field.
func (o *ModuleApiDescriptionModel) SetControllers(v map[string]ControllerApiDescriptionModel) {
	o.Controllers = v
}

func (o ModuleApiDescriptionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModuleApiDescriptionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RootPath.IsSet() {
		toSerialize["rootPath"] = o.RootPath.Get()
	}
	if o.RemoteServiceName.IsSet() {
		toSerialize["remoteServiceName"] = o.RemoteServiceName.Get()
	}
	if o.Controllers != nil {
		toSerialize["controllers"] = o.Controllers
	}
	return toSerialize, nil
}

type NullableModuleApiDescriptionModel struct {
	value *ModuleApiDescriptionModel
	isSet bool
}

func (v NullableModuleApiDescriptionModel) Get() *ModuleApiDescriptionModel {
	return v.value
}

func (v *NullableModuleApiDescriptionModel) Set(val *ModuleApiDescriptionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModuleApiDescriptionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModuleApiDescriptionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModuleApiDescriptionModel(val *ModuleApiDescriptionModel) *NullableModuleApiDescriptionModel {
	return &NullableModuleApiDescriptionModel{value: val, isSet: true}
}

func (v NullableModuleApiDescriptionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModuleApiDescriptionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


