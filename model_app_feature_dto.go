/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// AppFeatureDto struct for AppFeatureDto
type AppFeatureDto struct {
	Name *string `json:"name,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Description *string `json:"description,omitempty"`
	Details *string `json:"details,omitempty"`
	ScreenshotKeys *string `json:"screenshotKeys,omitempty"`
}

// NewAppFeatureDto instantiates a new AppFeatureDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppFeatureDto() *AppFeatureDto {
	this := AppFeatureDto{}
	return &this
}

// NewAppFeatureDtoWithDefaults instantiates a new AppFeatureDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppFeatureDtoWithDefaults() *AppFeatureDto {
	this := AppFeatureDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppFeatureDto) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppFeatureDto) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppFeatureDto) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppFeatureDto) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AppFeatureDto) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppFeatureDto) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AppFeatureDto) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AppFeatureDto) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AppFeatureDto) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppFeatureDto) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AppFeatureDto) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AppFeatureDto) SetDescription(v string) {
	o.Description = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *AppFeatureDto) GetDetails() string {
	if o == nil || isNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppFeatureDto) GetDetailsOk() (*string, bool) {
	if o == nil || isNil(o.Details) {
    return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *AppFeatureDto) HasDetails() bool {
	if o != nil && !isNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *AppFeatureDto) SetDetails(v string) {
	o.Details = &v
}

// GetScreenshotKeys returns the ScreenshotKeys field value if set, zero value otherwise.
func (o *AppFeatureDto) GetScreenshotKeys() string {
	if o == nil || isNil(o.ScreenshotKeys) {
		var ret string
		return ret
	}
	return *o.ScreenshotKeys
}

// GetScreenshotKeysOk returns a tuple with the ScreenshotKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppFeatureDto) GetScreenshotKeysOk() (*string, bool) {
	if o == nil || isNil(o.ScreenshotKeys) {
    return nil, false
	}
	return o.ScreenshotKeys, true
}

// HasScreenshotKeys returns a boolean if a field has been set.
func (o *AppFeatureDto) HasScreenshotKeys() bool {
	if o != nil && !isNil(o.ScreenshotKeys) {
		return true
	}

	return false
}

// SetScreenshotKeys gets a reference to the given string and assigns it to the ScreenshotKeys field.
func (o *AppFeatureDto) SetScreenshotKeys(v string) {
	o.ScreenshotKeys = &v
}

func (o AppFeatureDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !isNil(o.ScreenshotKeys) {
		toSerialize["screenshotKeys"] = o.ScreenshotKeys
	}
	return json.Marshal(toSerialize)
}

type NullableAppFeatureDto struct {
	value *AppFeatureDto
	isSet bool
}

func (v NullableAppFeatureDto) Get() *AppFeatureDto {
	return v.value
}

func (v *NullableAppFeatureDto) Set(val *AppFeatureDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAppFeatureDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAppFeatureDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppFeatureDto(val *AppFeatureDto) *NullableAppFeatureDto {
	return &NullableAppFeatureDto{value: val, isSet: true}
}

func (v NullableAppFeatureDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppFeatureDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


