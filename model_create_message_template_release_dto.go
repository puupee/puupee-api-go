/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// CreateMessageTemplateReleaseDto struct for CreateMessageTemplateReleaseDto
type CreateMessageTemplateReleaseDto struct {
	TemplateName *string `json:"templateName,omitempty"`
	Version *int32 `json:"version,omitempty"`
	Content *string `json:"content,omitempty"`
	TemplateId *string `json:"templateId,omitempty"`
}

// NewCreateMessageTemplateReleaseDto instantiates a new CreateMessageTemplateReleaseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMessageTemplateReleaseDto() *CreateMessageTemplateReleaseDto {
	this := CreateMessageTemplateReleaseDto{}
	return &this
}

// NewCreateMessageTemplateReleaseDtoWithDefaults instantiates a new CreateMessageTemplateReleaseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMessageTemplateReleaseDtoWithDefaults() *CreateMessageTemplateReleaseDto {
	this := CreateMessageTemplateReleaseDto{}
	return &this
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise.
func (o *CreateMessageTemplateReleaseDto) GetTemplateName() string {
	if o == nil || isNil(o.TemplateName) {
		var ret string
		return ret
	}
	return *o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMessageTemplateReleaseDto) GetTemplateNameOk() (*string, bool) {
	if o == nil || isNil(o.TemplateName) {
    return nil, false
	}
	return o.TemplateName, true
}

// HasTemplateName returns a boolean if a field has been set.
func (o *CreateMessageTemplateReleaseDto) HasTemplateName() bool {
	if o != nil && !isNil(o.TemplateName) {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given string and assigns it to the TemplateName field.
func (o *CreateMessageTemplateReleaseDto) SetTemplateName(v string) {
	o.TemplateName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CreateMessageTemplateReleaseDto) GetVersion() int32 {
	if o == nil || isNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMessageTemplateReleaseDto) GetVersionOk() (*int32, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CreateMessageTemplateReleaseDto) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *CreateMessageTemplateReleaseDto) SetVersion(v int32) {
	o.Version = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *CreateMessageTemplateReleaseDto) GetContent() string {
	if o == nil || isNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMessageTemplateReleaseDto) GetContentOk() (*string, bool) {
	if o == nil || isNil(o.Content) {
    return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *CreateMessageTemplateReleaseDto) HasContent() bool {
	if o != nil && !isNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *CreateMessageTemplateReleaseDto) SetContent(v string) {
	o.Content = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *CreateMessageTemplateReleaseDto) GetTemplateId() string {
	if o == nil || isNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMessageTemplateReleaseDto) GetTemplateIdOk() (*string, bool) {
	if o == nil || isNil(o.TemplateId) {
    return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *CreateMessageTemplateReleaseDto) HasTemplateId() bool {
	if o != nil && !isNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *CreateMessageTemplateReleaseDto) SetTemplateId(v string) {
	o.TemplateId = &v
}

func (o CreateMessageTemplateReleaseDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TemplateName) {
		toSerialize["templateName"] = o.TemplateName
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !isNil(o.TemplateId) {
		toSerialize["templateId"] = o.TemplateId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMessageTemplateReleaseDto struct {
	value *CreateMessageTemplateReleaseDto
	isSet bool
}

func (v NullableCreateMessageTemplateReleaseDto) Get() *CreateMessageTemplateReleaseDto {
	return v.value
}

func (v *NullableCreateMessageTemplateReleaseDto) Set(val *CreateMessageTemplateReleaseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMessageTemplateReleaseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMessageTemplateReleaseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMessageTemplateReleaseDto(val *CreateMessageTemplateReleaseDto) *NullableCreateMessageTemplateReleaseDto {
	return &NullableCreateMessageTemplateReleaseDto{value: val, isSet: true}
}

func (v NullableCreateMessageTemplateReleaseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMessageTemplateReleaseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


