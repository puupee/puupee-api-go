openapi: 3.0.1
info:
  title: Puupee API
  version: 1.17.4
servers:
- url: /
security:
- oauth2: []
paths:
  /api/abp/api-definition:
    get:
      operationId: Get
      parameters:
      - in: query
        name: IncludeTypes
        schema:
          type: boolean
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationApiDescriptionModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApiDescriptionModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationApiDescriptionModel'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AbpApiDefinition
  /api/abp/application-configuration:
    get:
      operationId: Get
      parameters:
      - in: query
        name: IncludeLocalizationResources
        schema:
          type: boolean
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationConfigurationDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigurationDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfigurationDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AbpApplicationConfiguration
  /api/abp/application-localization:
    get:
      operationId: Get
      parameters:
      - in: query
        name: CultureName
        required: true
        schema:
          type: string
      - in: query
        name: OnlyDynamics
        schema:
          type: boolean
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationLocalizationDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLocalizationDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationLocalizationDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AbpApplicationLocalization
  /api/abp/multi-tenancy/tenants/by-name/{name}:
    get:
      operationId: FindTenantByName
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FindTenantResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/FindTenantResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/FindTenantResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AbpTenant
  /api/abp/multi-tenancy/tenants/by-id/{id}:
    get:
      operationId: FindTenantById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FindTenantResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/FindTenantResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/FindTenantResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AbpTenant
  /api/account/register:
    post:
      operationId: Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Account
      x-codegen-request-body-name: body
  /api/account/send-password-reset-code:
    post:
      operationId: SendPasswordResetCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPasswordResetCodeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SendPasswordResetCodeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendPasswordResetCodeDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Account
      x-codegen-request-body-name: body
  /api/account/verify-password-reset-token:
    post:
      operationId: VerifyPasswordResetToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPasswordResetTokenInput'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyPasswordResetTokenInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifyPasswordResetTokenInput'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Account
      x-codegen-request-body-name: body
  /api/account/reset-password:
    post:
      operationId: ResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Account
      x-codegen-request-body-name: body
  /api/app/account/destroy-account:
    post:
      operationId: DestroyAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDeletionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountDeletionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountDeletionDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Account
      x-codegen-request-body-name: body
  /api/app/account:
    get:
      operationId: Get
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserProfileDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserProfileDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Account
  /api/app/account/change-password:
    post:
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Account
      x-codegen-request-body-name: body
  /api/app/account/check-sync-auth:
    post:
      operationId: CheckSyncAuth
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CheckSyncAuthResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSyncAuthResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CheckSyncAuthResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 检查同步认证
      tags:
      - Account
  /api/api-keys/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - ApiKeys
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - ApiKeys
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiKeyUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiKeyUpdateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - ApiKeys
      x-codegen-request-body-name: body
  /api/api-keys:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeyDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - ApiKeys
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - ApiKeys
      x-codegen-request-body-name: body
  /api/app/app:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: CreatorId
        schema:
          format: uuid
          type: string
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取当前用户的应用列表
      tags:
      - App
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 创建新应用
      tags:
      - App
      x-codegen-request-body-name: body
  /api/app/app/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 删除应用
      tags:
      - App
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取 APP 详情
      tags:
      - App
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 更新 APP 信息
      tags:
      - App
      x-codegen-request-body-name: body
  /api/app/app/upload-credentials:
    get:
      operationId: GetUploadCredentials
      parameters:
      - in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StorageObjectCredentials'
            application/json:
              schema:
                $ref: '#/components/schemas/StorageObjectCredentials'
            text/json:
              schema:
                $ref: '#/components/schemas/StorageObjectCredentials'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取上传凭证
      tags:
      - App
  /api/app/app/run:
    post:
      operationId: Run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppRunDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AppRunDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AppRunDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppRunRecordDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppRunRecordDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppRunRecordDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - App
      x-codegen-request-body-name: body
  /api/app/app/{id}/run-state:
    put:
      operationId: UpdateRunState
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppRunRecordUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AppRunRecordUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AppRunRecordUpdateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppRunRecordDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppRunRecordDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppRunRecordDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - App
      x-codegen-request-body-name: body
  /api/app/app/{id}/with-user:
    get:
      operationId: GetWithUser
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppWithUserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppWithUserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppWithUserDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取 APP 详情
      tags:
      - App
  /api/app/app/by-name:
    get:
      operationId: GetByName
      parameters:
      - in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取 APP 详情
      tags:
      - App
  /api/app/app/sdks-by-id/{appId}:
    get:
      operationId: GetSdksById
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: env
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AppSdkDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppSdkDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppSdkDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - App
  /api/app/app/features/{appId}:
    get:
      operationId: GetFeatures
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: env
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AppFeatureDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppFeatureDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppFeatureDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - App
  /api/app/app/public:
    get:
      operationId: GetListPublic
      parameters:
      - in: query
        name: Type
        schema: {}
      - in: query
        name: DeveloperAccount
        schema:
          type: string
      - in: query
        name: CurrentAppName
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 所有开发者已发布 APP 列表
      tags:
      - App
  /api/app/app/with-user:
    get:
      operationId: GetListWithUser
      parameters:
      - in: query
        name: Type
        schema: {}
      - in: query
        name: SearchKey
        schema:
          type: string
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppWithUserDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppWithUserDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppWithUserDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取APP列表包含用户订阅信息
      tags:
      - App
  /api/app/app/by-developer-all:
    get:
      operationId: GetListByDeveloperAll
      parameters:
      - in: query
        name: developerAccount
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取开发者所有 APP 包括未发布的
      tags:
      - App
  /api/app/app-feature:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppFeatureDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppFeatureDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppFeatureDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppFeature
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppFeatureDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppFeatureDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppFeatureDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppFeatureDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppFeatureDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppFeatureDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppFeature
      x-codegen-request-body-name: body
  /api/app/app-feature/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppFeature
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppFeatureDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppFeatureDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppFeatureDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppFeatureDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppFeatureDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppFeatureDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppFeature
      x-codegen-request-body-name: body
  /api/app/app-pricing:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppPricingDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppPricingDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppPricingDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricing
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricing
      x-codegen-request-body-name: body
  /api/app/app-pricing/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricing
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricing
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppPricingDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricing
      x-codegen-request-body-name: body
  /api/app/app-pricing/by-app-id/{appId}:
    get:
      operationId: GetListByAppId
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricing
  /api/app/app-pricing/pricing-items-by-app-id/{appId}:
    get:
      operationId: GetPricingItemsByAppId
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingItemDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingItemDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingItemDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricing
  /api/app/app-pricing-item:
    get:
      operationId: GetList
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingItemDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingItemDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppPricingItemDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricingItem
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingItemDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingItemDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingItemDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricingItem
      x-codegen-request-body-name: body
  /api/app/app-pricing-item/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricingItem
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricingItem
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingItemDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingItemDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppPricingItemDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppPricingItemDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppPricingItem
      x-codegen-request-body-name: body
  /api/app/app-release:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: AppId
        schema:
          format: uuid
          type: string
      - in: query
        name: Environment
        schema:
          type: string
      - in: query
        name: Platform
        schema: {}
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppReleaseDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取版本列表
      tags:
      - AppRelease
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppReleaseDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppReleaseDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppReleaseDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 创建新版本
      tags:
      - AppRelease
      x-codegen-request-body-name: body
  /api/app/app-release/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 删除版本
      tags:
      - AppRelease
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取版本
      tags:
      - AppRelease
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppReleaseDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppReleaseDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppReleaseDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 更新版本
      tags:
      - AppRelease
      x-codegen-request-body-name: body
  /api/app/app-release/latest:
    get:
      operationId: GetLatest
      parameters:
      - in: query
        name: AppName
        schema:
          type: string
      - in: query
        name: Platform
        schema: {}
      - in: query
        name: ProductType
        schema: {}
      - in: query
        name: Environment
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppReleaseDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 获取最新版本
      tags:
      - AppRelease
  /api/app/app-sdk:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppSdkDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppSdkDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppSdkDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppSdk
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppSdkDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppSdkDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppSdkDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppSdkDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppSdkDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppSdkDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppSdk
      x-codegen-request-body-name: body
  /api/app/app-sdk/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppSdk
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppSdkDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppSdkDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppSdkDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppSdkDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppSdkDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppSdkDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppSdk
      x-codegen-request-body-name: body
  /api/app/app-user-score:
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppUserScoreDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppUserScoreDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAppUserScoreDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppUserScoreDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserScoreDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AppUserScoreDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - AppUserScore
      x-codegen-request-body-name: body
  /api/app/avatar:
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAvatarDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAvatarDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAvatarDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AvatarDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AvatarDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AvatarDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Avatar
      x-codegen-request-body-name: body
  /api/app/avatar/credentials:
    get:
      operationId: GetCredentials
      parameters:
      - in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StorageObjectCredentials'
            application/json:
              schema:
                $ref: '#/components/schemas/StorageObjectCredentials'
            text/json:
              schema:
                $ref: '#/components/schemas/StorageObjectCredentials'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Avatar
  /api/app/device/bind:
    post:
      operationId: Bind
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindDeviceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BindDeviceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindDeviceDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
      x-codegen-request-body-name: body
  /api/app/device:
    delete:
      operationId: Remove
      parameters:
      - in: query
        name: token
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DeviceDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/DeviceDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
  /api/app/device/refresh:
    post:
      operationId: Refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshDeviceStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RefreshDeviceStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefreshDeviceStatusDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
      x-codegen-request-body-name: body
  /api/app/device/{id}:
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DeviceDto'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDto'
            text/json:
              schema:
                $ref: '#/components/schemas/DeviceDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
  /api/app/device/by-token:
    get:
      operationId: GetByToken
      parameters:
      - in: query
        name: token
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DeviceDto'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDto'
            text/json:
              schema:
                $ref: '#/components/schemas/DeviceDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
  /api/account/dynamic-claims/refresh:
    post:
      operationId: Refresh
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - DynamicClaims
  /api/setting-management/emailing:
    get:
      operationId: Get
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmailSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/EmailSettingsDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - EmailSettings
    post:
      operationId: Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateEmailSettingsDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - EmailSettings
      x-codegen-request-body-name: body
  /api/setting-management/emailing/send-test-email:
    post:
      operationId: SendTestEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTestEmailInput'
          text/json:
            schema:
              $ref: '#/components/schemas/SendTestEmailInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendTestEmailInput'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - EmailSettings
      x-codegen-request-body-name: body
  /api/feature-management/features:
    delete:
      operationId: Delete
      parameters:
      - in: query
        name: providerName
        schema:
          type: string
      - in: query
        name: providerKey
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Features
    get:
      operationId: Get
      parameters:
      - in: query
        name: providerName
        schema:
          type: string
      - in: query
        name: providerKey
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetFeatureListResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeatureListResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/GetFeatureListResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Features
    put:
      operationId: Update
      parameters:
      - in: query
        name: providerName
        schema:
          type: string
      - in: query
        name: providerKey
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeaturesDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFeaturesDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFeaturesDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Features
      x-codegen-request-body-name: body
  /api/account/login:
    post:
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/UserLoginInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserLoginInfo'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AbpLoginResult'
            application/json:
              schema:
                $ref: '#/components/schemas/AbpLoginResult'
            text/json:
              schema:
                $ref: '#/components/schemas/AbpLoginResult'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Login
      x-codegen-request-body-name: body
  /api/account/logout:
    get:
      operationId: Logout
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Login
  /api/account/check-password:
    post:
      operationId: CheckPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/UserLoginInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserLoginInfo'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AbpLoginResult'
            application/json:
              schema:
                $ref: '#/components/schemas/AbpLoginResult'
            text/json:
              schema:
                $ref: '#/components/schemas/AbpLoginResult'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Login
      x-codegen-request-body-name: body
  /api/app/message/publish:
    post:
      operationId: Publish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessagePublishDto'
          text/json:
            schema:
              $ref: '#/components/schemas/MessagePublishDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessagePublishDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Message
      x-codegen-request-body-name: body
  /api/app/message/recall:
    post:
      operationId: Recall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRecallDto'
          text/json:
            schema:
              $ref: '#/components/schemas/MessageRecallDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessageRecallDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Message
      x-codegen-request-body-name: body
  /api/app/message/subscribe:
    post:
      operationId: Subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageSubscribeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/MessageSubscribeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessageSubscribeDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Message
      x-codegen-request-body-name: body
  /api/app/message/unsubscribe:
    post:
      operationId: Unsubscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageUnsubscribeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/MessageUnsubscribeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessageUnsubscribeDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Message
      x-codegen-request-body-name: body
  /api/app/message-source:
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSource
      x-codegen-request-body-name: body
  /api/app/message-source/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSource
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageSourceDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageSourceDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageSourceDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSource
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateMessageSourceDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSource
      x-codegen-request-body-name: body
  /api/app/message-source/published-list/{categoryId}:
    get:
      operationId: GetPublishedList
      parameters:
      - in: path
        name: categoryId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSource
  /api/app/message-source-category:
    get:
      operationId: GetList
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceCategoryDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceCategoryDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceCategoryDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceCategory
  /api/app/message-source-route:
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRoute
      x-codegen-request-body-name: body
  /api/app/message-source-route/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRoute
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageSourceRouteDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageSourceRouteDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageSourceRouteDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRoute
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRoute
      x-codegen-request-body-name: body
  /api/app/message-source-route/published-list/{sourceId}:
    get:
      operationId: GetPublishedList
      parameters:
      - in: path
        name: sourceId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceRouteDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceRouteDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceRouteDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRoute
  /api/app/message-source-route-sub:
    get:
      operationId: GetList
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceRouteSubDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceRouteSubDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageSourceRouteSubDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRouteSub
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteSubDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteSubDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteSubDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRouteSub
      x-codegen-request-body-name: body
  /api/app/message-source-route-sub/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRouteSub
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageSourceRouteSubDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageSourceRouteSubDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageSourceRouteSubDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRouteSub
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteSubDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteSubDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateMessageSourceRouteSubDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageSourceRouteSub
      x-codegen-request-body-name: body
  /api/app/message-template:
    get:
      operationId: GetList
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/MessageTemplateDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageTemplateDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageTemplateDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageTemplate
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMessageTemplateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMessageTemplateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMessageTemplateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageTemplate
      x-codegen-request-body-name: body
  /api/app/message-template/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageTemplate
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageTemplate
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMessageTemplateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMessageTemplateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateMessageTemplateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageTemplate
      x-codegen-request-body-name: body
  /api/app/message-template-release:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: templateId
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/MessageTemplateReleaseDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageTemplateReleaseDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageTemplateReleaseDto'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageTemplateRelease
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateReleaseDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateReleaseDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateReleaseDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageTemplateReleaseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateReleaseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateReleaseDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageTemplateRelease
      x-codegen-request-body-name: body
  /api/app/message-template-release/{id}:
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageTemplateReleaseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateReleaseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateReleaseDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - MessageTemplateRelease
  /api/app/notification/bark/{apiKey}/{message}:
    get:
      operationId: Bark
      parameters:
      - description: "Bark apiKey, 需要申请，注意不要泄露，泄露后产生安全问题请及时移除或禁用 apiKey"
        in: path
        name: apiKey
        required: true
        schema:
          type: string
      - description: 消息内容
        in: path
        name: message
        required: true
        schema:
          type: string
      - description: 携带参数 automaticallyCopy=1， 收到推送时，推送内容会自动复制到粘贴板（如发现不能自动复制，可尝试重启一下手机）
        in: query
        name: automaticallyCopy
        schema:
          default: 0
          format: int32
          type: integer
      - description: 携带copy参数， 则上面两种复制操作，将只复制copy参数的值
        in: query
        name: copy
        schema:
          type: string
      - description: 点击推送将跳转到url的地址（发送时，URL参数需要编码）
        in: query
        name: url
        schema:
          type: string
      - description: 指定是否需要保存推送信息到历史记录，1 为保存，其他值为不保存。\n如果不指定这个参数，推送信息将按照APP内设置来决定是否保存。
        in: query
        name: isArchive
        schema:
          type: string
      - description: 指定推送消息分组，可在历史记录中按分组查看推送。
        in: query
        name: group
        schema:
          type: string
      - description: "指定推送消息图标, icon (仅 iOS15 或以上支持）"
        in: query
        name: icon
        schema:
          type: string
      - description: 设置时效性通知 active：不设置时的默认值，系统会立即亮屏显示通知。\ntimeSensitive：时效性通知，可在专注状态下显示通知。\npassive：仅将通知添加到通知列表，不会亮屏提醒
        in: query
        name: level
        schema: {}
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: "Bark 推送，兼容 Bark 推送协议\r\nTODO: 验证 API KEY 功能, 添加[个人访问令牌]功能"
      tags:
      - Notification
  /api/app/notification:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NotificationInfoDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationInfoDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationInfoDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Notification
  /api/app/notification/push:
    post:
      operationId: Push
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePushNotificationDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePushNotificationDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePushNotificationDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Notification
      x-codegen-request-body-name: body
  /api/permission-management/permissions:
    get:
      operationId: Get
      parameters:
      - in: query
        name: providerName
        schema:
          type: string
      - in: query
        name: providerKey
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetPermissionListResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionListResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/GetPermissionListResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Permissions
    put:
      operationId: Update
      parameters:
      - in: query
        name: providerName
        schema:
          type: string
      - in: query
        name: providerKey
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionsDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Permissions
      x-codegen-request-body-name: body
  /api/account/my-profile:
    get:
      operationId: Get
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Profile
    put:
      operationId: Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProfileDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Profile
      x-codegen-request-body-name: body
  /api/account/my-profile/change-password:
    post:
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordInput'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordInput'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Profile
      x-codegen-request-body-name: body
  /api/identity/roles/all:
    get:
      operationId: GetAllList
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Role
  /api/identity/roles:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Filter
        schema:
          type: string
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Role
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRoleCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityRoleCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityRoleCreateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Role
      x-codegen-request-body-name: body
  /api/identity/roles/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Role
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Role
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityRoleUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityRoleUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityRoleUpdateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Role
      x-codegen-request-body-name: body
  /api/app/storage-object/file-or-credentials:
    get:
      operationId: GetFileOrCredentials
      parameters:
      - in: query
        name: rapidCode
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StorageObjectOrCredentialsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/StorageObjectOrCredentialsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/StorageObjectOrCredentialsDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - StorageObject
  /api/app/storage-object/pre-sign-url:
    post:
      operationId: PreSignUrl
      parameters:
      - in: query
        name: key
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - StorageObject
  /api/app/subscription/apple-notifications:
    post:
      operationId: AppleNotifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppleNotificaionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AppleNotificaionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AppleNotificaionDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      summary: 苹果订阅 Callback 地址
      tags:
      - Subscription
      x-codegen-request-body-name: body
  /api/app/subscription/order:
    post:
      operationId: CreateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrGetSubscriptionOrderDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrGetSubscriptionOrderDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrGetSubscriptionOrderDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionOrderDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Subscription
      x-codegen-request-body-name: body
  /api/app/subscription/verify-receipt:
    post:
      operationId: VerifyReceipt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyReceiptDto'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyReceiptDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifyReceiptDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VerifyReceiptResult'
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyReceiptResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VerifyReceiptResult'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Subscription
      x-codegen-request-body-name: body
  /api/app/subscription:
    get:
      operationId: GetById
      parameters:
      - in: query
        name: appId
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SubscriptionDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Subscription
  /api/multi-tenancy/tenants/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tenant
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TenantDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tenant
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantUpdateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TenantDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /api/multi-tenancy/tenants:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Filter
        schema:
          type: string
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TenantDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TenantDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tenant
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/TenantCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TenantCreateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TenantDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TenantDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tenant
      x-codegen-request-body-name: body
  /api/multi-tenancy/tenants/{id}/default-connection-string:
    delete:
      operationId: DeleteDefaultConnectionString
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tenant
    get:
      operationId: GetDefaultConnectionString
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tenant
    put:
      operationId: UpdateDefaultConnectionString
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: defaultConnectionString
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tenant
  /api/setting-management/timezone:
    get:
      operationId: Get
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - TimeZoneSettings
    post:
      operationId: Update
      parameters:
      - in: query
        name: timezone
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - TimeZoneSettings
  /api/setting-management/timezone/timezones:
    get:
      operationId: GetTimezones
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/NameValue'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NameValue'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/NameValue'
                type: array
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - TimeZoneSettings
  /api/identity/users/{id}:
    delete:
      operationId: Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
    get:
      operationId: GetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
    put:
      operationId: Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUserUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityUserUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityUserUpdateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
      x-codegen-request-body-name: body
  /api/identity/users:
    get:
      operationId: GetList
      parameters:
      - in: query
        name: Filter
        schema:
          type: string
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityUserDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
    post:
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUserCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityUserCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityUserCreateDto'
        required: false
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
      x-codegen-request-body-name: body
  /api/identity/users/{id}/roles:
    get:
      operationId: GetRoles
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
    put:
      operationId: UpdateRoles
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUserUpdateRolesDto'
          text/json:
            schema:
              $ref: '#/components/schemas/IdentityUserUpdateRolesDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IdentityUserUpdateRolesDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
      x-codegen-request-body-name: body
  /api/identity/users/assignable-roles:
    get:
      operationId: GetAssignableRoles
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityRoleDtoListResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
  /api/identity/users/by-username/{userName}:
    get:
      operationId: FindByUsername
      parameters:
      - in: path
        name: userName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
  /api/identity/users/by-email/{email}:
    get:
      operationId: FindByEmail
      parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
            text/json:
              schema:
                $ref: '#/components/schemas/IdentityUserDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - User
  /api/identity/users/lookup/{id}:
    get:
      operationId: FindById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserData'
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
            text/json:
              schema:
                $ref: '#/components/schemas/UserData'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - UserLookup
  /api/identity/users/lookup/by-username/{userName}:
    get:
      operationId: FindByUserName
      parameters:
      - in: path
        name: userName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserData'
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
            text/json:
              schema:
                $ref: '#/components/schemas/UserData'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - UserLookup
  /api/identity/users/lookup/search:
    get:
      operationId: Search
      parameters:
      - in: query
        name: Filter
        schema:
          type: string
      - in: query
        name: Sorting
        schema:
          type: string
      - in: query
        name: SkipCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      - in: query
        name: MaxResultCount
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserDataListResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataListResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDataListResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - UserLookup
  /api/identity/users/lookup/count:
    get:
      operationId: GetCount
      parameters:
      - in: query
        name: Filter
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: int64
                type: integer
            application/json:
              schema:
                format: int64
                type: integer
            text/json:
              schema:
                format: int64
                type: integer
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - UserLookup
  /api/app/verification/send-code:
    post:
      operationId: SendCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendVerificationCodeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SendVerificationCodeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendVerificationCodeDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Verification
      x-codegen-request-body-name: body
  /api/app/verification/send-code-anonymous:
    post:
      operationId: SendCodeAnonymous
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendVerificationCodeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SendVerificationCodeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendVerificationCodeDto'
        required: false
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Verification
      x-codegen-request-body-name: body
components:
  schemas:
    AbpLoginResult:
      example:
        result: null
        description: description
      properties:
        result:
          $ref: '#/components/schemas/LoginResultType'
        description:
          readOnly: true
          type: string
      type: object
    AccountDeletionDto:
      example:
        code: code
      properties:
        code:
          type: string
      type: object
    ActionApiDescriptionModel:
      example:
        allowAnonymous: true
        uniqueName: uniqueName
        supportedVersions:
        - supportedVersions
        - supportedVersions
        parametersOnMethod:
        - typeAsString: typeAsString
          defaultValue: "{}"
          name: name
          typeSimple: typeSimple
          isOptional: true
          type: type
        - typeAsString: typeAsString
          defaultValue: "{}"
          name: name
          typeSimple: typeSimple
          isOptional: true
          type: type
        returnValue:
          typeSimple: typeSimple
          type: type
        implementFrom: implementFrom
        name: name
        httpMethod: httpMethod
        parameters:
        - jsonName: jsonName
          defaultValue: "{}"
          bindingSourceId: bindingSourceId
          name: name
          typeSimple: typeSimple
          constraintTypes:
          - constraintTypes
          - constraintTypes
          isOptional: true
          type: type
          nameOnMethod: nameOnMethod
          descriptorName: descriptorName
        - jsonName: jsonName
          defaultValue: "{}"
          bindingSourceId: bindingSourceId
          name: name
          typeSimple: typeSimple
          constraintTypes:
          - constraintTypes
          - constraintTypes
          isOptional: true
          type: type
          nameOnMethod: nameOnMethod
          descriptorName: descriptorName
        url: url
      properties:
        uniqueName:
          type: string
        name:
          type: string
        httpMethod:
          type: string
        url:
          type: string
        supportedVersions:
          items:
            type: string
          type: array
        parametersOnMethod:
          items:
            $ref: '#/components/schemas/MethodParameterApiDescriptionModel'
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/ParameterApiDescriptionModel'
          type: array
        returnValue:
          $ref: '#/components/schemas/ReturnValueApiDescriptionModel'
        allowAnonymous:
          type: boolean
        implementFrom:
          type: string
      type: object
    ApiKeyCreateDto:
      example:
        name: name
        active: true
        expireAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          maxLength: 32
          minLength: 1
          type: string
        active:
          type: boolean
        expireAt:
          format: date-time
          type: string
      required:
      - name
      type: object
    ApiKeyDto:
      example:
        name: name
        active: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expireAt: 2000-01-23T04:56:07.000+00:00
        key: key
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        key:
          type: string
        active:
          type: boolean
        expireAt:
          format: date-time
          type: string
      type: object
    ApiKeyDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - name: name
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expireAt: 2000-01-23T04:56:07.000+00:00
          key: key
        - name: name
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expireAt: 2000-01-23T04:56:07.000+00:00
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApiKeyDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    ApiKeyUpdateDto:
      example:
        name: name
        active: true
        expireAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          maxLength: 32
          minLength: 1
          type: string
        active:
          type: boolean
        expireAt:
          format: date-time
          type: string
      required:
      - name
      type: object
    AppDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        sortIndex: 0
        displayName: displayName
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        icon: icon
        businessUrl: businessUrl
        description: description
        deletionTime: 2000-01-23T04:56:07.000+00:00
        defaultSingleFileMaxSize: 1
        sdks:
        - privacyUrl: privacyUrl
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          privacy: privacy
          deletionTime: 2000-01-23T04:56:07.000+00:00
          homePage: homePage
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - privacyUrl: privacyUrl
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          privacy: privacy
          deletionTime: 2000-01-23T04:56:07.000+00:00
          homePage: homePage
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        homePage: homePage
        specJsonSchema: specJsonSchema
        features:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          details: details
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          screenshotKeys: screenshotKeys
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          details: details
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          screenshotKeys: screenshotKeys
        isDeleted: true
        appType: null
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        latestReleases:
        - artifactType: null
          notes: notes
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          downloadUrl: downloadUrl
          channel: channel
          deletionTime: 2000-01-23T04:56:07.000+00:00
          versionName: versionName
          platform: null
          isDeleted: true
          appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          key: key
          version: version
          versionCode: 5
          environment: environment
          size: 5
          isEnabled: true
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isForceUpdate: true
          md5: md5
        - artifactType: null
          notes: notes
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          downloadUrl: downloadUrl
          channel: channel
          deletionTime: 2000-01-23T04:56:07.000+00:00
          versionName: versionName
          platform: null
          isDeleted: true
          appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          key: key
          version: version
          versionCode: 5
          environment: environment
          size: 5
          isEnabled: true
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isForceUpdate: true
          md5: md5
        defaultStorageSize: 6
        creator:
          creationTime: 2000-01-23T04:56:07.000+00:00
          emailConfirmed: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
          lockoutEnabled: true
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraProperties:
            key: "{}"
          deletionTime: 2000-01-23T04:56:07.000+00:00
          userName: userName
          isActive: true
          phoneNumberConfirmed: true
          entityVersion: 6
          phoneNumber: phoneNumber
          isDeleted: true
          surname: surname
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessFailedCount: 0
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
          email: email
          lockoutEnd: 2000-01-23T04:56:07.000+00:00
        isPublished: true
        gitRepositoryType: null
        webhookUrl: webhookUrl
        gitRepository: gitRepository
        subscriptionPlatforms: subscriptionPlatforms
        freePlatforms: freePlatforms
        framework: null
        isEnabled: true
        name: name
        businessDomain: businessDomain
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        name:
          type: string
        displayName:
          type: string
        framework:
          $ref: '#/components/schemas/AppFramework'
        appType:
          $ref: '#/components/schemas/AppType'
        description:
          type: string
        icon:
          type: string
        homePage:
          description: 产品首页
          type: string
        sortIndex:
          description: 显示排序
          format: int32
          type: integer
        gitRepository:
          type: string
        gitRepositoryType:
          $ref: '#/components/schemas/GitRepositoryType'
        isEnabled:
          type: boolean
        isPublished:
          description: "是否已经发布, 决定了是否给终端用户看见, 主要有一些 APP 自己使用"
          type: boolean
        webhookUrl:
          description: Webhook Url 各种事件回调地址
          type: string
        businessDomain:
          description: 业务域名
          type: string
        businessUrl:
          description: 业务地址
          type: string
        subscriptionPlatforms:
          description: "可以订阅的平台 Platform 枚举, 并用\",\"分割"
          type: string
        freePlatforms:
          description: "暂时免费的平台, 付费功能免费用的平台, 用\",\"分割"
          type: string
        specJsonSchema:
          description: 声明格式
          type: string
        defaultStorageSize:
          description: 默认存储空间大小
          format: int64
          type: integer
        defaultSingleFileMaxSize:
          description: 默认单文件最大大小
          format: int64
          type: integer
        latestReleases:
          items:
            $ref: '#/components/schemas/AppReleaseDto'
          type: array
        creator:
          $ref: '#/components/schemas/IdentityUserDto'
        features:
          items:
            $ref: '#/components/schemas/AppFeatureDto'
          type: array
        sdks:
          items:
            $ref: '#/components/schemas/AppSdkDto'
          type: array
      type: object
    AppDtoPagedResultDto:
      example:
        totalCount: 2
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          sortIndex: 0
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          businessUrl: businessUrl
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          defaultSingleFileMaxSize: 1
          sdks:
          - privacyUrl: privacyUrl
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            privacy: privacy
            deletionTime: 2000-01-23T04:56:07.000+00:00
            homePage: homePage
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - privacyUrl: privacyUrl
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            privacy: privacy
            deletionTime: 2000-01-23T04:56:07.000+00:00
            homePage: homePage
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          homePage: homePage
          specJsonSchema: specJsonSchema
          features:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            deletionTime: 2000-01-23T04:56:07.000+00:00
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            details: details
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            screenshotKeys: screenshotKeys
          - creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            deletionTime: 2000-01-23T04:56:07.000+00:00
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            details: details
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            screenshotKeys: screenshotKeys
          isDeleted: true
          appType: null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latestReleases:
          - artifactType: null
            notes: notes
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            downloadUrl: downloadUrl
            channel: channel
            deletionTime: 2000-01-23T04:56:07.000+00:00
            versionName: versionName
            platform: null
            isDeleted: true
            appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            key: key
            version: version
            versionCode: 5
            environment: environment
            size: 5
            isEnabled: true
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isForceUpdate: true
            md5: md5
          - artifactType: null
            notes: notes
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            downloadUrl: downloadUrl
            channel: channel
            deletionTime: 2000-01-23T04:56:07.000+00:00
            versionName: versionName
            platform: null
            isDeleted: true
            appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            key: key
            version: version
            versionCode: 5
            environment: environment
            size: 5
            isEnabled: true
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isForceUpdate: true
            md5: md5
          defaultStorageSize: 6
          creator:
            creationTime: 2000-01-23T04:56:07.000+00:00
            emailConfirmed: true
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
            lockoutEnabled: true
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            extraProperties:
              key: "{}"
            deletionTime: 2000-01-23T04:56:07.000+00:00
            userName: userName
            isActive: true
            phoneNumberConfirmed: true
            entityVersion: 6
            phoneNumber: phoneNumber
            isDeleted: true
            surname: surname
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            accessFailedCount: 0
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            concurrencyStamp: concurrencyStamp
            email: email
            lockoutEnd: 2000-01-23T04:56:07.000+00:00
          isPublished: true
          gitRepositoryType: null
          webhookUrl: webhookUrl
          gitRepository: gitRepository
          subscriptionPlatforms: subscriptionPlatforms
          freePlatforms: freePlatforms
          framework: null
          isEnabled: true
          name: name
          businessDomain: businessDomain
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          sortIndex: 0
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          businessUrl: businessUrl
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          defaultSingleFileMaxSize: 1
          sdks:
          - privacyUrl: privacyUrl
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            privacy: privacy
            deletionTime: 2000-01-23T04:56:07.000+00:00
            homePage: homePage
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - privacyUrl: privacyUrl
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            privacy: privacy
            deletionTime: 2000-01-23T04:56:07.000+00:00
            homePage: homePage
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          homePage: homePage
          specJsonSchema: specJsonSchema
          features:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            deletionTime: 2000-01-23T04:56:07.000+00:00
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            details: details
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            screenshotKeys: screenshotKeys
          - creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            deletionTime: 2000-01-23T04:56:07.000+00:00
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            details: details
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            screenshotKeys: screenshotKeys
          isDeleted: true
          appType: null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latestReleases:
          - artifactType: null
            notes: notes
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            downloadUrl: downloadUrl
            channel: channel
            deletionTime: 2000-01-23T04:56:07.000+00:00
            versionName: versionName
            platform: null
            isDeleted: true
            appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            key: key
            version: version
            versionCode: 5
            environment: environment
            size: 5
            isEnabled: true
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isForceUpdate: true
            md5: md5
          - artifactType: null
            notes: notes
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            downloadUrl: downloadUrl
            channel: channel
            deletionTime: 2000-01-23T04:56:07.000+00:00
            versionName: versionName
            platform: null
            isDeleted: true
            appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            key: key
            version: version
            versionCode: 5
            environment: environment
            size: 5
            isEnabled: true
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isForceUpdate: true
            md5: md5
          defaultStorageSize: 6
          creator:
            creationTime: 2000-01-23T04:56:07.000+00:00
            emailConfirmed: true
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
            lockoutEnabled: true
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            extraProperties:
              key: "{}"
            deletionTime: 2000-01-23T04:56:07.000+00:00
            userName: userName
            isActive: true
            phoneNumberConfirmed: true
            entityVersion: 6
            phoneNumber: phoneNumber
            isDeleted: true
            surname: surname
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            accessFailedCount: 0
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            concurrencyStamp: concurrencyStamp
            email: email
            lockoutEnd: 2000-01-23T04:56:07.000+00:00
          isPublished: true
          gitRepositoryType: null
          webhookUrl: webhookUrl
          gitRepository: gitRepository
          subscriptionPlatforms: subscriptionPlatforms
          freePlatforms: freePlatforms
          framework: null
          isEnabled: true
          name: name
          businessDomain: businessDomain
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    AppFeatureDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        deletionTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        name: name
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        details: details
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        screenshotKeys: screenshotKeys
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        details:
          type: string
        screenshotKeys:
          type: string
      type: object
    AppFeatureDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          details: details
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          screenshotKeys: screenshotKeys
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          details: details
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          screenshotKeys: screenshotKeys
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppFeatureDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    AppFramework:
      description: 技术框架
      enum:
      - Flutter
      - ReactNative
      - React
      - NativeIOS
      - NativeAndroid
      - NativeWindows
      - NativeMacOS
      - Ionic
      - AspNetCore
      - Other
      - Golang
      type: string
    AppPlatform:
      enum:
      - None
      - Unknown
      - Android
      - IOS
      - MacOS
      - Windows
      - Linux
      - Web
      - Service
      - Other
      type: string
    AppPriceNaming:
      enum:
      - Free
      - Premium
      - Pro
      - Enterprise
      type: string
    AppPricingDto:
      example:
        monthProductId: monthProductId
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        sortIndex: 7
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        deletionTime: 2000-01-23T04:56:07.000+00:00
        yearProductId: yearProductId
        isDeleted: true
        yearDiscountPrice: 2.3021358869347655
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        monthDiscountStartAt: 2000-01-23T04:56:07.000+00:00
        yearPrice: 5.962133916683182
        monthDiscount: 6.027456183070403
        yearDiscountEndAt: 2000-01-23T04:56:07.000+00:00
        yearDiscountStartAt: 2000-01-23T04:56:07.000+00:00
        monthPrice: 0.8008281904610115
        naming: null
        monthDiscountEndAt: 2000-01-23T04:56:07.000+00:00
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        items:
        - isAvailable: true
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          intValue: 9
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          hasValue: true
          intValueType: intValueType
          stringValue: stringValue
          isDeleted: true
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          boolValue: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - isAvailable: true
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          intValue: 9
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          hasValue: true
          intValueType: intValueType
          stringValue: stringValue
          isDeleted: true
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          boolValue: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        monthDiscountPrice: 1.4658129805029452
        yearDiscount: 5.637376656633329
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        naming:
          $ref: '#/components/schemas/AppPriceNaming'
        monthProductId:
          description: 商店订阅产品 ID
          type: string
        yearProductId:
          description: 商店订阅产品 ID
          type: string
        description:
          description: "简单描述\r\n适用于个人网站和任何想用基本的聊天方式与游客交流的人。\r\n适用于希望改善客户关系的早期创业公司。\
            \r\n为需要全功能解决方案与客户沟通的公司而设。"
          type: string
        appId:
          description: APPID
          format: uuid
          type: string
        monthPrice:
          description: 价格
          format: double
          type: number
        monthDiscount:
          description: 折扣
          format: double
          type: number
        monthDiscountPrice:
          description: 折扣后价格 DiscountPrice = Price * Discount
          format: double
          type: number
        monthDiscountStartAt:
          description: 折扣开始时间
          format: date-time
          type: string
        monthDiscountEndAt:
          description: 折扣结束时间
          format: date-time
          type: string
        yearPrice:
          description: 价格
          format: double
          type: number
        yearDiscount:
          description: 折扣
          format: double
          type: number
        yearDiscountPrice:
          description: 折扣后价格 DiscountPrice = Price * Discount
          format: double
          type: number
        yearDiscountStartAt:
          description: 折扣开始时间
          format: date-time
          type: string
        yearDiscountEndAt:
          description: 折扣结束时间
          format: date-time
          type: string
        sortIndex:
          description: 排序
          format: int32
          type: integer
        items:
          description: 收费点
          items:
            $ref: '#/components/schemas/AppPricingItemValueDto'
          type: array
      type: object
    AppPricingDtoPagedResultDto:
      example:
        totalCount: 3
        items:
        - monthProductId: monthProductId
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          sortIndex: 7
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          yearProductId: yearProductId
          isDeleted: true
          yearDiscountPrice: 2.3021358869347655
          appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          monthDiscountStartAt: 2000-01-23T04:56:07.000+00:00
          yearPrice: 5.962133916683182
          monthDiscount: 6.027456183070403
          yearDiscountEndAt: 2000-01-23T04:56:07.000+00:00
          yearDiscountStartAt: 2000-01-23T04:56:07.000+00:00
          monthPrice: 0.8008281904610115
          naming: null
          monthDiscountEndAt: 2000-01-23T04:56:07.000+00:00
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          items:
          - isAvailable: true
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            intValue: 9
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            hasValue: true
            intValueType: intValueType
            stringValue: stringValue
            isDeleted: true
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            boolValue: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - isAvailable: true
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            intValue: 9
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            hasValue: true
            intValueType: intValueType
            stringValue: stringValue
            isDeleted: true
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            boolValue: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          monthDiscountPrice: 1.4658129805029452
          yearDiscount: 5.637376656633329
        - monthProductId: monthProductId
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          sortIndex: 7
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          yearProductId: yearProductId
          isDeleted: true
          yearDiscountPrice: 2.3021358869347655
          appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          monthDiscountStartAt: 2000-01-23T04:56:07.000+00:00
          yearPrice: 5.962133916683182
          monthDiscount: 6.027456183070403
          yearDiscountEndAt: 2000-01-23T04:56:07.000+00:00
          yearDiscountStartAt: 2000-01-23T04:56:07.000+00:00
          monthPrice: 0.8008281904610115
          naming: null
          monthDiscountEndAt: 2000-01-23T04:56:07.000+00:00
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          items:
          - isAvailable: true
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            intValue: 9
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            hasValue: true
            intValueType: intValueType
            stringValue: stringValue
            isDeleted: true
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            boolValue: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - isAvailable: true
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            intValue: 9
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            hasValue: true
            intValueType: intValueType
            stringValue: stringValue
            isDeleted: true
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            boolValue: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          monthDiscountPrice: 1.4658129805029452
          yearDiscount: 5.637376656633329
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppPricingDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    AppPricingItemDto:
      example:
        isAvailable: true
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        sortIndex: 0
        display: display
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        deletionTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        name: name
        linkUrl: linkUrl
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        key: key
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        key:
          description: "键值, 例如: Seat, SingleFileMaxSize, UserStorageSize, MaxPuupeeCount,\
            \ 见 AppPricingItemKeys.cs"
          type: string
        name:
          description: "名称: 坐席"
          type: string
        description:
          description: "描述, 使用 Markdown 格式, 允许包含图片"
          type: string
        linkUrl:
          description: 链接地址
          type: string
        display:
          description: "显示模板: 包括{0}个坐席"
          type: string
        isAvailable:
          description: 是否可用
          type: boolean
        sortIndex:
          description: 排序
          format: int32
          type: integer
      type: object
    AppPricingItemValueDto:
      example:
        isAvailable: true
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        intValue: 9
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        hasValue: true
        intValueType: intValueType
        stringValue: stringValue
        isDeleted: true
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        boolValue: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        isAvailable:
          description: 是否可用
          type: boolean
        hasValue:
          description: 是否有值
          type: boolean
        intValue:
          format: int64
          type: integer
        stringValue:
          type: string
        boolValue:
          type: boolean
        intValueType:
          description: "数字值类型, FileSize: 文件大小, Count: 数目"
          type: string
      type: object
    AppReleaseDto:
      example:
        artifactType: null
        notes: notes
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        downloadUrl: downloadUrl
        channel: channel
        deletionTime: 2000-01-23T04:56:07.000+00:00
        versionName: versionName
        platform: null
        isDeleted: true
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rapidCode: rapidCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sliceMd5: sliceMd5
        key: key
        version: version
        versionCode: 5
        environment: environment
        size: 5
        isEnabled: true
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isForceUpdate: true
        md5: md5
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        version:
          type: string
        versionName:
          description: 版本名称
          type: string
        versionCode:
          description: 构建编号
          format: int64
          type: integer
        notes:
          type: string
        platform:
          $ref: '#/components/schemas/AppPlatform'
        key:
          type: string
        rapidCode:
          type: string
        size:
          format: int64
          type: integer
        md5:
          type: string
        sliceMd5:
          type: string
        downloadUrl:
          type: string
        artifactType:
          $ref: '#/components/schemas/ArtifactType'
        isForceUpdate:
          type: boolean
        appId:
          format: uuid
          type: string
        isEnabled:
          type: boolean
        channel:
          type: string
        environment:
          type: string
      type: object
    AppReleaseDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - artifactType: null
          notes: notes
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          downloadUrl: downloadUrl
          channel: channel
          deletionTime: 2000-01-23T04:56:07.000+00:00
          versionName: versionName
          platform: null
          isDeleted: true
          appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          key: key
          version: version
          versionCode: 5
          environment: environment
          size: 5
          isEnabled: true
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isForceUpdate: true
          md5: md5
        - artifactType: null
          notes: notes
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          downloadUrl: downloadUrl
          channel: channel
          deletionTime: 2000-01-23T04:56:07.000+00:00
          versionName: versionName
          platform: null
          isDeleted: true
          appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          key: key
          version: version
          versionCode: 5
          environment: environment
          size: 5
          isEnabled: true
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isForceUpdate: true
          md5: md5
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppReleaseDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    AppRunDto:
      example:
        args: "{}"
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        appName: appName
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        envs: "{}"
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        appId:
          format: uuid
          type: string
        appName:
          type: string
        args:
          type: object
        envs:
          type: object
      type: object
    AppRunRecordDto:
      example:
        workerId: workerId
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        appName: appName
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        envs: "{}"
        deletionTime: 2000-01-23T04:56:07.000+00:00
        error: error
        args: "{}"
        result: result
        output: output
        isDeleted: true
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workerName: workerName
        finishAt: 2000-01-23T04:56:07.000+00:00
        status: null
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        appId:
          format: uuid
          type: string
        appName:
          type: string
        args:
          type: object
        envs:
          type: object
        status:
          $ref: '#/components/schemas/AppRunStatus'
        result:
          type: string
        error:
          type: string
        finishAt:
          format: date-time
          type: string
        output:
          type: string
        workerId:
          type: string
        workerName:
          type: string
      type: object
    AppRunRecordUpdateDto:
      example:
        workerId: workerId
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        error: error
        result: result
        output: output
        isDeleted: true
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workerName: workerName
        finishAt: 2000-01-23T04:56:07.000+00:00
        status: null
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/AppRunStatus'
        result:
          type: string
        error:
          type: string
        finishAt:
          format: date-time
          type: string
        output:
          type: string
        workerId:
          minLength: 1
          type: string
        workerName:
          minLength: 1
          type: string
      required:
      - status
      - workerId
      - workerName
      type: object
    AppRunStatus:
      description: Represents the status of an app run.
      enum:
      - Pending
      - Distributed
      - Waiting
      - Running
      - Canceled
      - Failed
      - Succeed
      type: string
    AppSdkDto:
      example:
        privacyUrl: privacyUrl
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        privacy: privacy
        deletionTime: 2000-01-23T04:56:07.000+00:00
        homePage: homePage
        isDeleted: true
        name: name
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        name:
          type: string
        description:
          type: string
        privacy:
          type: string
        privacyUrl:
          type: string
        homePage:
          type: string
      type: object
    AppSdkDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - privacyUrl: privacyUrl
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          privacy: privacy
          deletionTime: 2000-01-23T04:56:07.000+00:00
          homePage: homePage
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - privacyUrl: privacyUrl
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          privacy: privacy
          deletionTime: 2000-01-23T04:56:07.000+00:00
          homePage: homePage
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppSdkDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    AppType:
      description: 应用类型
      enum:
      - Client
      - Service
      - Web
      - MessageAccount
      - WechatMiniProgram
      - Extension
      - Runable
      - Worker
      type: string
    AppUserScoreDto:
      example:
        score: 0
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        appId: appId
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        comment: comment
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        appId:
          type: string
        score:
          format: int32
          type: integer
        comment:
          type: string
      type: object
    AppWithUserDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        sortIndex: 0
        displayName: displayName
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        icon: icon
        businessUrl: businessUrl
        description: description
        deletionTime: 2000-01-23T04:56:07.000+00:00
        defaultSingleFileMaxSize: 1
        sdks:
        - privacyUrl: privacyUrl
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          privacy: privacy
          deletionTime: 2000-01-23T04:56:07.000+00:00
          homePage: homePage
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - privacyUrl: privacyUrl
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          privacy: privacy
          deletionTime: 2000-01-23T04:56:07.000+00:00
          homePage: homePage
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        homePage: homePage
        specJsonSchema: specJsonSchema
        features:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          details: details
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          screenshotKeys: screenshotKeys
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          details: details
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          screenshotKeys: screenshotKeys
        subscribed: true
        isDeleted: true
        appType: null
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        latestReleases:
        - artifactType: null
          notes: notes
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          downloadUrl: downloadUrl
          channel: channel
          deletionTime: 2000-01-23T04:56:07.000+00:00
          versionName: versionName
          platform: null
          isDeleted: true
          appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          key: key
          version: version
          versionCode: 5
          environment: environment
          size: 5
          isEnabled: true
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isForceUpdate: true
          md5: md5
        - artifactType: null
          notes: notes
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          downloadUrl: downloadUrl
          channel: channel
          deletionTime: 2000-01-23T04:56:07.000+00:00
          versionName: versionName
          platform: null
          isDeleted: true
          appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          key: key
          version: version
          versionCode: 5
          environment: environment
          size: 5
          isEnabled: true
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isForceUpdate: true
          md5: md5
        defaultStorageSize: 6
        creator:
          creationTime: 2000-01-23T04:56:07.000+00:00
          emailConfirmed: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
          lockoutEnabled: true
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraProperties:
            key: "{}"
          deletionTime: 2000-01-23T04:56:07.000+00:00
          userName: userName
          isActive: true
          phoneNumberConfirmed: true
          entityVersion: 6
          phoneNumber: phoneNumber
          isDeleted: true
          surname: surname
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessFailedCount: 0
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
          email: email
          lockoutEnd: 2000-01-23T04:56:07.000+00:00
        isPublished: true
        gitRepositoryType: null
        webhookUrl: webhookUrl
        gitRepository: gitRepository
        subscriptionPlatforms: subscriptionPlatforms
        freePlatforms: freePlatforms
        framework: null
        isEnabled: true
        name: name
        businessDomain: businessDomain
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        name:
          type: string
        displayName:
          type: string
        framework:
          $ref: '#/components/schemas/AppFramework'
        appType:
          $ref: '#/components/schemas/AppType'
        description:
          type: string
        icon:
          type: string
        homePage:
          description: 产品首页
          type: string
        sortIndex:
          description: 显示排序
          format: int32
          type: integer
        gitRepository:
          type: string
        gitRepositoryType:
          $ref: '#/components/schemas/GitRepositoryType'
        isEnabled:
          type: boolean
        isPublished:
          description: "是否已经发布, 决定了是否给终端用户看见, 主要有一些 APP 自己使用"
          type: boolean
        webhookUrl:
          description: Webhook Url 各种事件回调地址
          type: string
        businessDomain:
          description: 业务域名
          type: string
        businessUrl:
          description: 业务地址
          type: string
        subscriptionPlatforms:
          description: "可以订阅的平台 Platform 枚举, 并用\",\"分割"
          type: string
        freePlatforms:
          description: "暂时免费的平台, 付费功能免费用的平台, 用\",\"分割"
          type: string
        specJsonSchema:
          description: 声明格式
          type: string
        defaultStorageSize:
          description: 默认存储空间大小
          format: int64
          type: integer
        defaultSingleFileMaxSize:
          description: 默认单文件最大大小
          format: int64
          type: integer
        latestReleases:
          items:
            $ref: '#/components/schemas/AppReleaseDto'
          type: array
        creator:
          $ref: '#/components/schemas/IdentityUserDto'
        features:
          items:
            $ref: '#/components/schemas/AppFeatureDto'
          type: array
        sdks:
          items:
            $ref: '#/components/schemas/AppSdkDto'
          type: array
        subscribed:
          description: 是否已经订阅
          type: boolean
      type: object
    AppWithUserDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          sortIndex: 0
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          businessUrl: businessUrl
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          defaultSingleFileMaxSize: 1
          sdks:
          - privacyUrl: privacyUrl
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            privacy: privacy
            deletionTime: 2000-01-23T04:56:07.000+00:00
            homePage: homePage
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - privacyUrl: privacyUrl
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            privacy: privacy
            deletionTime: 2000-01-23T04:56:07.000+00:00
            homePage: homePage
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          homePage: homePage
          specJsonSchema: specJsonSchema
          features:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            deletionTime: 2000-01-23T04:56:07.000+00:00
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            details: details
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            screenshotKeys: screenshotKeys
          - creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            deletionTime: 2000-01-23T04:56:07.000+00:00
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            details: details
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            screenshotKeys: screenshotKeys
          subscribed: true
          isDeleted: true
          appType: null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latestReleases:
          - artifactType: null
            notes: notes
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            downloadUrl: downloadUrl
            channel: channel
            deletionTime: 2000-01-23T04:56:07.000+00:00
            versionName: versionName
            platform: null
            isDeleted: true
            appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            key: key
            version: version
            versionCode: 5
            environment: environment
            size: 5
            isEnabled: true
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isForceUpdate: true
            md5: md5
          - artifactType: null
            notes: notes
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            downloadUrl: downloadUrl
            channel: channel
            deletionTime: 2000-01-23T04:56:07.000+00:00
            versionName: versionName
            platform: null
            isDeleted: true
            appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            key: key
            version: version
            versionCode: 5
            environment: environment
            size: 5
            isEnabled: true
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isForceUpdate: true
            md5: md5
          defaultStorageSize: 6
          creator:
            creationTime: 2000-01-23T04:56:07.000+00:00
            emailConfirmed: true
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
            lockoutEnabled: true
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            extraProperties:
              key: "{}"
            deletionTime: 2000-01-23T04:56:07.000+00:00
            userName: userName
            isActive: true
            phoneNumberConfirmed: true
            entityVersion: 6
            phoneNumber: phoneNumber
            isDeleted: true
            surname: surname
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            accessFailedCount: 0
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            concurrencyStamp: concurrencyStamp
            email: email
            lockoutEnd: 2000-01-23T04:56:07.000+00:00
          isPublished: true
          gitRepositoryType: null
          webhookUrl: webhookUrl
          gitRepository: gitRepository
          subscriptionPlatforms: subscriptionPlatforms
          freePlatforms: freePlatforms
          framework: null
          isEnabled: true
          name: name
          businessDomain: businessDomain
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          sortIndex: 0
          displayName: displayName
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          businessUrl: businessUrl
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          defaultSingleFileMaxSize: 1
          sdks:
          - privacyUrl: privacyUrl
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            privacy: privacy
            deletionTime: 2000-01-23T04:56:07.000+00:00
            homePage: homePage
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - privacyUrl: privacyUrl
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            privacy: privacy
            deletionTime: 2000-01-23T04:56:07.000+00:00
            homePage: homePage
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          homePage: homePage
          specJsonSchema: specJsonSchema
          features:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            deletionTime: 2000-01-23T04:56:07.000+00:00
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            details: details
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            screenshotKeys: screenshotKeys
          - creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            description: description
            deletionTime: 2000-01-23T04:56:07.000+00:00
            isDeleted: true
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            details: details
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            screenshotKeys: screenshotKeys
          subscribed: true
          isDeleted: true
          appType: null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latestReleases:
          - artifactType: null
            notes: notes
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            downloadUrl: downloadUrl
            channel: channel
            deletionTime: 2000-01-23T04:56:07.000+00:00
            versionName: versionName
            platform: null
            isDeleted: true
            appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            key: key
            version: version
            versionCode: 5
            environment: environment
            size: 5
            isEnabled: true
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isForceUpdate: true
            md5: md5
          - artifactType: null
            notes: notes
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            downloadUrl: downloadUrl
            channel: channel
            deletionTime: 2000-01-23T04:56:07.000+00:00
            versionName: versionName
            platform: null
            isDeleted: true
            appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            key: key
            version: version
            versionCode: 5
            environment: environment
            size: 5
            isEnabled: true
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isForceUpdate: true
            md5: md5
          defaultStorageSize: 6
          creator:
            creationTime: 2000-01-23T04:56:07.000+00:00
            emailConfirmed: true
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
            lockoutEnabled: true
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            extraProperties:
              key: "{}"
            deletionTime: 2000-01-23T04:56:07.000+00:00
            userName: userName
            isActive: true
            phoneNumberConfirmed: true
            entityVersion: 6
            phoneNumber: phoneNumber
            isDeleted: true
            surname: surname
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            accessFailedCount: 0
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            concurrencyStamp: concurrencyStamp
            email: email
            lockoutEnd: 2000-01-23T04:56:07.000+00:00
          isPublished: true
          gitRepositoryType: null
          webhookUrl: webhookUrl
          gitRepository: gitRepository
          subscriptionPlatforms: subscriptionPlatforms
          freePlatforms: freePlatforms
          framework: null
          isEnabled: true
          name: name
          businessDomain: businessDomain
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppWithUserDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    AppleNotificaionDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        signedPayload: signedPayload
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        signedPayload:
          type: string
      type: object
    AppleVerifyReceiptResult:
      example:
        is_retryable: true
        latest_receipt_info:
        - transaction_id: transaction_id
          quantity: quantity
          original_transaction_id: original_transaction_id
          purchase_date_pst: purchase_date_pst
          original_purchase_date_ms: original_purchase_date_ms
          is_in_intro_offer_period: is_in_intro_offer_period
          expires_date: expires_date
          original_purchase_date_pst: original_purchase_date_pst
          is_trial_period: is_trial_period
          expires_date_pst: expires_date_pst
          original_purchase_date: original_purchase_date
          expires_date_ms: expires_date_ms
          purchase_date_ms: purchase_date_ms
          product_id: product_id
          purchase_date: purchase_date
          web_order_line_item_id: web_order_line_item_id
        - transaction_id: transaction_id
          quantity: quantity
          original_transaction_id: original_transaction_id
          purchase_date_pst: purchase_date_pst
          original_purchase_date_ms: original_purchase_date_ms
          is_in_intro_offer_period: is_in_intro_offer_period
          expires_date: expires_date
          original_purchase_date_pst: original_purchase_date_pst
          is_trial_period: is_trial_period
          expires_date_pst: expires_date_pst
          original_purchase_date: original_purchase_date
          expires_date_ms: expires_date_ms
          purchase_date_ms: purchase_date_ms
          product_id: product_id
          purchase_date: purchase_date
          web_order_line_item_id: web_order_line_item_id
        environment: environment
        latest_receipt: latest_receipt
        pending_renewal_info:
        - auto_renew_product_id: auto_renew_product_id
          grace_period_expires_date: grace_period_expires_date
          grace_period_expires_date_ms: grace_period_expires_date_ms
          original_transaction_id: original_transaction_id
          is_in_billing_retry_period: is_in_billing_retry_period
          product_id: product_id
          price_consent_status: price_consent_status
          grace_period_expires_date_pst: grace_period_expires_date_pst
          expiration_intent: expiration_intent
          auto_renew_status: auto_renew_status
        - auto_renew_product_id: auto_renew_product_id
          grace_period_expires_date: grace_period_expires_date
          grace_period_expires_date_ms: grace_period_expires_date_ms
          original_transaction_id: original_transaction_id
          is_in_billing_retry_period: is_in_billing_retry_period
          product_id: product_id
          price_consent_status: price_consent_status
          grace_period_expires_date_pst: grace_period_expires_date_pst
          expiration_intent: expiration_intent
          auto_renew_status: auto_renew_status
        receipt:
          in_app:
          - transaction_id: transaction_id
            quantity: quantity
            original_transaction_id: original_transaction_id
            purchase_date_pst: purchase_date_pst
            original_purchase_date_ms: original_purchase_date_ms
            is_in_intro_offer_period: is_in_intro_offer_period
            expires_date: expires_date
            original_purchase_date_pst: original_purchase_date_pst
            is_trial_period: is_trial_period
            expires_date_pst: expires_date_pst
            original_purchase_date: original_purchase_date
            expires_date_ms: expires_date_ms
            purchase_date_ms: purchase_date_ms
            product_id: product_id
            purchase_date: purchase_date
            web_order_line_item_id: web_order_line_item_id
          - transaction_id: transaction_id
            quantity: quantity
            original_transaction_id: original_transaction_id
            purchase_date_pst: purchase_date_pst
            original_purchase_date_ms: original_purchase_date_ms
            is_in_intro_offer_period: is_in_intro_offer_period
            expires_date: expires_date
            original_purchase_date_pst: original_purchase_date_pst
            is_trial_period: is_trial_period
            expires_date_pst: expires_date_pst
            original_purchase_date: original_purchase_date
            expires_date_ms: expires_date_ms
            purchase_date_ms: purchase_date_ms
            product_id: product_id
            purchase_date: purchase_date
            web_order_line_item_id: web_order_line_item_id
          adam_id: 5
          receipt_creation_date: receipt_creation_date
          original_application_version: original_application_version
          app_item_id: 5
          original_purchase_date_ms: original_purchase_date_ms
          request_date_ms: request_date_ms
          original_purchase_date_pst: original_purchase_date_pst
          original_purchase_date: original_purchase_date
          receipt_creation_date_pst: receipt_creation_date_pst
          receipt_type: receipt_type
          bundle_id: bundle_id
          receipt_creation_date_ms: receipt_creation_date_ms
          request_date: request_date
          version_external_identifier: 7
          request_date_pst: request_date_pst
          download_id: 2
          application_version: application_version
        status: 1
      properties:
        environment:
          type: string
        is_retryable:
          type: boolean
        status:
          description: 订阅订单状态
          format: int32
          type: integer
        latest_receipt_info:
          items:
            $ref: '#/components/schemas/LatestReceiptInfo'
          type: array
        latest_receipt:
          type: string
        pending_renewal_info:
          items:
            $ref: '#/components/schemas/PendingRenewalInfo'
          type: array
        receipt:
          $ref: '#/components/schemas/Receipt'
      type: object
    ApplicationApiDescriptionModel:
      example:
        types:
          key:
            genericArguments:
            - genericArguments
            - genericArguments
            enumNames:
            - enumNames
            - enumNames
            isEnum: true
            properties:
            - isRequired: true
              regex: regex
              jsonName: jsonName
              minLength: 0
              name: name
              typeSimple: typeSimple
              maximum: maximum
              type: type
              minimum: minimum
              maxLength: 6
            - isRequired: true
              regex: regex
              jsonName: jsonName
              minLength: 0
              name: name
              typeSimple: typeSimple
              maximum: maximum
              type: type
              minimum: minimum
              maxLength: 6
            baseType: baseType
            enumValues:
            - "{}"
            - "{}"
        modules:
          key:
            remoteServiceName: remoteServiceName
            controllers:
              key:
                isIntegrationService: true
                controllerGroupName: controllerGroupName
                interfaces:
                - methods:
                  - parametersOnMethod:
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    returnValue:
                      typeSimple: typeSimple
                      type: type
                    name: name
                  - parametersOnMethod:
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    returnValue:
                      typeSimple: typeSimple
                      type: type
                    name: name
                  name: name
                  type: type
                - methods:
                  - parametersOnMethod:
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    returnValue:
                      typeSimple: typeSimple
                      type: type
                    name: name
                  - parametersOnMethod:
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    returnValue:
                      typeSimple: typeSimple
                      type: type
                    name: name
                  name: name
                  type: type
                apiVersion: apiVersion
                controllerName: controllerName
                isRemoteService: true
                type: type
                actions:
                  key:
                    allowAnonymous: true
                    uniqueName: uniqueName
                    supportedVersions:
                    - supportedVersions
                    - supportedVersions
                    parametersOnMethod:
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    - typeAsString: typeAsString
                      defaultValue: "{}"
                      name: name
                      typeSimple: typeSimple
                      isOptional: true
                      type: type
                    returnValue:
                      typeSimple: typeSimple
                      type: type
                    implementFrom: implementFrom
                    name: name
                    httpMethod: httpMethod
                    parameters:
                    - jsonName: jsonName
                      defaultValue: "{}"
                      bindingSourceId: bindingSourceId
                      name: name
                      typeSimple: typeSimple
                      constraintTypes:
                      - constraintTypes
                      - constraintTypes
                      isOptional: true
                      type: type
                      nameOnMethod: nameOnMethod
                      descriptorName: descriptorName
                    - jsonName: jsonName
                      defaultValue: "{}"
                      bindingSourceId: bindingSourceId
                      name: name
                      typeSimple: typeSimple
                      constraintTypes:
                      - constraintTypes
                      - constraintTypes
                      isOptional: true
                      type: type
                      nameOnMethod: nameOnMethod
                      descriptorName: descriptorName
                    url: url
            rootPath: rootPath
      properties:
        modules:
          additionalProperties:
            $ref: '#/components/schemas/ModuleApiDescriptionModel'
          type: object
        types:
          additionalProperties:
            $ref: '#/components/schemas/TypeApiDescriptionModel'
          type: object
      type: object
    ApplicationAuthConfigurationDto:
      example:
        grantedPolicies:
          key: true
      properties:
        grantedPolicies:
          additionalProperties:
            type: boolean
          type: object
      type: object
    ApplicationConfigurationDto:
      example:
        localization:
          currentCulture:
            englishName: englishName
            threeLetterIsoLanguageName: threeLetterIsoLanguageName
            nativeName: nativeName
            twoLetterIsoLanguageName: twoLetterIsoLanguageName
            dateTimeFormat:
              longTimePattern: longTimePattern
              dateTimeFormatLong: dateTimeFormatLong
              dateSeparator: dateSeparator
              shortTimePattern: shortTimePattern
              fullDateTimePattern: fullDateTimePattern
              calendarAlgorithmType: calendarAlgorithmType
              shortDatePattern: shortDatePattern
            displayName: displayName
            cultureName: cultureName
            name: name
            isRightToLeft: true
          languages:
          - uiCultureName: uiCultureName
            displayName: displayName
            cultureName: cultureName
            flagIcon: flagIcon
            twoLetterISOLanguageName: twoLetterISOLanguageName
          - uiCultureName: uiCultureName
            displayName: displayName
            cultureName: cultureName
            flagIcon: flagIcon
            twoLetterISOLanguageName: twoLetterISOLanguageName
          values:
            key:
              key: values
          resources:
            key:
              texts:
                key: texts
              baseResources:
              - baseResources
              - baseResources
          languageFilesMap:
            key:
            - name: name
              value: value
            - name: name
              value: value
          defaultResourceName: defaultResourceName
          languagesMap:
            key:
            - name: name
              value: value
            - name: name
              value: value
        features:
          values:
            key: values
        currentUser:
          impersonatorTenantName: impersonatorTenantName
          surName: surName
          roles:
          - roles
          - roles
          isAuthenticated: true
          userName: userName
          impersonatorTenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          impersonatorUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          emailVerified: true
          phoneNumber: phoneNumber
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          phoneNumberVerified: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          impersonatorUserName: impersonatorUserName
          email: email
        objectExtensions:
          enums:
            key:
              localizationResource: localizationResource
              fields:
              - name: name
                value: "{}"
              - name: name
                value: "{}"
          modules:
            key:
              entities:
                key:
                  configuration:
                    key: "{}"
                  properties:
                    key:
                      ui:
                        lookup:
                          resultListPropertyName: resultListPropertyName
                          valuePropertyName: valuePropertyName
                          url: url
                          filterParamName: filterParamName
                          displayPropertyName: displayPropertyName
                        onTable:
                          isVisible: true
                        onCreateForm:
                          isVisible: true
                        onEditForm:
                          isVisible: true
                      configuration:
                        key: "{}"
                      displayName:
                        resource: resource
                        name: name
                      defaultValue: "{}"
                      typeSimple: typeSimple
                      attributes:
                      - typeSimple: typeSimple
                        config:
                          key: "{}"
                      - typeSimple: typeSimple
                        config:
                          key: "{}"
                      api:
                        onCreate:
                          isAvailable: true
                        onGet:
                          isAvailable: true
                        onUpdate:
                          isAvailable: true
                      type: type
              configuration:
                key: "{}"
        multiTenancy:
          isEnabled: true
        auth:
          grantedPolicies:
            key: true
        currentTenant:
          isAvailable: true
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timing:
          timeZone:
            iana:
              timeZoneName: timeZoneName
            windows:
              timeZoneId: timeZoneId
        extraProperties:
          key: "{}"
        clock:
          kind: kind
        setting:
          values:
            key: values
        globalFeatures:
          enabledFeatures:
          - enabledFeatures
          - enabledFeatures
      properties:
        localization:
          $ref: '#/components/schemas/ApplicationLocalizationConfigurationDto'
        auth:
          $ref: '#/components/schemas/ApplicationAuthConfigurationDto'
        setting:
          $ref: '#/components/schemas/ApplicationSettingConfigurationDto'
        currentUser:
          $ref: '#/components/schemas/CurrentUserDto'
        features:
          $ref: '#/components/schemas/ApplicationFeatureConfigurationDto'
        globalFeatures:
          $ref: '#/components/schemas/ApplicationGlobalFeatureConfigurationDto'
        multiTenancy:
          $ref: '#/components/schemas/MultiTenancyInfoDto'
        currentTenant:
          $ref: '#/components/schemas/CurrentTenantDto'
        timing:
          $ref: '#/components/schemas/TimingDto'
        clock:
          $ref: '#/components/schemas/ClockDto'
        objectExtensions:
          $ref: '#/components/schemas/ObjectExtensionsDto'
        extraProperties:
          additionalProperties:
            type: object
          type: object
      type: object
    ApplicationFeatureConfigurationDto:
      example:
        values:
          key: values
      properties:
        values:
          additionalProperties:
            type: string
          type: object
      type: object
    ApplicationGlobalFeatureConfigurationDto:
      example:
        enabledFeatures:
        - enabledFeatures
        - enabledFeatures
      properties:
        enabledFeatures:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ApplicationLocalizationConfigurationDto:
      example:
        currentCulture:
          englishName: englishName
          threeLetterIsoLanguageName: threeLetterIsoLanguageName
          nativeName: nativeName
          twoLetterIsoLanguageName: twoLetterIsoLanguageName
          dateTimeFormat:
            longTimePattern: longTimePattern
            dateTimeFormatLong: dateTimeFormatLong
            dateSeparator: dateSeparator
            shortTimePattern: shortTimePattern
            fullDateTimePattern: fullDateTimePattern
            calendarAlgorithmType: calendarAlgorithmType
            shortDatePattern: shortDatePattern
          displayName: displayName
          cultureName: cultureName
          name: name
          isRightToLeft: true
        languages:
        - uiCultureName: uiCultureName
          displayName: displayName
          cultureName: cultureName
          flagIcon: flagIcon
          twoLetterISOLanguageName: twoLetterISOLanguageName
        - uiCultureName: uiCultureName
          displayName: displayName
          cultureName: cultureName
          flagIcon: flagIcon
          twoLetterISOLanguageName: twoLetterISOLanguageName
        values:
          key:
            key: values
        resources:
          key:
            texts:
              key: texts
            baseResources:
            - baseResources
            - baseResources
        languageFilesMap:
          key:
          - name: name
            value: value
          - name: name
            value: value
        defaultResourceName: defaultResourceName
        languagesMap:
          key:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        values:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          type: object
        resources:
          additionalProperties:
            $ref: '#/components/schemas/ApplicationLocalizationResourceDto'
          type: object
        languages:
          items:
            $ref: '#/components/schemas/LanguageInfo'
          type: array
        currentCulture:
          $ref: '#/components/schemas/CurrentCultureDto'
        defaultResourceName:
          type: string
        languagesMap:
          additionalProperties:
            items:
              $ref: '#/components/schemas/NameValue'
            type: array
          type: object
        languageFilesMap:
          additionalProperties:
            items:
              $ref: '#/components/schemas/NameValue'
            type: array
          type: object
      type: object
    ApplicationLocalizationDto:
      example:
        resources:
          key:
            texts:
              key: texts
            baseResources:
            - baseResources
            - baseResources
      properties:
        resources:
          additionalProperties:
            $ref: '#/components/schemas/ApplicationLocalizationResourceDto'
          type: object
      type: object
    ApplicationLocalizationResourceDto:
      example:
        texts:
          key: texts
        baseResources:
        - baseResources
        - baseResources
      properties:
        texts:
          additionalProperties:
            type: string
          type: object
        baseResources:
          items:
            type: string
          type: array
      type: object
    ApplicationSettingConfigurationDto:
      example:
        values:
          key: values
      properties:
        values:
          additionalProperties:
            type: string
          type: object
      type: object
    ArtifactType:
      description: Represents the type of an artifact.
      enum:
      - Apk
      - Ipa
      - Exe
      - Msi
      - Dmg
      - Pkg
      - AppImage
      - Web
      - Service
      - AppStore
      - GooglePlay
      - MacAppStore
      - MicrosoftStore
      - Other
      type: string
    AvatarDto:
      example:
        key: key
      properties:
        key:
          type: string
      type: object
    BarkNotificationLevel:
      enum:
      - Active
      - TimeSensitive
      - Passive
      type: string
    BindDeviceDto:
      example:
        name: name
        tpnsToken: tpnsToken
        isPhysicalDevice: true
        brand: brand
        systemVersion: systemVersion
        platform: null
        token: token
      properties:
        token:
          type: string
        tpnsToken:
          type: string
        isPhysicalDevice:
          type: boolean
        name:
          type: string
        platform:
          $ref: '#/components/schemas/AppPlatform'
        brand:
          type: string
        systemVersion:
          type: string
      type: object
    ChangePasswordDto:
      example:
        password: password
        code: code
      properties:
        code:
          type: string
        password:
          type: string
      type: object
    ChangePasswordInput:
      example:
        newPassword: newPassword
        currentPassword: currentPassword
      properties:
        currentPassword:
          maxLength: 128
          minLength: 0
          type: string
        newPassword:
          maxLength: 128
          minLength: 0
          type: string
      required:
      - newPassword
      type: object
    CheckSyncAuthResultDto:
      example:
        isAuthed: true
      properties:
        isAuthed:
          type: boolean
      type: object
    ClockDto:
      example:
        kind: kind
      properties:
        kind:
          type: string
      type: object
    ControllerApiDescriptionModel:
      example:
        isIntegrationService: true
        controllerGroupName: controllerGroupName
        interfaces:
        - methods:
          - parametersOnMethod:
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            returnValue:
              typeSimple: typeSimple
              type: type
            name: name
          - parametersOnMethod:
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            returnValue:
              typeSimple: typeSimple
              type: type
            name: name
          name: name
          type: type
        - methods:
          - parametersOnMethod:
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            returnValue:
              typeSimple: typeSimple
              type: type
            name: name
          - parametersOnMethod:
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            returnValue:
              typeSimple: typeSimple
              type: type
            name: name
          name: name
          type: type
        apiVersion: apiVersion
        controllerName: controllerName
        isRemoteService: true
        type: type
        actions:
          key:
            allowAnonymous: true
            uniqueName: uniqueName
            supportedVersions:
            - supportedVersions
            - supportedVersions
            parametersOnMethod:
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            - typeAsString: typeAsString
              defaultValue: "{}"
              name: name
              typeSimple: typeSimple
              isOptional: true
              type: type
            returnValue:
              typeSimple: typeSimple
              type: type
            implementFrom: implementFrom
            name: name
            httpMethod: httpMethod
            parameters:
            - jsonName: jsonName
              defaultValue: "{}"
              bindingSourceId: bindingSourceId
              name: name
              typeSimple: typeSimple
              constraintTypes:
              - constraintTypes
              - constraintTypes
              isOptional: true
              type: type
              nameOnMethod: nameOnMethod
              descriptorName: descriptorName
            - jsonName: jsonName
              defaultValue: "{}"
              bindingSourceId: bindingSourceId
              name: name
              typeSimple: typeSimple
              constraintTypes:
              - constraintTypes
              - constraintTypes
              isOptional: true
              type: type
              nameOnMethod: nameOnMethod
              descriptorName: descriptorName
            url: url
      properties:
        controllerName:
          type: string
        controllerGroupName:
          type: string
        isRemoteService:
          type: boolean
        isIntegrationService:
          type: boolean
        apiVersion:
          type: string
        type:
          type: string
        interfaces:
          items:
            $ref: '#/components/schemas/ControllerInterfaceApiDescriptionModel'
          type: array
        actions:
          additionalProperties:
            $ref: '#/components/schemas/ActionApiDescriptionModel'
          type: object
      type: object
    ControllerInterfaceApiDescriptionModel:
      example:
        methods:
        - parametersOnMethod:
          - typeAsString: typeAsString
            defaultValue: "{}"
            name: name
            typeSimple: typeSimple
            isOptional: true
            type: type
          - typeAsString: typeAsString
            defaultValue: "{}"
            name: name
            typeSimple: typeSimple
            isOptional: true
            type: type
          returnValue:
            typeSimple: typeSimple
            type: type
          name: name
        - parametersOnMethod:
          - typeAsString: typeAsString
            defaultValue: "{}"
            name: name
            typeSimple: typeSimple
            isOptional: true
            type: type
          - typeAsString: typeAsString
            defaultValue: "{}"
            name: name
            typeSimple: typeSimple
            isOptional: true
            type: type
          returnValue:
            typeSimple: typeSimple
            type: type
          name: name
        name: name
        type: type
      properties:
        type:
          type: string
        name:
          type: string
        methods:
          items:
            $ref: '#/components/schemas/InterfaceMethodApiDescriptionModel'
          type: array
      type: object
    CreateAvatarDto:
      example:
        key: key
      properties:
        key:
          type: string
      type: object
    CreateMessageTemplateReleaseDto:
      example:
        templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        content: content
      properties:
        content:
          type: string
        templateId:
          format: uuid
          type: string
      type: object
    CreateOpenIddictApplicationDto:
      example:
        clientUri: clientUri
        requirements: requirements
        grantTypes:
        - grantTypes
        - grantTypes
        displayName: displayName
        permissions:
        - permissions
        - permissions
        postLogoutRedirectUris: postLogoutRedirectUris
        displayNames: displayNames
        logoUri: logoUri
        scopes:
        - scopes
        - scopes
        type: type
        redirectUris: redirectUris
        properties: properties
      properties:
        type:
          type: string
        displayName:
          type: string
        displayNames:
          type: string
        permissions:
          items:
            type: string
          type: array
        postLogoutRedirectUris:
          type: string
        properties:
          type: string
        redirectUris:
          type: string
        requirements:
          type: string
        clientUri:
          type: string
        logoUri:
          type: string
        grantTypes:
          items:
            type: string
          type: array
        scopes:
          items:
            type: string
          type: array
      type: object
    CreateOrGetSubscriptionOrderDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        productId: productId
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
        pricingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        appId:
          format: uuid
          type: string
        pricingId:
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionOrderType'
        productId:
          type: string
      type: object
    CreateOrUpdateAppDto:
      example:
        defaultStorageSize: 6
        sortIndex: 0
        displayName: displayName
        isPublished: true
        icon: icon
        businessUrl: businessUrl
        description: description
        defaultSingleFileMaxSize: 1
        homePage: homePage
        gitRepositoryType: null
        webhookUrl: webhookUrl
        specJsonSchema: specJsonSchema
        openClient:
          clientUri: clientUri
          requirements: requirements
          grantTypes:
          - grantTypes
          - grantTypes
          displayName: displayName
          permissions:
          - permissions
          - permissions
          postLogoutRedirectUris: postLogoutRedirectUris
          displayNames: displayNames
          logoUri: logoUri
          scopes:
          - scopes
          - scopes
          type: type
          redirectUris: redirectUris
          properties: properties
        gitRepository: gitRepository
        subscriptionPlatforms: subscriptionPlatforms
        freePlatforms: freePlatforms
        framework: null
        appType: null
        isEnabled: true
        name: name
        businessDomain: businessDomain
      properties:
        name:
          type: string
        displayName:
          type: string
        framework:
          $ref: '#/components/schemas/AppFramework'
        appType:
          $ref: '#/components/schemas/AppType'
        description:
          type: string
        icon:
          type: string
        homePage:
          description: 产品首页
          type: string
        sortIndex:
          description: 显示排序
          format: int32
          type: integer
        gitRepository:
          type: string
        gitRepositoryType:
          $ref: '#/components/schemas/GitRepositoryType'
        isEnabled:
          type: boolean
        webhookUrl:
          description: Webhook Url 各种事件回调地址
          type: string
        businessDomain:
          description: 业务域名
          type: string
        businessUrl:
          description: 业务地址
          type: string
        subscriptionPlatforms:
          description: "可以订阅的平台 Platform 枚举, 并用\",\"分割"
          type: string
        freePlatforms:
          description: "暂时免费的平台, 付费功能免费用的平台, 用\",\"分割"
          type: string
        specJsonSchema:
          description: 声明格式
          type: string
        defaultStorageSize:
          description: 默认存储空间大小
          format: int64
          type: integer
        defaultSingleFileMaxSize:
          description: 默认单文件最大大小
          format: int64
          type: integer
        isPublished:
          description: "是否已经发布, 决定了是否给终端用户看见, 主要有一些 APP 自己使用"
          type: boolean
        openClient:
          $ref: '#/components/schemas/CreateOpenIddictApplicationDto'
      type: object
    CreateOrUpdateAppFeatureDto:
      example:
        displayName: displayName
        name: name
        description: description
        details: details
        screenshotKeys: screenshotKeys
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        details:
          type: string
        screenshotKeys:
          type: string
      type: object
    CreateOrUpdateAppPricingDto:
      example:
        monthProductId: monthProductId
        sortIndex: 7
        description: description
        yearProductId: yearProductId
        monthDiscount: 6.027456183070403
        yearDiscountEndAt: 2000-01-23T04:56:07.000+00:00
        yearDiscountStartAt: 2000-01-23T04:56:07.000+00:00
        monthPrice: 0.8008281904610115
        yearDiscountPrice: 2.3021358869347655
        naming: null
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        monthDiscountEndAt: 2000-01-23T04:56:07.000+00:00
        monthDiscountStartAt: 2000-01-23T04:56:07.000+00:00
        yearPrice: 5.962133916683182
        items:
        - isAvailable: true
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          intValue: 9
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          hasValue: true
          intValueType: intValueType
          stringValue: stringValue
          isDeleted: true
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          boolValue: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - isAvailable: true
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          intValue: 9
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          hasValue: true
          intValueType: intValueType
          stringValue: stringValue
          isDeleted: true
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          boolValue: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        monthDiscountPrice: 1.4658129805029452
        yearDiscount: 5.637376656633329
      properties:
        naming:
          $ref: '#/components/schemas/AppPriceNaming'
        monthProductId:
          description: 商店订阅产品 ID
          type: string
        yearProductId:
          description: 商店订阅产品 ID
          type: string
        description:
          description: "简单描述\r\n适用于个人网站和任何想用基本的聊天方式与游客交流的人。\r\n适用于希望改善客户关系的早期创业公司。\
            \r\n为需要全功能解决方案与客户沟通的公司而设。"
          type: string
        appId:
          description: APPID
          format: uuid
          type: string
        monthPrice:
          description: 价格
          format: double
          type: number
        monthDiscount:
          description: 折扣
          format: double
          type: number
        monthDiscountPrice:
          description: 折扣后价格 DiscountPrice = Price * Discount
          format: double
          type: number
        monthDiscountStartAt:
          description: 折扣开始时间
          format: date-time
          type: string
        monthDiscountEndAt:
          description: 折扣结束时间
          format: date-time
          type: string
        yearPrice:
          description: 价格
          format: double
          type: number
        yearDiscount:
          description: 折扣
          format: double
          type: number
        yearDiscountPrice:
          description: 折扣后价格 DiscountPrice = Price * Discount
          format: double
          type: number
        yearDiscountStartAt:
          description: 折扣开始时间
          format: date-time
          type: string
        yearDiscountEndAt:
          description: 折扣结束时间
          format: date-time
          type: string
        sortIndex:
          description: 排序
          format: int32
          type: integer
        items:
          description: 收费点
          items:
            $ref: '#/components/schemas/AppPricingItemValueDto'
          type: array
      type: object
    CreateOrUpdateAppPricingItemDto:
      example:
        sortIndex: 0
        display: display
        name: name
        linkUrl: linkUrl
        description: description
      properties:
        name:
          description: "名称: 坐席"
          type: string
        description:
          description: "描述, 使用 Markdown 格式, 允许包含图片"
          type: string
        linkUrl:
          description: 链接地址
          type: string
        display:
          description: "显示模板: 包括{0}个坐席"
          type: string
        sortIndex:
          description: 排序
          format: int32
          type: integer
      type: object
    CreateOrUpdateAppReleaseDto:
      example:
        artifactType: null
        notes: notes
        channel: channel
        versionName: versionName
        version: version
        versionCode: 0
        platform: null
        environment: environment
        size: 6
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isEnabled: true
        rapidCode: rapidCode
        sliceMd5: sliceMd5
        key: key
        isForceUpdate: true
        md5: md5
      properties:
        version:
          type: string
        versionName:
          description: 版本名称
          type: string
        versionCode:
          description: 构建编号
          format: int64
          type: integer
        notes:
          type: string
        platform:
          $ref: '#/components/schemas/AppPlatform'
        key:
          type: string
        rapidCode:
          type: string
        size:
          format: int64
          type: integer
        md5:
          type: string
        sliceMd5:
          type: string
        artifactType:
          $ref: '#/components/schemas/ArtifactType'
        isForceUpdate:
          type: boolean
        appId:
          format: uuid
          type: string
        isEnabled:
          type: boolean
        channel:
          type: string
        environment:
          type: string
      type: object
    CreateOrUpdateAppSdkDto:
      example:
        privacyUrl: privacyUrl
        name: name
        description: description
        privacy: privacy
        homePage: homePage
      properties:
        name:
          type: string
        description:
          type: string
        privacy:
          type: string
        privacyUrl:
          type: string
        homePage:
          type: string
      type: object
    CreateOrUpdateAppUserScoreDto:
      example:
        score: 0
        appId: appId
        comment: comment
      properties:
        appId:
          type: string
        score:
          format: int32
          type: integer
        comment:
          type: string
      type: object
    CreateOrUpdateMessageTemplateDto:
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    CreatePushNotificationDto:
      example:
        app: app
        puupeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        title: title
      properties:
        title:
          type: string
        description:
          type: string
        puupeeId:
          format: uuid
          type: string
        creatorId:
          format: uuid
          type: string
        app:
          type: string
      type: object
    CreateUpdateMessageSourceDto:
      example:
        routes:
        - path: path
          routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          values: "{}"
        - path: path
          routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          values: "{}"
        isPublished: true
        name: name
        description: description
        iconUrl: iconUrl
      properties:
        name:
          type: string
        description:
          type: string
        isPublished:
          type: boolean
        iconUrl:
          type: string
        routes:
          items:
            $ref: '#/components/schemas/CreateUpdateMessageSourceRouteSubDto'
          type: array
      type: object
    CreateUpdateMessageSourceRouteDto:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        path: path
        radar: true
        anticrawler: true
        isPublished: true
        extra: extra
        description: description
        iconUrl: iconUrl
        title: title
        rssbud: true
      properties:
        title:
          type: string
        description:
          type: string
        path:
          type: string
        sourceId:
          format: uuid
          type: string
        extra:
          type: string
        anticrawler:
          type: boolean
        radar:
          type: boolean
        rssbud:
          type: boolean
        isPublished:
          type: boolean
        iconUrl:
          type: string
      type: object
    CreateUpdateMessageSourceRouteSubDto:
      example:
        path: path
        routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        values: "{}"
      properties:
        routeId:
          format: uuid
          type: string
        path:
          type: string
        values:
          type: object
      type: object
    CurrentCultureDto:
      example:
        englishName: englishName
        threeLetterIsoLanguageName: threeLetterIsoLanguageName
        nativeName: nativeName
        twoLetterIsoLanguageName: twoLetterIsoLanguageName
        dateTimeFormat:
          longTimePattern: longTimePattern
          dateTimeFormatLong: dateTimeFormatLong
          dateSeparator: dateSeparator
          shortTimePattern: shortTimePattern
          fullDateTimePattern: fullDateTimePattern
          calendarAlgorithmType: calendarAlgorithmType
          shortDatePattern: shortDatePattern
        displayName: displayName
        cultureName: cultureName
        name: name
        isRightToLeft: true
      properties:
        displayName:
          type: string
        englishName:
          type: string
        threeLetterIsoLanguageName:
          type: string
        twoLetterIsoLanguageName:
          type: string
        isRightToLeft:
          type: boolean
        cultureName:
          type: string
        name:
          type: string
        nativeName:
          type: string
        dateTimeFormat:
          $ref: '#/components/schemas/DateTimeFormatDto'
      type: object
    CurrentTenantDto:
      example:
        isAvailable: true
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        isAvailable:
          type: boolean
      type: object
    CurrentUserDto:
      example:
        impersonatorTenantName: impersonatorTenantName
        surName: surName
        roles:
        - roles
        - roles
        isAuthenticated: true
        userName: userName
        impersonatorTenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        impersonatorUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        emailVerified: true
        phoneNumber: phoneNumber
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        phoneNumberVerified: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        impersonatorUserName: impersonatorUserName
        email: email
      properties:
        isAuthenticated:
          type: boolean
        id:
          format: uuid
          type: string
        tenantId:
          format: uuid
          type: string
        impersonatorUserId:
          format: uuid
          type: string
        impersonatorTenantId:
          format: uuid
          type: string
        impersonatorUserName:
          type: string
        impersonatorTenantName:
          type: string
        userName:
          type: string
        name:
          type: string
        surName:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        phoneNumber:
          type: string
        phoneNumberVerified:
          type: boolean
        roles:
          items:
            type: string
          type: array
      type: object
    DateTimeFormatDto:
      example:
        longTimePattern: longTimePattern
        dateTimeFormatLong: dateTimeFormatLong
        dateSeparator: dateSeparator
        shortTimePattern: shortTimePattern
        fullDateTimePattern: fullDateTimePattern
        calendarAlgorithmType: calendarAlgorithmType
        shortDatePattern: shortDatePattern
      properties:
        calendarAlgorithmType:
          type: string
        dateTimeFormatLong:
          type: string
        shortDatePattern:
          type: string
        fullDateTimePattern:
          type: string
        dateSeparator:
          type: string
        shortTimePattern:
          type: string
        longTimePattern:
          type: string
      type: object
    DeviceDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        isPhysicalDevice: true
        systemVersion: systemVersion
        platform: null
        token: token
        isDeleted: true
        name: name
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tpnsToken: tpnsToken
        brand: brand
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        token:
          type: string
        tpnsToken:
          type: string
        isPhysicalDevice:
          type: boolean
        name:
          type: string
        platform:
          $ref: '#/components/schemas/AppPlatform'
        brand:
          type: string
        systemVersion:
          type: string
      type: object
    DeviceDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isPhysicalDevice: true
          systemVersion: systemVersion
          platform: null
          token: token
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tpnsToken: tpnsToken
          brand: brand
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isPhysicalDevice: true
          systemVersion: systemVersion
          platform: null
          token: token
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tpnsToken: tpnsToken
          brand: brand
      properties:
        items:
          items:
            $ref: '#/components/schemas/DeviceDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    DeviceStatus:
      enum:
      - None
      - Unknow
      - Online
      - Offline
      type: string
    EmailSettingsDto:
      example:
        smtpHost: smtpHost
        smtpUseDefaultCredentials: true
        smtpUserName: smtpUserName
        smtpDomain: smtpDomain
        defaultFromAddress: defaultFromAddress
        smtpPort: 0
        smtpPassword: smtpPassword
        defaultFromDisplayName: defaultFromDisplayName
        smtpEnableSsl: true
      properties:
        smtpHost:
          type: string
        smtpPort:
          format: int32
          type: integer
        smtpUserName:
          type: string
        smtpPassword:
          type: string
        smtpDomain:
          type: string
        smtpEnableSsl:
          type: boolean
        smtpUseDefaultCredentials:
          type: boolean
        defaultFromAddress:
          type: string
        defaultFromDisplayName:
          type: string
      type: object
    EntityExtensionDto:
      example:
        configuration:
          key: "{}"
        properties:
          key:
            ui:
              lookup:
                resultListPropertyName: resultListPropertyName
                valuePropertyName: valuePropertyName
                url: url
                filterParamName: filterParamName
                displayPropertyName: displayPropertyName
              onTable:
                isVisible: true
              onCreateForm:
                isVisible: true
              onEditForm:
                isVisible: true
            configuration:
              key: "{}"
            displayName:
              resource: resource
              name: name
            defaultValue: "{}"
            typeSimple: typeSimple
            attributes:
            - typeSimple: typeSimple
              config:
                key: "{}"
            - typeSimple: typeSimple
              config:
                key: "{}"
            api:
              onCreate:
                isAvailable: true
              onGet:
                isAvailable: true
              onUpdate:
                isAvailable: true
            type: type
      properties:
        properties:
          additionalProperties:
            $ref: '#/components/schemas/ExtensionPropertyDto'
          type: object
        configuration:
          additionalProperties:
            type: object
          type: object
      type: object
    ExtensionEnumDto:
      example:
        localizationResource: localizationResource
        fields:
        - name: name
          value: "{}"
        - name: name
          value: "{}"
      properties:
        fields:
          items:
            $ref: '#/components/schemas/ExtensionEnumFieldDto'
          type: array
        localizationResource:
          type: string
      type: object
    ExtensionEnumFieldDto:
      example:
        name: name
        value: "{}"
      properties:
        name:
          type: string
        value:
          type: object
      type: object
    ExtensionPropertyApiCreateDto:
      example:
        isAvailable: true
      properties:
        isAvailable:
          type: boolean
      type: object
    ExtensionPropertyApiDto:
      example:
        onCreate:
          isAvailable: true
        onGet:
          isAvailable: true
        onUpdate:
          isAvailable: true
      properties:
        onGet:
          $ref: '#/components/schemas/ExtensionPropertyApiGetDto'
        onCreate:
          $ref: '#/components/schemas/ExtensionPropertyApiCreateDto'
        onUpdate:
          $ref: '#/components/schemas/ExtensionPropertyApiUpdateDto'
      type: object
    ExtensionPropertyApiGetDto:
      example:
        isAvailable: true
      properties:
        isAvailable:
          type: boolean
      type: object
    ExtensionPropertyApiUpdateDto:
      example:
        isAvailable: true
      properties:
        isAvailable:
          type: boolean
      type: object
    ExtensionPropertyAttributeDto:
      example:
        typeSimple: typeSimple
        config:
          key: "{}"
      properties:
        typeSimple:
          type: string
        config:
          additionalProperties:
            type: object
          type: object
      type: object
    ExtensionPropertyDto:
      example:
        ui:
          lookup:
            resultListPropertyName: resultListPropertyName
            valuePropertyName: valuePropertyName
            url: url
            filterParamName: filterParamName
            displayPropertyName: displayPropertyName
          onTable:
            isVisible: true
          onCreateForm:
            isVisible: true
          onEditForm:
            isVisible: true
        configuration:
          key: "{}"
        displayName:
          resource: resource
          name: name
        defaultValue: "{}"
        typeSimple: typeSimple
        attributes:
        - typeSimple: typeSimple
          config:
            key: "{}"
        - typeSimple: typeSimple
          config:
            key: "{}"
        api:
          onCreate:
            isAvailable: true
          onGet:
            isAvailable: true
          onUpdate:
            isAvailable: true
        type: type
      properties:
        type:
          type: string
        typeSimple:
          type: string
        displayName:
          $ref: '#/components/schemas/LocalizableStringDto'
        api:
          $ref: '#/components/schemas/ExtensionPropertyApiDto'
        ui:
          $ref: '#/components/schemas/ExtensionPropertyUiDto'
        attributes:
          items:
            $ref: '#/components/schemas/ExtensionPropertyAttributeDto'
          type: array
        configuration:
          additionalProperties:
            type: object
          type: object
        defaultValue:
          type: object
      type: object
    ExtensionPropertyUiDto:
      example:
        lookup:
          resultListPropertyName: resultListPropertyName
          valuePropertyName: valuePropertyName
          url: url
          filterParamName: filterParamName
          displayPropertyName: displayPropertyName
        onTable:
          isVisible: true
        onCreateForm:
          isVisible: true
        onEditForm:
          isVisible: true
      properties:
        onTable:
          $ref: '#/components/schemas/ExtensionPropertyUiTableDto'
        onCreateForm:
          $ref: '#/components/schemas/ExtensionPropertyUiFormDto'
        onEditForm:
          $ref: '#/components/schemas/ExtensionPropertyUiFormDto'
        lookup:
          $ref: '#/components/schemas/ExtensionPropertyUiLookupDto'
      type: object
    ExtensionPropertyUiFormDto:
      example:
        isVisible: true
      properties:
        isVisible:
          type: boolean
      type: object
    ExtensionPropertyUiLookupDto:
      example:
        resultListPropertyName: resultListPropertyName
        valuePropertyName: valuePropertyName
        url: url
        filterParamName: filterParamName
        displayPropertyName: displayPropertyName
      properties:
        url:
          type: string
        resultListPropertyName:
          type: string
        displayPropertyName:
          type: string
        valuePropertyName:
          type: string
        filterParamName:
          type: string
      type: object
    ExtensionPropertyUiTableDto:
      example:
        isVisible: true
      properties:
        isVisible:
          type: boolean
      type: object
    FeatureDto:
      example:
        parentName: parentName
        depth: 0
        provider:
          name: name
          key: key
        displayName: displayName
        valueType:
          name: name
          validator:
            name: name
            properties:
              key: "{}"
          properties:
            key: "{}"
        name: name
        description: description
        value: value
      properties:
        name:
          type: string
        displayName:
          type: string
        value:
          type: string
        provider:
          $ref: '#/components/schemas/FeatureProviderDto'
        description:
          type: string
        valueType:
          $ref: '#/components/schemas/IStringValueType'
        depth:
          format: int32
          type: integer
        parentName:
          type: string
      type: object
    FeatureGroupDto:
      example:
        features:
        - parentName: parentName
          depth: 0
          provider:
            name: name
            key: key
          displayName: displayName
          valueType:
            name: name
            validator:
              name: name
              properties:
                key: "{}"
            properties:
              key: "{}"
          name: name
          description: description
          value: value
        - parentName: parentName
          depth: 0
          provider:
            name: name
            key: key
          displayName: displayName
          valueType:
            name: name
            validator:
              name: name
              properties:
                key: "{}"
            properties:
              key: "{}"
          name: name
          description: description
          value: value
        displayName: displayName
        name: name
      properties:
        name:
          type: string
        displayName:
          type: string
        features:
          items:
            $ref: '#/components/schemas/FeatureDto'
          type: array
      type: object
    FeatureProviderDto:
      example:
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
      type: object
    FindTenantResultDto:
      example:
        success: true
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        isActive: true
      properties:
        success:
          type: boolean
        tenantId:
          format: uuid
          type: string
        name:
          type: string
        isActive:
          type: boolean
      type: object
    GetFeatureListResultDto:
      example:
        groups:
        - features:
          - parentName: parentName
            depth: 0
            provider:
              name: name
              key: key
            displayName: displayName
            valueType:
              name: name
              validator:
                name: name
                properties:
                  key: "{}"
              properties:
                key: "{}"
            name: name
            description: description
            value: value
          - parentName: parentName
            depth: 0
            provider:
              name: name
              key: key
            displayName: displayName
            valueType:
              name: name
              validator:
                name: name
                properties:
                  key: "{}"
              properties:
                key: "{}"
            name: name
            description: description
            value: value
          displayName: displayName
          name: name
        - features:
          - parentName: parentName
            depth: 0
            provider:
              name: name
              key: key
            displayName: displayName
            valueType:
              name: name
              validator:
                name: name
                properties:
                  key: "{}"
              properties:
                key: "{}"
            name: name
            description: description
            value: value
          - parentName: parentName
            depth: 0
            provider:
              name: name
              key: key
            displayName: displayName
            valueType:
              name: name
              validator:
                name: name
                properties:
                  key: "{}"
              properties:
                key: "{}"
            name: name
            description: description
            value: value
          displayName: displayName
          name: name
      properties:
        groups:
          items:
            $ref: '#/components/schemas/FeatureGroupDto'
          type: array
      type: object
    GetPermissionListResultDto:
      example:
        groups:
        - displayNameResource: displayNameResource
          displayName: displayName
          permissions:
          - parentName: parentName
            grantedProviders:
            - providerName: providerName
              providerKey: providerKey
            - providerName: providerName
              providerKey: providerKey
            displayName: displayName
            isGranted: true
            name: name
            allowedProviders:
            - allowedProviders
            - allowedProviders
          - parentName: parentName
            grantedProviders:
            - providerName: providerName
              providerKey: providerKey
            - providerName: providerName
              providerKey: providerKey
            displayName: displayName
            isGranted: true
            name: name
            allowedProviders:
            - allowedProviders
            - allowedProviders
          name: name
          displayNameKey: displayNameKey
        - displayNameResource: displayNameResource
          displayName: displayName
          permissions:
          - parentName: parentName
            grantedProviders:
            - providerName: providerName
              providerKey: providerKey
            - providerName: providerName
              providerKey: providerKey
            displayName: displayName
            isGranted: true
            name: name
            allowedProviders:
            - allowedProviders
            - allowedProviders
          - parentName: parentName
            grantedProviders:
            - providerName: providerName
              providerKey: providerKey
            - providerName: providerName
              providerKey: providerKey
            displayName: displayName
            isGranted: true
            name: name
            allowedProviders:
            - allowedProviders
            - allowedProviders
          name: name
          displayNameKey: displayNameKey
        entityDisplayName: entityDisplayName
      properties:
        entityDisplayName:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/PermissionGroupDto'
          type: array
      type: object
    GitRepositoryType:
      enum:
      - GitHub
      - GitLab
      - BitBucket
      - Other
      type: string
    IStringValueType:
      example:
        name: name
        validator:
          name: name
          properties:
            key: "{}"
        properties:
          key: "{}"
      properties:
        name:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        validator:
          $ref: '#/components/schemas/IValueValidator'
      type: object
    IValueValidator:
      example:
        name: name
        properties:
          key: "{}"
      properties:
        name:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    IanaTimeZone:
      example:
        timeZoneName: timeZoneName
      properties:
        timeZoneName:
          type: string
      type: object
    IdentityRoleCreateDto:
      example:
        isDefault: true
        name: name
        isPublic: true
        extraProperties:
          key: "{}"
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        name:
          maxLength: 256
          minLength: 0
          type: string
        isDefault:
          type: boolean
        isPublic:
          type: boolean
      required:
      - name
      type: object
    IdentityRoleDto:
      example:
        isDefault: true
        isStatic: true
        name: name
        isPublic: true
        extraProperties:
          key: "{}"
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        concurrencyStamp: concurrencyStamp
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          format: uuid
          type: string
        name:
          type: string
        isDefault:
          type: boolean
        isStatic:
          type: boolean
        isPublic:
          type: boolean
        concurrencyStamp:
          type: string
      type: object
    IdentityRoleDtoListResultDto:
      example:
        items:
        - isDefault: true
          isStatic: true
          name: name
          isPublic: true
          extraProperties:
            key: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
        - isDefault: true
          isStatic: true
          name: name
          isPublic: true
          extraProperties:
            key: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
      properties:
        items:
          items:
            $ref: '#/components/schemas/IdentityRoleDto'
          type: array
      type: object
    IdentityRoleDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - isDefault: true
          isStatic: true
          name: name
          isPublic: true
          extraProperties:
            key: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
        - isDefault: true
          isStatic: true
          name: name
          isPublic: true
          extraProperties:
            key: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
      properties:
        items:
          items:
            $ref: '#/components/schemas/IdentityRoleDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    IdentityRoleUpdateDto:
      example:
        isDefault: true
        name: name
        isPublic: true
        extraProperties:
          key: "{}"
        concurrencyStamp: concurrencyStamp
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        name:
          maxLength: 256
          minLength: 0
          type: string
        isDefault:
          type: boolean
        isPublic:
          type: boolean
        concurrencyStamp:
          type: string
      required:
      - name
      type: object
    IdentityUser:
      example:
        shouldChangePasswordOnNextLogin: true
        creationTime: 2000-01-23T04:56:07.000+00:00
        emailConfirmed: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        normalizedUserName: normalizedUserName
        roles:
        - roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        normalizedEmail: normalizedEmail
        deletionTime: 2000-01-23T04:56:07.000+00:00
        isActive: true
        passwordHash: passwordHash
        phoneNumberConfirmed: true
        entityVersion: 6
        twoFactorEnabled: true
        organizationUnits:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - creationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isDeleted: true
        surname: surname
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tokens:
        - tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          loginProvider: loginProvider
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        - tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          loginProvider: loginProvider
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        accessFailedCount: 0
        email: email
        lockoutEnd: 2000-01-23T04:56:07.000+00:00
        isExternal: true
        lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
        lockoutEnabled: true
        extraProperties:
          key: "{}"
        userName: userName
        phoneNumber: phoneNumber
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        claims:
        - claimType: claimType
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          claimValue: claimValue
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - claimType: claimType
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          claimValue: claimValue
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        concurrencyStamp: concurrencyStamp
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        logins:
        - providerDisplayName: providerDisplayName
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          loginProvider: loginProvider
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          providerKey: providerKey
        - providerDisplayName: providerDisplayName
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          loginProvider: loginProvider
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          providerKey: providerKey
        securityStamp: securityStamp
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        concurrencyStamp:
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        tenantId:
          format: uuid
          type: string
        userName:
          type: string
        normalizedUserName:
          readOnly: true
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        normalizedEmail:
          readOnly: true
          type: string
        emailConfirmed:
          readOnly: true
          type: boolean
        passwordHash:
          readOnly: true
          type: string
        securityStamp:
          readOnly: true
          type: string
        isExternal:
          type: boolean
        phoneNumber:
          readOnly: true
          type: string
        phoneNumberConfirmed:
          readOnly: true
          type: boolean
        isActive:
          readOnly: true
          type: boolean
        twoFactorEnabled:
          readOnly: true
          type: boolean
        lockoutEnd:
          format: date-time
          readOnly: true
          type: string
        lockoutEnabled:
          readOnly: true
          type: boolean
        accessFailedCount:
          format: int32
          readOnly: true
          type: integer
        shouldChangePasswordOnNextLogin:
          readOnly: true
          type: boolean
        entityVersion:
          format: int32
          readOnly: true
          type: integer
        lastPasswordChangeTime:
          format: date-time
          readOnly: true
          type: string
        roles:
          items:
            $ref: '#/components/schemas/IdentityUserRole'
          readOnly: true
          type: array
        claims:
          items:
            $ref: '#/components/schemas/IdentityUserClaim'
          readOnly: true
          type: array
        logins:
          items:
            $ref: '#/components/schemas/IdentityUserLogin'
          readOnly: true
          type: array
        tokens:
          items:
            $ref: '#/components/schemas/IdentityUserToken'
          readOnly: true
          type: array
        organizationUnits:
          items:
            $ref: '#/components/schemas/IdentityUserOrganizationUnit'
          readOnly: true
          type: array
      type: object
    IdentityUserClaim:
      example:
        claimType: claimType
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        claimValue: claimValue
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        tenantId:
          format: uuid
          readOnly: true
          type: string
        claimType:
          readOnly: true
          type: string
        claimValue:
          readOnly: true
          type: string
        userId:
          format: uuid
          type: string
      type: object
    IdentityUserCreateDto:
      example:
        password: password
        phoneNumber: phoneNumber
        surname: surname
        lockoutEnabled: true
        name: name
        extraProperties:
          key: "{}"
        userName: userName
        isActive: true
        roleNames:
        - roleNames
        - roleNames
        email: email
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        userName:
          maxLength: 256
          minLength: 0
          type: string
        name:
          maxLength: 64
          minLength: 0
          type: string
        surname:
          maxLength: 64
          minLength: 0
          type: string
        email:
          format: email
          maxLength: 256
          minLength: 0
          type: string
        phoneNumber:
          maxLength: 16
          minLength: 0
          type: string
        isActive:
          type: boolean
        lockoutEnabled:
          type: boolean
        roleNames:
          items:
            type: string
          type: array
        password:
          maxLength: 128
          minLength: 0
          type: string
      required:
      - email
      - password
      - userName
      type: object
    IdentityUserDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        emailConfirmed: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
        lockoutEnabled: true
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        extraProperties:
          key: "{}"
        deletionTime: 2000-01-23T04:56:07.000+00:00
        userName: userName
        isActive: true
        phoneNumberConfirmed: true
        entityVersion: 6
        phoneNumber: phoneNumber
        isDeleted: true
        surname: surname
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        accessFailedCount: 0
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        concurrencyStamp: concurrencyStamp
        email: email
        lockoutEnd: 2000-01-23T04:56:07.000+00:00
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        tenantId:
          format: uuid
          type: string
        userName:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        emailConfirmed:
          type: boolean
        phoneNumber:
          type: string
        phoneNumberConfirmed:
          type: boolean
        isActive:
          type: boolean
        lockoutEnabled:
          type: boolean
        accessFailedCount:
          format: int32
          type: integer
        lockoutEnd:
          format: date-time
          type: string
        concurrencyStamp:
          type: string
        entityVersion:
          format: int32
          type: integer
        lastPasswordChangeTime:
          format: date-time
          type: string
      type: object
    IdentityUserDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          emailConfirmed: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
          lockoutEnabled: true
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraProperties:
            key: "{}"
          deletionTime: 2000-01-23T04:56:07.000+00:00
          userName: userName
          isActive: true
          phoneNumberConfirmed: true
          entityVersion: 6
          phoneNumber: phoneNumber
          isDeleted: true
          surname: surname
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessFailedCount: 0
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
          email: email
          lockoutEnd: 2000-01-23T04:56:07.000+00:00
        - creationTime: 2000-01-23T04:56:07.000+00:00
          emailConfirmed: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
          lockoutEnabled: true
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraProperties:
            key: "{}"
          deletionTime: 2000-01-23T04:56:07.000+00:00
          userName: userName
          isActive: true
          phoneNumberConfirmed: true
          entityVersion: 6
          phoneNumber: phoneNumber
          isDeleted: true
          surname: surname
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessFailedCount: 0
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
          email: email
          lockoutEnd: 2000-01-23T04:56:07.000+00:00
      properties:
        items:
          items:
            $ref: '#/components/schemas/IdentityUserDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    IdentityUserLogin:
      example:
        providerDisplayName: providerDisplayName
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        loginProvider: loginProvider
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        providerKey: providerKey
      properties:
        tenantId:
          format: uuid
          readOnly: true
          type: string
        userId:
          format: uuid
          readOnly: true
          type: string
        loginProvider:
          readOnly: true
          type: string
        providerKey:
          readOnly: true
          type: string
        providerDisplayName:
          readOnly: true
          type: string
      type: object
    IdentityUserOrganizationUnit:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        creationTime:
          format: date-time
          readOnly: true
          type: string
        creatorId:
          format: uuid
          readOnly: true
          type: string
        tenantId:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        organizationUnitId:
          format: uuid
          type: string
      type: object
    IdentityUserRole:
      example:
        roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        tenantId:
          format: uuid
          readOnly: true
          type: string
        userId:
          format: uuid
          readOnly: true
          type: string
        roleId:
          format: uuid
          readOnly: true
          type: string
      type: object
    IdentityUserToken:
      example:
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        loginProvider: loginProvider
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        value: value
      properties:
        tenantId:
          format: uuid
          readOnly: true
          type: string
        userId:
          format: uuid
          readOnly: true
          type: string
        loginProvider:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        value:
          type: string
      type: object
    IdentityUserUpdateDto:
      example:
        password: password
        phoneNumber: phoneNumber
        surname: surname
        lockoutEnabled: true
        name: name
        extraProperties:
          key: "{}"
        userName: userName
        isActive: true
        concurrencyStamp: concurrencyStamp
        roleNames:
        - roleNames
        - roleNames
        email: email
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        userName:
          maxLength: 256
          minLength: 0
          type: string
        name:
          maxLength: 64
          minLength: 0
          type: string
        surname:
          maxLength: 64
          minLength: 0
          type: string
        email:
          format: email
          maxLength: 256
          minLength: 0
          type: string
        phoneNumber:
          maxLength: 16
          minLength: 0
          type: string
        isActive:
          type: boolean
        lockoutEnabled:
          type: boolean
        roleNames:
          items:
            type: string
          type: array
        password:
          maxLength: 128
          minLength: 0
          type: string
        concurrencyStamp:
          type: string
      required:
      - email
      - userName
      type: object
    IdentityUserUpdateRolesDto:
      example:
        roleNames:
        - roleNames
        - roleNames
      properties:
        roleNames:
          items:
            type: string
          type: array
      required:
      - roleNames
      type: object
    InApp:
      example:
        transaction_id: transaction_id
        quantity: quantity
        original_transaction_id: original_transaction_id
        purchase_date_pst: purchase_date_pst
        original_purchase_date_ms: original_purchase_date_ms
        is_in_intro_offer_period: is_in_intro_offer_period
        expires_date: expires_date
        original_purchase_date_pst: original_purchase_date_pst
        is_trial_period: is_trial_period
        expires_date_pst: expires_date_pst
        original_purchase_date: original_purchase_date
        expires_date_ms: expires_date_ms
        purchase_date_ms: purchase_date_ms
        product_id: product_id
        purchase_date: purchase_date
        web_order_line_item_id: web_order_line_item_id
      properties:
        quantity:
          type: string
        product_id:
          type: string
        transaction_id:
          type: string
        original_transaction_id:
          type: string
        purchase_date:
          type: string
        purchase_date_ms:
          type: string
        purchase_date_pst:
          type: string
        original_purchase_date:
          type: string
        original_purchase_date_ms:
          type: string
        original_purchase_date_pst:
          type: string
        expires_date:
          type: string
        expires_date_ms:
          type: string
        expires_date_pst:
          type: string
        web_order_line_item_id:
          type: string
        is_trial_period:
          type: string
        is_in_intro_offer_period:
          type: string
      type: object
    InterfaceMethodApiDescriptionModel:
      example:
        parametersOnMethod:
        - typeAsString: typeAsString
          defaultValue: "{}"
          name: name
          typeSimple: typeSimple
          isOptional: true
          type: type
        - typeAsString: typeAsString
          defaultValue: "{}"
          name: name
          typeSimple: typeSimple
          isOptional: true
          type: type
        returnValue:
          typeSimple: typeSimple
          type: type
        name: name
      properties:
        name:
          type: string
        parametersOnMethod:
          items:
            $ref: '#/components/schemas/MethodParameterApiDescriptionModel'
          type: array
        returnValue:
          $ref: '#/components/schemas/ReturnValueApiDescriptionModel'
      type: object
    LanguageInfo:
      example:
        uiCultureName: uiCultureName
        displayName: displayName
        cultureName: cultureName
        flagIcon: flagIcon
        twoLetterISOLanguageName: twoLetterISOLanguageName
      properties:
        cultureName:
          type: string
        uiCultureName:
          type: string
        displayName:
          type: string
        twoLetterISOLanguageName:
          readOnly: true
          type: string
        flagIcon:
          type: string
      type: object
    LatestReceiptInfo:
      example:
        transaction_id: transaction_id
        quantity: quantity
        original_transaction_id: original_transaction_id
        purchase_date_pst: purchase_date_pst
        original_purchase_date_ms: original_purchase_date_ms
        is_in_intro_offer_period: is_in_intro_offer_period
        expires_date: expires_date
        original_purchase_date_pst: original_purchase_date_pst
        is_trial_period: is_trial_period
        expires_date_pst: expires_date_pst
        original_purchase_date: original_purchase_date
        expires_date_ms: expires_date_ms
        purchase_date_ms: purchase_date_ms
        product_id: product_id
        purchase_date: purchase_date
        web_order_line_item_id: web_order_line_item_id
      properties:
        quantity:
          type: string
        product_id:
          type: string
        transaction_id:
          type: string
        original_transaction_id:
          type: string
        purchase_date:
          type: string
        purchase_date_ms:
          type: string
        purchase_date_pst:
          type: string
        original_purchase_date:
          type: string
        original_purchase_date_ms:
          type: string
        original_purchase_date_pst:
          type: string
        expires_date:
          type: string
        expires_date_ms:
          type: string
        expires_date_pst:
          type: string
        web_order_line_item_id:
          type: string
        is_trial_period:
          type: string
        is_in_intro_offer_period:
          type: string
      type: object
    LocalizableStringDto:
      example:
        resource: resource
        name: name
      properties:
        name:
          type: string
        resource:
          type: string
      type: object
    LoginResultType:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      format: int32
      type: integer
    MessagePublishDto:
      example:
        template: template
        data:
          key: "{}"
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        title: title
      properties:
        title:
          type: string
        description:
          type: string
        appId:
          format: uuid
          type: string
        template:
          description: "模板名称, 包含版本号\r\npuupee/wechat-app-msg?version=1 微信应用消息模板\r\n\
            puupee/wechat-official-msg?version=2 微信公众号消息模板"
          type: string
        data:
          additionalProperties:
            type: object
          description: JSON格式数据
          type: object
      type: object
    MessageRecallDto:
      example:
        puupeeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        puupeeId:
          format: uuid
          type: string
      type: object
    MessageSourceCategoryDto:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
      properties:
        id:
          format: uuid
          type: string
        title:
          type: string
      type: object
    MessageSourceDto:
      example:
        routes:
        - path: path
          routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          values: "{}"
        - path: path
          routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          values: "{}"
        isPublished: true
        name: name
        description: description
        iconUrl: iconUrl
      properties:
        name:
          type: string
        description:
          type: string
        isPublished:
          type: boolean
        iconUrl:
          type: string
        routes:
          items:
            $ref: '#/components/schemas/MessageSourceRouteSubDto'
          type: array
      type: object
    MessageSourceRouteDto:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        path: path
        radar: true
        anticrawler: true
        isPublished: true
        extra: extra
        description: description
        iconUrl: iconUrl
        title: title
        rssbud: true
      properties:
        title:
          type: string
        description:
          type: string
        path:
          type: string
        sourceId:
          format: uuid
          type: string
        extra:
          type: string
        anticrawler:
          type: boolean
        radar:
          type: boolean
        rssbud:
          type: boolean
        isPublished:
          type: boolean
        iconUrl:
          type: string
      type: object
    MessageSourceRouteSubDto:
      example:
        path: path
        routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        values: "{}"
      properties:
        routeId:
          format: uuid
          type: string
        path:
          type: string
        values:
          type: object
      type: object
    MessageSubscribeDto:
      example:
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        appId:
          format: uuid
          type: string
      type: object
    MessageTemplateDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        latestVersion: 0
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        name:
          type: string
        description:
          type: string
        latestVersion:
          format: int32
          type: integer
      type: object
    MessageTemplateReleaseDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        templateName: templateName
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        templateId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: 0
        content: content
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        templateName:
          type: string
        version:
          format: int32
          type: integer
        content:
          type: string
        templateId:
          format: uuid
          type: string
      type: object
    MessageUnsubscribeDto:
      example:
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        appId:
          format: uuid
          type: string
      type: object
    MethodParameterApiDescriptionModel:
      example:
        typeAsString: typeAsString
        defaultValue: "{}"
        name: name
        typeSimple: typeSimple
        isOptional: true
        type: type
      properties:
        name:
          type: string
        typeAsString:
          type: string
        type:
          type: string
        typeSimple:
          type: string
        isOptional:
          type: boolean
        defaultValue:
          type: object
      type: object
    ModuleApiDescriptionModel:
      example:
        remoteServiceName: remoteServiceName
        controllers:
          key:
            isIntegrationService: true
            controllerGroupName: controllerGroupName
            interfaces:
            - methods:
              - parametersOnMethod:
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                returnValue:
                  typeSimple: typeSimple
                  type: type
                name: name
              - parametersOnMethod:
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                returnValue:
                  typeSimple: typeSimple
                  type: type
                name: name
              name: name
              type: type
            - methods:
              - parametersOnMethod:
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                returnValue:
                  typeSimple: typeSimple
                  type: type
                name: name
              - parametersOnMethod:
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                returnValue:
                  typeSimple: typeSimple
                  type: type
                name: name
              name: name
              type: type
            apiVersion: apiVersion
            controllerName: controllerName
            isRemoteService: true
            type: type
            actions:
              key:
                allowAnonymous: true
                uniqueName: uniqueName
                supportedVersions:
                - supportedVersions
                - supportedVersions
                parametersOnMethod:
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                - typeAsString: typeAsString
                  defaultValue: "{}"
                  name: name
                  typeSimple: typeSimple
                  isOptional: true
                  type: type
                returnValue:
                  typeSimple: typeSimple
                  type: type
                implementFrom: implementFrom
                name: name
                httpMethod: httpMethod
                parameters:
                - jsonName: jsonName
                  defaultValue: "{}"
                  bindingSourceId: bindingSourceId
                  name: name
                  typeSimple: typeSimple
                  constraintTypes:
                  - constraintTypes
                  - constraintTypes
                  isOptional: true
                  type: type
                  nameOnMethod: nameOnMethod
                  descriptorName: descriptorName
                - jsonName: jsonName
                  defaultValue: "{}"
                  bindingSourceId: bindingSourceId
                  name: name
                  typeSimple: typeSimple
                  constraintTypes:
                  - constraintTypes
                  - constraintTypes
                  isOptional: true
                  type: type
                  nameOnMethod: nameOnMethod
                  descriptorName: descriptorName
                url: url
        rootPath: rootPath
      properties:
        rootPath:
          type: string
        remoteServiceName:
          type: string
        controllers:
          additionalProperties:
            $ref: '#/components/schemas/ControllerApiDescriptionModel'
          type: object
      type: object
    ModuleExtensionDto:
      example:
        entities:
          key:
            configuration:
              key: "{}"
            properties:
              key:
                ui:
                  lookup:
                    resultListPropertyName: resultListPropertyName
                    valuePropertyName: valuePropertyName
                    url: url
                    filterParamName: filterParamName
                    displayPropertyName: displayPropertyName
                  onTable:
                    isVisible: true
                  onCreateForm:
                    isVisible: true
                  onEditForm:
                    isVisible: true
                configuration:
                  key: "{}"
                displayName:
                  resource: resource
                  name: name
                defaultValue: "{}"
                typeSimple: typeSimple
                attributes:
                - typeSimple: typeSimple
                  config:
                    key: "{}"
                - typeSimple: typeSimple
                  config:
                    key: "{}"
                api:
                  onCreate:
                    isAvailable: true
                  onGet:
                    isAvailable: true
                  onUpdate:
                    isAvailable: true
                type: type
        configuration:
          key: "{}"
      properties:
        entities:
          additionalProperties:
            $ref: '#/components/schemas/EntityExtensionDto'
          type: object
        configuration:
          additionalProperties:
            type: object
          type: object
      type: object
    MultiTenancyInfoDto:
      example:
        isEnabled: true
      properties:
        isEnabled:
          type: boolean
      type: object
    NameValue:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    NotificationInfoDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
      type: object
    NotificationInfoDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - creationTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/NotificationInfoDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    ObjectExtensionsDto:
      example:
        enums:
          key:
            localizationResource: localizationResource
            fields:
            - name: name
              value: "{}"
            - name: name
              value: "{}"
        modules:
          key:
            entities:
              key:
                configuration:
                  key: "{}"
                properties:
                  key:
                    ui:
                      lookup:
                        resultListPropertyName: resultListPropertyName
                        valuePropertyName: valuePropertyName
                        url: url
                        filterParamName: filterParamName
                        displayPropertyName: displayPropertyName
                      onTable:
                        isVisible: true
                      onCreateForm:
                        isVisible: true
                      onEditForm:
                        isVisible: true
                    configuration:
                      key: "{}"
                    displayName:
                      resource: resource
                      name: name
                    defaultValue: "{}"
                    typeSimple: typeSimple
                    attributes:
                    - typeSimple: typeSimple
                      config:
                        key: "{}"
                    - typeSimple: typeSimple
                      config:
                        key: "{}"
                    api:
                      onCreate:
                        isAvailable: true
                      onGet:
                        isAvailable: true
                      onUpdate:
                        isAvailable: true
                    type: type
            configuration:
              key: "{}"
      properties:
        modules:
          additionalProperties:
            $ref: '#/components/schemas/ModuleExtensionDto'
          type: object
        enums:
          additionalProperties:
            $ref: '#/components/schemas/ExtensionEnumDto'
          type: object
      type: object
    ParameterApiDescriptionModel:
      example:
        jsonName: jsonName
        defaultValue: "{}"
        bindingSourceId: bindingSourceId
        name: name
        typeSimple: typeSimple
        constraintTypes:
        - constraintTypes
        - constraintTypes
        isOptional: true
        type: type
        nameOnMethod: nameOnMethod
        descriptorName: descriptorName
      properties:
        nameOnMethod:
          type: string
        name:
          type: string
        jsonName:
          type: string
        type:
          type: string
        typeSimple:
          type: string
        isOptional:
          type: boolean
        defaultValue:
          type: object
        constraintTypes:
          items:
            type: string
          type: array
        bindingSourceId:
          type: string
        descriptorName:
          type: string
      type: object
    PendingRenewalInfo:
      example:
        auto_renew_product_id: auto_renew_product_id
        grace_period_expires_date: grace_period_expires_date
        grace_period_expires_date_ms: grace_period_expires_date_ms
        original_transaction_id: original_transaction_id
        is_in_billing_retry_period: is_in_billing_retry_period
        product_id: product_id
        price_consent_status: price_consent_status
        grace_period_expires_date_pst: grace_period_expires_date_pst
        expiration_intent: expiration_intent
        auto_renew_status: auto_renew_status
      properties:
        auto_renew_product_id:
          type: string
        auto_renew_status:
          type: string
        is_in_billing_retry_period:
          type: string
        original_transaction_id:
          type: string
        product_id:
          type: string
        expiration_intent:
          type: string
        price_consent_status:
          type: string
        grace_period_expires_date:
          type: string
        grace_period_expires_date_ms:
          type: string
        grace_period_expires_date_pst:
          type: string
      type: object
    PermissionGrantInfoDto:
      example:
        parentName: parentName
        grantedProviders:
        - providerName: providerName
          providerKey: providerKey
        - providerName: providerName
          providerKey: providerKey
        displayName: displayName
        isGranted: true
        name: name
        allowedProviders:
        - allowedProviders
        - allowedProviders
      properties:
        name:
          type: string
        displayName:
          type: string
        parentName:
          type: string
        isGranted:
          type: boolean
        allowedProviders:
          items:
            type: string
          type: array
        grantedProviders:
          items:
            $ref: '#/components/schemas/ProviderInfoDto'
          type: array
      type: object
    PermissionGroupDto:
      example:
        displayNameResource: displayNameResource
        displayName: displayName
        permissions:
        - parentName: parentName
          grantedProviders:
          - providerName: providerName
            providerKey: providerKey
          - providerName: providerName
            providerKey: providerKey
          displayName: displayName
          isGranted: true
          name: name
          allowedProviders:
          - allowedProviders
          - allowedProviders
        - parentName: parentName
          grantedProviders:
          - providerName: providerName
            providerKey: providerKey
          - providerName: providerName
            providerKey: providerKey
          displayName: displayName
          isGranted: true
          name: name
          allowedProviders:
          - allowedProviders
          - allowedProviders
        name: name
        displayNameKey: displayNameKey
      properties:
        name:
          type: string
        displayName:
          type: string
        displayNameKey:
          type: string
        displayNameResource:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/PermissionGrantInfoDto'
          type: array
      type: object
    ProfileDto:
      example:
        phoneNumber: phoneNumber
        isExternal: true
        surname: surname
        name: name
        extraProperties:
          key: "{}"
        hasPassword: true
        userName: userName
        concurrencyStamp: concurrencyStamp
        email: email
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        userName:
          type: string
        email:
          type: string
        name:
          type: string
        surname:
          type: string
        phoneNumber:
          type: string
        isExternal:
          type: boolean
        hasPassword:
          type: boolean
        concurrencyStamp:
          type: string
      type: object
    PropertyApiDescriptionModel:
      example:
        isRequired: true
        regex: regex
        jsonName: jsonName
        minLength: 0
        name: name
        typeSimple: typeSimple
        maximum: maximum
        type: type
        minimum: minimum
        maxLength: 6
      properties:
        name:
          type: string
        jsonName:
          type: string
        type:
          type: string
        typeSimple:
          type: string
        isRequired:
          type: boolean
        minLength:
          format: int32
          type: integer
        maxLength:
          format: int32
          type: integer
        minimum:
          type: string
        maximum:
          type: string
        regex:
          type: string
      type: object
    ProviderInfoDto:
      example:
        providerName: providerName
        providerKey: providerKey
      properties:
        providerName:
          type: string
        providerKey:
          type: string
      type: object
    Receipt:
      example:
        in_app:
        - transaction_id: transaction_id
          quantity: quantity
          original_transaction_id: original_transaction_id
          purchase_date_pst: purchase_date_pst
          original_purchase_date_ms: original_purchase_date_ms
          is_in_intro_offer_period: is_in_intro_offer_period
          expires_date: expires_date
          original_purchase_date_pst: original_purchase_date_pst
          is_trial_period: is_trial_period
          expires_date_pst: expires_date_pst
          original_purchase_date: original_purchase_date
          expires_date_ms: expires_date_ms
          purchase_date_ms: purchase_date_ms
          product_id: product_id
          purchase_date: purchase_date
          web_order_line_item_id: web_order_line_item_id
        - transaction_id: transaction_id
          quantity: quantity
          original_transaction_id: original_transaction_id
          purchase_date_pst: purchase_date_pst
          original_purchase_date_ms: original_purchase_date_ms
          is_in_intro_offer_period: is_in_intro_offer_period
          expires_date: expires_date
          original_purchase_date_pst: original_purchase_date_pst
          is_trial_period: is_trial_period
          expires_date_pst: expires_date_pst
          original_purchase_date: original_purchase_date
          expires_date_ms: expires_date_ms
          purchase_date_ms: purchase_date_ms
          product_id: product_id
          purchase_date: purchase_date
          web_order_line_item_id: web_order_line_item_id
        adam_id: 5
        receipt_creation_date: receipt_creation_date
        original_application_version: original_application_version
        app_item_id: 5
        original_purchase_date_ms: original_purchase_date_ms
        request_date_ms: request_date_ms
        original_purchase_date_pst: original_purchase_date_pst
        original_purchase_date: original_purchase_date
        receipt_creation_date_pst: receipt_creation_date_pst
        receipt_type: receipt_type
        bundle_id: bundle_id
        receipt_creation_date_ms: receipt_creation_date_ms
        request_date: request_date
        version_external_identifier: 7
        request_date_pst: request_date_pst
        download_id: 2
        application_version: application_version
      properties:
        receipt_type:
          type: string
        adam_id:
          format: int64
          type: integer
        app_item_id:
          format: int64
          type: integer
        bundle_id:
          type: string
        application_version:
          type: string
        download_id:
          format: int64
          type: integer
        version_external_identifier:
          format: int32
          type: integer
        receipt_creation_date:
          type: string
        receipt_creation_date_ms:
          type: string
        receipt_creation_date_pst:
          type: string
        request_date:
          type: string
        request_date_ms:
          type: string
        request_date_pst:
          type: string
        original_purchase_date:
          type: string
        original_purchase_date_ms:
          type: string
        original_purchase_date_pst:
          type: string
        original_application_version:
          type: string
        in_app:
          items:
            $ref: '#/components/schemas/InApp'
          type: array
      type: object
    RefreshDeviceStatusDto:
      example:
        token: token
        status: null
      properties:
        token:
          type: string
        status:
          $ref: '#/components/schemas/DeviceStatus'
      type: object
    RegisterDto:
      example:
        emailAddress: emailAddress
        password: password
        appName: appName
        extraProperties:
          key: "{}"
        userName: userName
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        userName:
          maxLength: 256
          minLength: 0
          type: string
        emailAddress:
          format: email
          maxLength: 256
          minLength: 0
          type: string
        password:
          format: password
          maxLength: 128
          minLength: 0
          type: string
        appName:
          minLength: 1
          type: string
      required:
      - appName
      - emailAddress
      - password
      - userName
      type: object
    RemoteServiceErrorInfo:
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: string
        data:
          additionalProperties:
            type: object
          type: object
        validationErrors:
          items:
            $ref: '#/components/schemas/RemoteServiceValidationErrorInfo'
          type: array
      type: object
    RemoteServiceErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/RemoteServiceErrorInfo'
      type: object
    RemoteServiceValidationErrorInfo:
      properties:
        message:
          type: string
        members:
          items:
            type: string
          type: array
      type: object
    ResetPasswordDto:
      example:
        password: password
        resetToken: resetToken
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        userId:
          format: uuid
          type: string
        resetToken:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      required:
      - password
      - resetToken
      type: object
    ReturnValueApiDescriptionModel:
      example:
        typeSimple: typeSimple
        type: type
      properties:
        type:
          type: string
        typeSimple:
          type: string
      type: object
    SendPasswordResetCodeDto:
      example:
        returnUrlHash: returnUrlHash
        appName: appName
        returnUrl: returnUrl
        email: email
      properties:
        email:
          format: email
          maxLength: 256
          minLength: 0
          type: string
        appName:
          minLength: 1
          type: string
        returnUrl:
          type: string
        returnUrlHash:
          type: string
      required:
      - appName
      - email
      type: object
    SendTestEmailInput:
      example:
        targetEmailAddress: targetEmailAddress
        senderEmailAddress: senderEmailAddress
        subject: subject
        body: body
      properties:
        senderEmailAddress:
          minLength: 1
          type: string
        targetEmailAddress:
          minLength: 1
          type: string
        subject:
          minLength: 1
          type: string
        body:
          type: string
      required:
      - senderEmailAddress
      - subject
      - targetEmailAddress
      type: object
    SendVerificationCodeDto:
      example:
        codeSender: codeSender
        purpose: purpose
        account: account
      properties:
        codeSender:
          description: "验证码发送器 暂时支持: SMS: 手机短信验证码"
          type: string
        account:
          description: "验证码接受者, 用户账户"
          type: string
        purpose:
          description: 验证码用途
          type: string
      type: object
    StorageObjectCredentials:
      example:
        securityToken: securityToken
        accessKeyId: accessKeyId
        endPoint: endPoint
        bucketName: bucketName
        storageClass: storageClass
        accessKeySecret: accessKeySecret
        regionId: regionId
        appId: appId
        expiration: expiration
        protocal: protocal
        expiredTime: 0
      properties:
        storageClass:
          type: string
        endPoint:
          type: string
        protocal:
          type: string
        bucketName:
          type: string
        regionId:
          type: string
        securityToken:
          type: string
        accessKeyId:
          type: string
        accessKeySecret:
          type: string
        expiration:
          type: string
        expiredTime:
          format: int64
          type: integer
        appId:
          type: string
      type: object
    StorageObjectDto:
      example:
        storageObjectCreatedAt: 2000-01-23T04:56:07.000+00:00
        syncVersion: 0
        extension: extension
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        url: url
        storageClass: storageClass
        password: password
        isDeleted: true
        size: 6
        name: name
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rapidCode: rapidCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sliceMd5: sliceMd5
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        contentType: contentType
        storageObjectUpdatedAt: 2000-01-23T04:56:07.000+00:00
        key: key
        md5: md5
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        name:
          type: string
        url:
          type: string
        syncVersion:
          format: int64
          type: integer
        key:
          type: string
        size:
          format: int64
          type: integer
        md5:
          type: string
        sliceMd5:
          type: string
        rapidCode:
          type: string
        contentType:
          type: string
        extension:
          type: string
        storageClass:
          type: string
        storageObjectCreatedAt:
          format: date-time
          type: string
        storageObjectUpdatedAt:
          format: date-time
          type: string
        password:
          type: string
      type: object
    StorageObjectOrCredentialsDto:
      example:
        storageObject:
          storageObjectCreatedAt: 2000-01-23T04:56:07.000+00:00
          syncVersion: 0
          extension: extension
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          url: url
          storageClass: storageClass
          password: password
          isDeleted: true
          size: 6
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          contentType: contentType
          storageObjectUpdatedAt: 2000-01-23T04:56:07.000+00:00
          key: key
          md5: md5
        credentials:
          securityToken: securityToken
          accessKeyId: accessKeyId
          endPoint: endPoint
          bucketName: bucketName
          storageClass: storageClass
          accessKeySecret: accessKeySecret
          regionId: regionId
          appId: appId
          expiration: expiration
          protocal: protocal
          expiredTime: 0
      properties:
        storageObject:
          $ref: '#/components/schemas/StorageObjectDto'
        credentials:
          $ref: '#/components/schemas/StorageObjectCredentials'
      type: object
    SubscriptionDto:
      example:
        priceNaming: null
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expireAt: 2000-01-23T04:56:07.000+00:00
        pricingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        expireAt:
          description: 会员过期时间
          format: date-time
          type: string
        appId:
          description: 应用 ID
          format: uuid
          type: string
        priceNaming:
          $ref: '#/components/schemas/AppPriceNaming'
        pricingId:
          format: uuid
          type: string
      type: object
    SubscriptionOrderDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        productId: productId
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        type: null
        pricingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isDeleted: true
        appId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: null
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionOrderType'
        status:
          $ref: '#/components/schemas/SubscriptionOrderStatus'
        appId:
          format: uuid
          type: string
        pricingId:
          format: uuid
          type: string
        productId:
          type: string
      type: object
    SubscriptionOrderStatus:
      description: 订阅订单状态
      enum:
      - Waiting
      - Overtime
      - Finished
      type: string
    SubscriptionOrderType:
      description: 订阅订单类型
      enum:
      - AppleAuto
      - AlipayOnce
      - AlipayAuto
      - WechatOnce
      - WechatAuto
      type: string
    TenantCreateDto:
      example:
        name: name
        adminEmailAddress: adminEmailAddress
        extraProperties:
          key: "{}"
        adminPassword: adminPassword
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        name:
          maxLength: 64
          minLength: 0
          type: string
        adminEmailAddress:
          format: email
          maxLength: 256
          minLength: 1
          type: string
        adminPassword:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - adminEmailAddress
      - adminPassword
      - name
      type: object
    TenantDto:
      example:
        name: name
        extraProperties:
          key: "{}"
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        concurrencyStamp: concurrencyStamp
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        id:
          format: uuid
          type: string
        name:
          type: string
        concurrencyStamp:
          type: string
      type: object
    TenantDtoPagedResultDto:
      example:
        totalCount: 0
        items:
        - name: name
          extraProperties:
            key: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
        - name: name
          extraProperties:
            key: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
      properties:
        items:
          items:
            $ref: '#/components/schemas/TenantDto'
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    TenantUpdateDto:
      example:
        name: name
        extraProperties:
          key: "{}"
        concurrencyStamp: concurrencyStamp
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        name:
          maxLength: 64
          minLength: 0
          type: string
        concurrencyStamp:
          type: string
      required:
      - name
      type: object
    TimeZone:
      example:
        iana:
          timeZoneName: timeZoneName
        windows:
          timeZoneId: timeZoneId
      properties:
        iana:
          $ref: '#/components/schemas/IanaTimeZone'
        windows:
          $ref: '#/components/schemas/WindowsTimeZone'
      type: object
    TimingDto:
      example:
        timeZone:
          iana:
            timeZoneName: timeZoneName
          windows:
            timeZoneId: timeZoneId
      properties:
        timeZone:
          $ref: '#/components/schemas/TimeZone'
      type: object
    TypeApiDescriptionModel:
      example:
        genericArguments:
        - genericArguments
        - genericArguments
        enumNames:
        - enumNames
        - enumNames
        isEnum: true
        properties:
        - isRequired: true
          regex: regex
          jsonName: jsonName
          minLength: 0
          name: name
          typeSimple: typeSimple
          maximum: maximum
          type: type
          minimum: minimum
          maxLength: 6
        - isRequired: true
          regex: regex
          jsonName: jsonName
          minLength: 0
          name: name
          typeSimple: typeSimple
          maximum: maximum
          type: type
          minimum: minimum
          maxLength: 6
        baseType: baseType
        enumValues:
        - "{}"
        - "{}"
      properties:
        baseType:
          type: string
        isEnum:
          type: boolean
        enumNames:
          items:
            type: string
          type: array
        enumValues:
          items:
            type: object
          type: array
        genericArguments:
          items:
            type: string
          type: array
        properties:
          items:
            $ref: '#/components/schemas/PropertyApiDescriptionModel'
          type: array
      type: object
    UpdateEmailSettingsDto:
      example:
        smtpHost: smtpHost
        smtpUseDefaultCredentials: true
        smtpUserName: smtpUserName
        smtpDomain: smtpDomain
        defaultFromAddress: defaultFromAddress
        smtpPort: 5249
        smtpPassword: smtpPassword
        defaultFromDisplayName: defaultFromDisplayName
        smtpEnableSsl: true
      properties:
        smtpHost:
          maxLength: 256
          type: string
        smtpPort:
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        smtpUserName:
          maxLength: 1024
          type: string
        smtpPassword:
          format: password
          maxLength: 1024
          type: string
        smtpDomain:
          maxLength: 1024
          type: string
        smtpEnableSsl:
          type: boolean
        smtpUseDefaultCredentials:
          type: boolean
        defaultFromAddress:
          maxLength: 1024
          minLength: 1
          type: string
        defaultFromDisplayName:
          maxLength: 1024
          minLength: 1
          type: string
      required:
      - defaultFromAddress
      - defaultFromDisplayName
      type: object
    UpdateFeatureDto:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    UpdateFeaturesDto:
      example:
        features:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        features:
          items:
            $ref: '#/components/schemas/UpdateFeatureDto'
          type: array
      type: object
    UpdatePermissionDto:
      example:
        isGranted: true
        name: name
      properties:
        name:
          type: string
        isGranted:
          type: boolean
      type: object
    UpdatePermissionsDto:
      example:
        permissions:
        - isGranted: true
          name: name
        - isGranted: true
          name: name
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/UpdatePermissionDto'
          type: array
      type: object
    UpdateProfileDto:
      example:
        phoneNumber: phoneNumber
        surname: surname
        name: name
        extraProperties:
          key: "{}"
        userName: userName
        concurrencyStamp: concurrencyStamp
        email: email
      properties:
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        userName:
          maxLength: 256
          minLength: 0
          type: string
        email:
          maxLength: 256
          minLength: 0
          type: string
        name:
          maxLength: 64
          minLength: 0
          type: string
        surname:
          maxLength: 64
          minLength: 0
          type: string
        phoneNumber:
          maxLength: 16
          minLength: 0
          type: string
        concurrencyStamp:
          type: string
      type: object
    UserData:
      example:
        phoneNumber: phoneNumber
        emailConfirmed: true
        surname: surname
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        extraProperties:
          key: "{}"
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userName: userName
        isActive: true
        email: email
        phoneNumberConfirmed: true
      properties:
        id:
          format: uuid
          type: string
        tenantId:
          format: uuid
          type: string
        userName:
          type: string
        name:
          type: string
        surname:
          type: string
        isActive:
          type: boolean
        email:
          type: string
        emailConfirmed:
          type: boolean
        phoneNumber:
          type: string
        phoneNumberConfirmed:
          type: boolean
        extraProperties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    UserDataListResultDto:
      example:
        items:
        - phoneNumber: phoneNumber
          emailConfirmed: true
          surname: surname
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          extraProperties:
            key: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userName: userName
          isActive: true
          email: email
          phoneNumberConfirmed: true
        - phoneNumber: phoneNumber
          emailConfirmed: true
          surname: surname
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          extraProperties:
            key: "{}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userName: userName
          isActive: true
          email: email
          phoneNumberConfirmed: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserData'
          type: array
      type: object
    UserLoginInfo:
      example:
        password: password
        userNameOrEmailAddress: userNameOrEmailAddress
        rememberMe: true
      properties:
        userNameOrEmailAddress:
          maxLength: 255
          minLength: 0
          type: string
        password:
          format: password
          maxLength: 32
          minLength: 0
          type: string
        rememberMe:
          type: boolean
      required:
      - password
      - userNameOrEmailAddress
      type: object
    UserProfileDto:
      example:
        phoneNumber: phoneNumber
        avatarUrl: avatarUrl
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hasPassword: true
        userName: userName
        email: email
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        userName:
          type: string
        avatarUrl:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        hasPassword:
          type: boolean
      type: object
    VerifyPasswordResetTokenInput:
      example:
        resetToken: resetToken
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        userId:
          format: uuid
          type: string
        resetToken:
          minLength: 1
          type: string
      required:
      - resetToken
      type: object
    VerifyReceiptDto:
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        orderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        receiptData: receiptData
        platform: null
        deviceToken: deviceToken
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        orderId:
          format: uuid
          type: string
        receiptData:
          minLength: 1
          type: string
        platform:
          $ref: '#/components/schemas/AppPlatform'
        deviceToken:
          minLength: 1
          type: string
      required:
      - deviceToken
      - orderId
      - platform
      - receiptData
      type: object
    VerifyReceiptResult:
      description: 校验结果
      example:
        creator:
          shouldChangePasswordOnNextLogin: true
          creationTime: 2000-01-23T04:56:07.000+00:00
          emailConfirmed: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          normalizedUserName: normalizedUserName
          roles:
          - roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          normalizedEmail: normalizedEmail
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isActive: true
          passwordHash: passwordHash
          phoneNumberConfirmed: true
          entityVersion: 6
          twoFactorEnabled: true
          organizationUnits:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - creationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isDeleted: true
          surname: surname
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tokens:
          - tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            value: value
          - tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            value: value
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessFailedCount: 0
          email: email
          lockoutEnd: 2000-01-23T04:56:07.000+00:00
          isExternal: true
          lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
          lockoutEnabled: true
          extraProperties:
            key: "{}"
          userName: userName
          phoneNumber: phoneNumber
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          claims:
          - claimType: claimType
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            claimValue: claimValue
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - claimType: claimType
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            claimValue: claimValue
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          logins:
          - providerDisplayName: providerDisplayName
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            providerKey: providerKey
          - providerDisplayName: providerDisplayName
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            providerKey: providerKey
          securityStamp: securityStamp
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        orderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resultData: resultData
        appleVerifyReceiptResult:
          is_retryable: true
          latest_receipt_info:
          - transaction_id: transaction_id
            quantity: quantity
            original_transaction_id: original_transaction_id
            purchase_date_pst: purchase_date_pst
            original_purchase_date_ms: original_purchase_date_ms
            is_in_intro_offer_period: is_in_intro_offer_period
            expires_date: expires_date
            original_purchase_date_pst: original_purchase_date_pst
            is_trial_period: is_trial_period
            expires_date_pst: expires_date_pst
            original_purchase_date: original_purchase_date
            expires_date_ms: expires_date_ms
            purchase_date_ms: purchase_date_ms
            product_id: product_id
            purchase_date: purchase_date
            web_order_line_item_id: web_order_line_item_id
          - transaction_id: transaction_id
            quantity: quantity
            original_transaction_id: original_transaction_id
            purchase_date_pst: purchase_date_pst
            original_purchase_date_ms: original_purchase_date_ms
            is_in_intro_offer_period: is_in_intro_offer_period
            expires_date: expires_date
            original_purchase_date_pst: original_purchase_date_pst
            is_trial_period: is_trial_period
            expires_date_pst: expires_date_pst
            original_purchase_date: original_purchase_date
            expires_date_ms: expires_date_ms
            purchase_date_ms: purchase_date_ms
            product_id: product_id
            purchase_date: purchase_date
            web_order_line_item_id: web_order_line_item_id
          environment: environment
          latest_receipt: latest_receipt
          pending_renewal_info:
          - auto_renew_product_id: auto_renew_product_id
            grace_period_expires_date: grace_period_expires_date
            grace_period_expires_date_ms: grace_period_expires_date_ms
            original_transaction_id: original_transaction_id
            is_in_billing_retry_period: is_in_billing_retry_period
            product_id: product_id
            price_consent_status: price_consent_status
            grace_period_expires_date_pst: grace_period_expires_date_pst
            expiration_intent: expiration_intent
            auto_renew_status: auto_renew_status
          - auto_renew_product_id: auto_renew_product_id
            grace_period_expires_date: grace_period_expires_date
            grace_period_expires_date_ms: grace_period_expires_date_ms
            original_transaction_id: original_transaction_id
            is_in_billing_retry_period: is_in_billing_retry_period
            product_id: product_id
            price_consent_status: price_consent_status
            grace_period_expires_date_pst: grace_period_expires_date_pst
            expiration_intent: expiration_intent
            auto_renew_status: auto_renew_status
          receipt:
            in_app:
            - transaction_id: transaction_id
              quantity: quantity
              original_transaction_id: original_transaction_id
              purchase_date_pst: purchase_date_pst
              original_purchase_date_ms: original_purchase_date_ms
              is_in_intro_offer_period: is_in_intro_offer_period
              expires_date: expires_date
              original_purchase_date_pst: original_purchase_date_pst
              is_trial_period: is_trial_period
              expires_date_pst: expires_date_pst
              original_purchase_date: original_purchase_date
              expires_date_ms: expires_date_ms
              purchase_date_ms: purchase_date_ms
              product_id: product_id
              purchase_date: purchase_date
              web_order_line_item_id: web_order_line_item_id
            - transaction_id: transaction_id
              quantity: quantity
              original_transaction_id: original_transaction_id
              purchase_date_pst: purchase_date_pst
              original_purchase_date_ms: original_purchase_date_ms
              is_in_intro_offer_period: is_in_intro_offer_period
              expires_date: expires_date
              original_purchase_date_pst: original_purchase_date_pst
              is_trial_period: is_trial_period
              expires_date_pst: expires_date_pst
              original_purchase_date: original_purchase_date
              expires_date_ms: expires_date_ms
              purchase_date_ms: purchase_date_ms
              product_id: product_id
              purchase_date: purchase_date
              web_order_line_item_id: web_order_line_item_id
            adam_id: 5
            receipt_creation_date: receipt_creation_date
            original_application_version: original_application_version
            app_item_id: 5
            original_purchase_date_ms: original_purchase_date_ms
            request_date_ms: request_date_ms
            original_purchase_date_pst: original_purchase_date_pst
            original_purchase_date: original_purchase_date
            receipt_creation_date_pst: receipt_creation_date_pst
            receipt_type: receipt_type
            bundle_id: bundle_id
            receipt_creation_date_ms: receipt_creation_date_ms
            request_date: request_date
            version_external_identifier: 7
            request_date_pst: request_date_pst
            download_id: 2
            application_version: application_version
          status: 1
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifier:
          shouldChangePasswordOnNextLogin: true
          creationTime: 2000-01-23T04:56:07.000+00:00
          emailConfirmed: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          normalizedUserName: normalizedUserName
          roles:
          - roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          normalizedEmail: normalizedEmail
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isActive: true
          passwordHash: passwordHash
          phoneNumberConfirmed: true
          entityVersion: 6
          twoFactorEnabled: true
          organizationUnits:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - creationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isDeleted: true
          surname: surname
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tokens:
          - tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            value: value
          - tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            value: value
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessFailedCount: 0
          email: email
          lockoutEnd: 2000-01-23T04:56:07.000+00:00
          isExternal: true
          lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
          lockoutEnabled: true
          extraProperties:
            key: "{}"
          userName: userName
          phoneNumber: phoneNumber
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          claims:
          - claimType: claimType
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            claimValue: claimValue
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - claimType: claimType
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            claimValue: claimValue
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          logins:
          - providerDisplayName: providerDisplayName
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            providerKey: providerKey
          - providerDisplayName: providerDisplayName
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            providerKey: providerKey
          securityStamp: securityStamp
        deletionTime: 2000-01-23T04:56:07.000+00:00
        receiptData: receiptData
        message: message
        deleter:
          shouldChangePasswordOnNextLogin: true
          creationTime: 2000-01-23T04:56:07.000+00:00
          emailConfirmed: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          normalizedUserName: normalizedUserName
          roles:
          - roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - roleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          normalizedEmail: normalizedEmail
          deletionTime: 2000-01-23T04:56:07.000+00:00
          isActive: true
          passwordHash: passwordHash
          phoneNumberConfirmed: true
          entityVersion: 6
          twoFactorEnabled: true
          organizationUnits:
          - creationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - creationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organizationUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isDeleted: true
          surname: surname
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tokens:
          - tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            value: value
          - tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            value: value
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          accessFailedCount: 0
          email: email
          lockoutEnd: 2000-01-23T04:56:07.000+00:00
          isExternal: true
          lastPasswordChangeTime: 2000-01-23T04:56:07.000+00:00
          lockoutEnabled: true
          extraProperties:
            key: "{}"
          userName: userName
          phoneNumber: phoneNumber
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          claims:
          - claimType: claimType
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            claimValue: claimValue
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - claimType: claimType
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            claimValue: claimValue
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          concurrencyStamp: concurrencyStamp
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          logins:
          - providerDisplayName: providerDisplayName
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            providerKey: providerKey
          - providerDisplayName: providerDisplayName
            tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            loginProvider: loginProvider
            userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            providerKey: providerKey
          securityStamp: securityStamp
        platform: null
        deviceToken: deviceToken
        recordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isDeleted: true
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ok: true
        statusCode: statusCode
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        creationTime:
          format: date-time
          readOnly: true
          type: string
        creatorId:
          format: uuid
          readOnly: true
          type: string
        lastModificationTime:
          format: date-time
          type: string
        lastModifierId:
          format: uuid
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          type: string
        deletionTime:
          format: date-time
          type: string
        deleter:
          $ref: '#/components/schemas/IdentityUser'
        creator:
          $ref: '#/components/schemas/IdentityUser'
        lastModifier:
          $ref: '#/components/schemas/IdentityUser'
        orderId:
          format: uuid
          type: string
        receiptData:
          type: string
        platform:
          $ref: '#/components/schemas/AppPlatform'
        deviceToken:
          type: string
        ok:
          type: boolean
        statusCode:
          type: string
        message:
          type: string
        resultData:
          type: string
        recordId:
          format: uuid
          type: string
        appleVerifyReceiptResult:
          $ref: '#/components/schemas/AppleVerifyReceiptResult'
      type: object
    WindowsTimeZone:
      example:
        timeZoneId: timeZoneId
      properties:
        timeZoneId:
          type: string
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:44355/connect/authorize
          scopes:
            Puupees: Puupee API
          tokenUrl: https://localhost:44355/connect/token
      type: oauth2
x-original-swagger-version: "2.0"
