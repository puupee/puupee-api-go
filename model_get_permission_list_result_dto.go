/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the GetPermissionListResultDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPermissionListResultDto{}

// GetPermissionListResultDto struct for GetPermissionListResultDto
type GetPermissionListResultDto struct {
	EntityDisplayName *string `json:"entityDisplayName,omitempty"`
	Groups []PermissionGroupDto `json:"groups,omitempty"`
}

// NewGetPermissionListResultDto instantiates a new GetPermissionListResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPermissionListResultDto() *GetPermissionListResultDto {
	this := GetPermissionListResultDto{}
	return &this
}

// NewGetPermissionListResultDtoWithDefaults instantiates a new GetPermissionListResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPermissionListResultDtoWithDefaults() *GetPermissionListResultDto {
	this := GetPermissionListResultDto{}
	return &this
}

// GetEntityDisplayName returns the EntityDisplayName field value if set, zero value otherwise.
func (o *GetPermissionListResultDto) GetEntityDisplayName() string {
	if o == nil || IsNil(o.EntityDisplayName) {
		var ret string
		return ret
	}
	return *o.EntityDisplayName
}

// GetEntityDisplayNameOk returns a tuple with the EntityDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPermissionListResultDto) GetEntityDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.EntityDisplayName) {
		return nil, false
	}
	return o.EntityDisplayName, true
}

// HasEntityDisplayName returns a boolean if a field has been set.
func (o *GetPermissionListResultDto) HasEntityDisplayName() bool {
	if o != nil && !IsNil(o.EntityDisplayName) {
		return true
	}

	return false
}

// SetEntityDisplayName gets a reference to the given string and assigns it to the EntityDisplayName field.
func (o *GetPermissionListResultDto) SetEntityDisplayName(v string) {
	o.EntityDisplayName = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *GetPermissionListResultDto) GetGroups() []PermissionGroupDto {
	if o == nil || IsNil(o.Groups) {
		var ret []PermissionGroupDto
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPermissionListResultDto) GetGroupsOk() ([]PermissionGroupDto, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *GetPermissionListResultDto) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []PermissionGroupDto and assigns it to the Groups field.
func (o *GetPermissionListResultDto) SetGroups(v []PermissionGroupDto) {
	o.Groups = v
}

func (o GetPermissionListResultDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPermissionListResultDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityDisplayName) {
		toSerialize["entityDisplayName"] = o.EntityDisplayName
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	return toSerialize, nil
}

type NullableGetPermissionListResultDto struct {
	value *GetPermissionListResultDto
	isSet bool
}

func (v NullableGetPermissionListResultDto) Get() *GetPermissionListResultDto {
	return v.value
}

func (v *NullableGetPermissionListResultDto) Set(val *GetPermissionListResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPermissionListResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPermissionListResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPermissionListResultDto(val *GetPermissionListResultDto) *NullableGetPermissionListResultDto {
	return &NullableGetPermissionListResultDto{value: val, isSet: true}
}

func (v NullableGetPermissionListResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPermissionListResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


