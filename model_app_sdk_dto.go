/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// AppSdkDto struct for AppSdkDto
type AppSdkDto struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Privacy *string `json:"privacy,omitempty"`
	PrivacyUrl *string `json:"privacyUrl,omitempty"`
	HomePage *string `json:"homePage,omitempty"`
}

// NewAppSdkDto instantiates a new AppSdkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppSdkDto() *AppSdkDto {
	this := AppSdkDto{}
	return &this
}

// NewAppSdkDtoWithDefaults instantiates a new AppSdkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppSdkDtoWithDefaults() *AppSdkDto {
	this := AppSdkDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppSdkDto) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppSdkDto) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppSdkDto) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppSdkDto) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AppSdkDto) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppSdkDto) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AppSdkDto) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AppSdkDto) SetDescription(v string) {
	o.Description = &v
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *AppSdkDto) GetPrivacy() string {
	if o == nil || isNil(o.Privacy) {
		var ret string
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppSdkDto) GetPrivacyOk() (*string, bool) {
	if o == nil || isNil(o.Privacy) {
    return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *AppSdkDto) HasPrivacy() bool {
	if o != nil && !isNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given string and assigns it to the Privacy field.
func (o *AppSdkDto) SetPrivacy(v string) {
	o.Privacy = &v
}

// GetPrivacyUrl returns the PrivacyUrl field value if set, zero value otherwise.
func (o *AppSdkDto) GetPrivacyUrl() string {
	if o == nil || isNil(o.PrivacyUrl) {
		var ret string
		return ret
	}
	return *o.PrivacyUrl
}

// GetPrivacyUrlOk returns a tuple with the PrivacyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppSdkDto) GetPrivacyUrlOk() (*string, bool) {
	if o == nil || isNil(o.PrivacyUrl) {
    return nil, false
	}
	return o.PrivacyUrl, true
}

// HasPrivacyUrl returns a boolean if a field has been set.
func (o *AppSdkDto) HasPrivacyUrl() bool {
	if o != nil && !isNil(o.PrivacyUrl) {
		return true
	}

	return false
}

// SetPrivacyUrl gets a reference to the given string and assigns it to the PrivacyUrl field.
func (o *AppSdkDto) SetPrivacyUrl(v string) {
	o.PrivacyUrl = &v
}

// GetHomePage returns the HomePage field value if set, zero value otherwise.
func (o *AppSdkDto) GetHomePage() string {
	if o == nil || isNil(o.HomePage) {
		var ret string
		return ret
	}
	return *o.HomePage
}

// GetHomePageOk returns a tuple with the HomePage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppSdkDto) GetHomePageOk() (*string, bool) {
	if o == nil || isNil(o.HomePage) {
    return nil, false
	}
	return o.HomePage, true
}

// HasHomePage returns a boolean if a field has been set.
func (o *AppSdkDto) HasHomePage() bool {
	if o != nil && !isNil(o.HomePage) {
		return true
	}

	return false
}

// SetHomePage gets a reference to the given string and assigns it to the HomePage field.
func (o *AppSdkDto) SetHomePage(v string) {
	o.HomePage = &v
}

func (o AppSdkDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	if !isNil(o.PrivacyUrl) {
		toSerialize["privacyUrl"] = o.PrivacyUrl
	}
	if !isNil(o.HomePage) {
		toSerialize["homePage"] = o.HomePage
	}
	return json.Marshal(toSerialize)
}

type NullableAppSdkDto struct {
	value *AppSdkDto
	isSet bool
}

func (v NullableAppSdkDto) Get() *AppSdkDto {
	return v.value
}

func (v *NullableAppSdkDto) Set(val *AppSdkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAppSdkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAppSdkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppSdkDto(val *AppSdkDto) *NullableAppSdkDto {
	return &NullableAppSdkDto{value: val, isSet: true}
}

func (v NullableAppSdkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppSdkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


