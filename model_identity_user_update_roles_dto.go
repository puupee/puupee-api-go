/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IdentityUserUpdateRolesDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityUserUpdateRolesDto{}

// IdentityUserUpdateRolesDto struct for IdentityUserUpdateRolesDto
type IdentityUserUpdateRolesDto struct {
	RoleNames []string `json:"roleNames"`
}

type _IdentityUserUpdateRolesDto IdentityUserUpdateRolesDto

// NewIdentityUserUpdateRolesDto instantiates a new IdentityUserUpdateRolesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityUserUpdateRolesDto(roleNames []string) *IdentityUserUpdateRolesDto {
	this := IdentityUserUpdateRolesDto{}
	this.RoleNames = roleNames
	return &this
}

// NewIdentityUserUpdateRolesDtoWithDefaults instantiates a new IdentityUserUpdateRolesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityUserUpdateRolesDtoWithDefaults() *IdentityUserUpdateRolesDto {
	this := IdentityUserUpdateRolesDto{}
	return &this
}

// GetRoleNames returns the RoleNames field value
func (o *IdentityUserUpdateRolesDto) GetRoleNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RoleNames
}

// GetRoleNamesOk returns a tuple with the RoleNames field value
// and a boolean to check if the value has been set.
func (o *IdentityUserUpdateRolesDto) GetRoleNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleNames, true
}

// SetRoleNames sets field value
func (o *IdentityUserUpdateRolesDto) SetRoleNames(v []string) {
	o.RoleNames = v
}

func (o IdentityUserUpdateRolesDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityUserUpdateRolesDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["roleNames"] = o.RoleNames
	return toSerialize, nil
}

func (o *IdentityUserUpdateRolesDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"roleNames",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIdentityUserUpdateRolesDto := _IdentityUserUpdateRolesDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIdentityUserUpdateRolesDto)

	if err != nil {
		return err
	}

	*o = IdentityUserUpdateRolesDto(varIdentityUserUpdateRolesDto)

	return err
}

type NullableIdentityUserUpdateRolesDto struct {
	value *IdentityUserUpdateRolesDto
	isSet bool
}

func (v NullableIdentityUserUpdateRolesDto) Get() *IdentityUserUpdateRolesDto {
	return v.value
}

func (v *NullableIdentityUserUpdateRolesDto) Set(val *IdentityUserUpdateRolesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityUserUpdateRolesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityUserUpdateRolesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityUserUpdateRolesDto(val *IdentityUserUpdateRolesDto) *NullableIdentityUserUpdateRolesDto {
	return &NullableIdentityUserUpdateRolesDto{value: val, isSet: true}
}

func (v NullableIdentityUserUpdateRolesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityUserUpdateRolesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


