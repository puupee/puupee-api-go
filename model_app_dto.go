/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
	"time"
)

// checks if the AppDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppDto{}

// AppDto struct for AppDto
type AppDto struct {
	Id *string `json:"id,omitempty"`
	CreationTime *time.Time `json:"creationTime,omitempty"`
	CreatorId NullableString `json:"creatorId,omitempty"`
	LastModificationTime NullableTime `json:"lastModificationTime,omitempty"`
	LastModifierId NullableString `json:"lastModifierId,omitempty"`
	IsDeleted *bool `json:"isDeleted,omitempty"`
	DeleterId NullableString `json:"deleterId,omitempty"`
	DeletionTime NullableTime `json:"deletionTime,omitempty"`
	Name NullableString `json:"name,omitempty"`
	DisplayName NullableString `json:"displayName,omitempty"`
	Framework NullableString `json:"framework,omitempty"`
	AppType NullableString `json:"appType,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Icon NullableString `json:"icon,omitempty"`
	HomePage NullableString `json:"homePage,omitempty"`
	SortIndex *int32 `json:"sortIndex,omitempty"`
	GitRepository NullableString `json:"gitRepository,omitempty"`
	GitRepositoryType NullableString `json:"gitRepositoryType,omitempty"`
	IsEnabled *bool `json:"isEnabled,omitempty"`
	IsPublished *bool `json:"isPublished,omitempty"`
	WebhookUrl NullableString `json:"webhookUrl,omitempty"`
	BusinessDomain NullableString `json:"businessDomain,omitempty"`
	BusinessUrl NullableString `json:"businessUrl,omitempty"`
	SubscriptionPlatforms NullableString `json:"subscriptionPlatforms,omitempty"`
	FreePlatforms NullableString `json:"freePlatforms,omitempty"`
	SpecJsonSchema NullableString `json:"specJsonSchema,omitempty"`
	LatestReleases []AppReleaseDto `json:"latestReleases,omitempty"`
	Creator *IdentityUserDto `json:"creator,omitempty"`
	Features []AppFeatureDto `json:"features,omitempty"`
	Sdks []AppSdkDto `json:"sdks,omitempty"`
}

// NewAppDto instantiates a new AppDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppDto() *AppDto {
	this := AppDto{}
	return &this
}

// NewAppDtoWithDefaults instantiates a new AppDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppDtoWithDefaults() *AppDto {
	this := AppDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AppDto) SetId(v string) {
	o.Id = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *AppDto) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDto) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *AppDto) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *AppDto) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId.Get()) {
		var ret string
		return ret
	}
	return *o.CreatorId.Get()
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetCreatorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorId.Get(), o.CreatorId.IsSet()
}

// HasCreatorId returns a boolean if a field has been set.
func (o *AppDto) HasCreatorId() bool {
	if o != nil && o.CreatorId.IsSet() {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given NullableString and assigns it to the CreatorId field.
func (o *AppDto) SetCreatorId(v string) {
	o.CreatorId.Set(&v)
}
// SetCreatorIdNil sets the value for CreatorId to be an explicit nil
func (o *AppDto) SetCreatorIdNil() {
	o.CreatorId.Set(nil)
}

// UnsetCreatorId ensures that no value is present for CreatorId, not even an explicit nil
func (o *AppDto) UnsetCreatorId() {
	o.CreatorId.Unset()
}

// GetLastModificationTime returns the LastModificationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetLastModificationTime() time.Time {
	if o == nil || IsNil(o.LastModificationTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastModificationTime.Get()
}

// GetLastModificationTimeOk returns a tuple with the LastModificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetLastModificationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModificationTime.Get(), o.LastModificationTime.IsSet()
}

// HasLastModificationTime returns a boolean if a field has been set.
func (o *AppDto) HasLastModificationTime() bool {
	if o != nil && o.LastModificationTime.IsSet() {
		return true
	}

	return false
}

// SetLastModificationTime gets a reference to the given NullableTime and assigns it to the LastModificationTime field.
func (o *AppDto) SetLastModificationTime(v time.Time) {
	o.LastModificationTime.Set(&v)
}
// SetLastModificationTimeNil sets the value for LastModificationTime to be an explicit nil
func (o *AppDto) SetLastModificationTimeNil() {
	o.LastModificationTime.Set(nil)
}

// UnsetLastModificationTime ensures that no value is present for LastModificationTime, not even an explicit nil
func (o *AppDto) UnsetLastModificationTime() {
	o.LastModificationTime.Unset()
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId.Get()) {
		var ret string
		return ret
	}
	return *o.LastModifierId.Get()
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetLastModifierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifierId.Get(), o.LastModifierId.IsSet()
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *AppDto) HasLastModifierId() bool {
	if o != nil && o.LastModifierId.IsSet() {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given NullableString and assigns it to the LastModifierId field.
func (o *AppDto) SetLastModifierId(v string) {
	o.LastModifierId.Set(&v)
}
// SetLastModifierIdNil sets the value for LastModifierId to be an explicit nil
func (o *AppDto) SetLastModifierIdNil() {
	o.LastModifierId.Set(nil)
}

// UnsetLastModifierId ensures that no value is present for LastModifierId, not even an explicit nil
func (o *AppDto) UnsetLastModifierId() {
	o.LastModifierId.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *AppDto) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDto) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *AppDto) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *AppDto) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetDeleterId returns the DeleterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetDeleterId() string {
	if o == nil || IsNil(o.DeleterId.Get()) {
		var ret string
		return ret
	}
	return *o.DeleterId.Get()
}

// GetDeleterIdOk returns a tuple with the DeleterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetDeleterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeleterId.Get(), o.DeleterId.IsSet()
}

// HasDeleterId returns a boolean if a field has been set.
func (o *AppDto) HasDeleterId() bool {
	if o != nil && o.DeleterId.IsSet() {
		return true
	}

	return false
}

// SetDeleterId gets a reference to the given NullableString and assigns it to the DeleterId field.
func (o *AppDto) SetDeleterId(v string) {
	o.DeleterId.Set(&v)
}
// SetDeleterIdNil sets the value for DeleterId to be an explicit nil
func (o *AppDto) SetDeleterIdNil() {
	o.DeleterId.Set(nil)
}

// UnsetDeleterId ensures that no value is present for DeleterId, not even an explicit nil
func (o *AppDto) UnsetDeleterId() {
	o.DeleterId.Unset()
}

// GetDeletionTime returns the DeletionTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetDeletionTime() time.Time {
	if o == nil || IsNil(o.DeletionTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletionTime.Get()
}

// GetDeletionTimeOk returns a tuple with the DeletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetDeletionTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletionTime.Get(), o.DeletionTime.IsSet()
}

// HasDeletionTime returns a boolean if a field has been set.
func (o *AppDto) HasDeletionTime() bool {
	if o != nil && o.DeletionTime.IsSet() {
		return true
	}

	return false
}

// SetDeletionTime gets a reference to the given NullableTime and assigns it to the DeletionTime field.
func (o *AppDto) SetDeletionTime(v time.Time) {
	o.DeletionTime.Set(&v)
}
// SetDeletionTimeNil sets the value for DeletionTime to be an explicit nil
func (o *AppDto) SetDeletionTimeNil() {
	o.DeletionTime.Set(nil)
}

// UnsetDeletionTime ensures that no value is present for DeletionTime, not even an explicit nil
func (o *AppDto) UnsetDeletionTime() {
	o.DeletionTime.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AppDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AppDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AppDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AppDto) UnsetName() {
	o.Name.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AppDto) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *AppDto) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *AppDto) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *AppDto) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetFramework returns the Framework field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetFramework() string {
	if o == nil || IsNil(o.Framework.Get()) {
		var ret string
		return ret
	}
	return *o.Framework.Get()
}

// GetFrameworkOk returns a tuple with the Framework field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetFrameworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Framework.Get(), o.Framework.IsSet()
}

// HasFramework returns a boolean if a field has been set.
func (o *AppDto) HasFramework() bool {
	if o != nil && o.Framework.IsSet() {
		return true
	}

	return false
}

// SetFramework gets a reference to the given NullableString and assigns it to the Framework field.
func (o *AppDto) SetFramework(v string) {
	o.Framework.Set(&v)
}
// SetFrameworkNil sets the value for Framework to be an explicit nil
func (o *AppDto) SetFrameworkNil() {
	o.Framework.Set(nil)
}

// UnsetFramework ensures that no value is present for Framework, not even an explicit nil
func (o *AppDto) UnsetFramework() {
	o.Framework.Unset()
}

// GetAppType returns the AppType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetAppType() string {
	if o == nil || IsNil(o.AppType.Get()) {
		var ret string
		return ret
	}
	return *o.AppType.Get()
}

// GetAppTypeOk returns a tuple with the AppType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetAppTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppType.Get(), o.AppType.IsSet()
}

// HasAppType returns a boolean if a field has been set.
func (o *AppDto) HasAppType() bool {
	if o != nil && o.AppType.IsSet() {
		return true
	}

	return false
}

// SetAppType gets a reference to the given NullableString and assigns it to the AppType field.
func (o *AppDto) SetAppType(v string) {
	o.AppType.Set(&v)
}
// SetAppTypeNil sets the value for AppType to be an explicit nil
func (o *AppDto) SetAppTypeNil() {
	o.AppType.Set(nil)
}

// UnsetAppType ensures that no value is present for AppType, not even an explicit nil
func (o *AppDto) UnsetAppType() {
	o.AppType.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AppDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AppDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AppDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AppDto) UnsetDescription() {
	o.Description.Unset()
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *AppDto) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *AppDto) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *AppDto) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *AppDto) UnsetIcon() {
	o.Icon.Unset()
}

// GetHomePage returns the HomePage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetHomePage() string {
	if o == nil || IsNil(o.HomePage.Get()) {
		var ret string
		return ret
	}
	return *o.HomePage.Get()
}

// GetHomePageOk returns a tuple with the HomePage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetHomePageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HomePage.Get(), o.HomePage.IsSet()
}

// HasHomePage returns a boolean if a field has been set.
func (o *AppDto) HasHomePage() bool {
	if o != nil && o.HomePage.IsSet() {
		return true
	}

	return false
}

// SetHomePage gets a reference to the given NullableString and assigns it to the HomePage field.
func (o *AppDto) SetHomePage(v string) {
	o.HomePage.Set(&v)
}
// SetHomePageNil sets the value for HomePage to be an explicit nil
func (o *AppDto) SetHomePageNil() {
	o.HomePage.Set(nil)
}

// UnsetHomePage ensures that no value is present for HomePage, not even an explicit nil
func (o *AppDto) UnsetHomePage() {
	o.HomePage.Unset()
}

// GetSortIndex returns the SortIndex field value if set, zero value otherwise.
func (o *AppDto) GetSortIndex() int32 {
	if o == nil || IsNil(o.SortIndex) {
		var ret int32
		return ret
	}
	return *o.SortIndex
}

// GetSortIndexOk returns a tuple with the SortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDto) GetSortIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.SortIndex) {
		return nil, false
	}
	return o.SortIndex, true
}

// HasSortIndex returns a boolean if a field has been set.
func (o *AppDto) HasSortIndex() bool {
	if o != nil && !IsNil(o.SortIndex) {
		return true
	}

	return false
}

// SetSortIndex gets a reference to the given int32 and assigns it to the SortIndex field.
func (o *AppDto) SetSortIndex(v int32) {
	o.SortIndex = &v
}

// GetGitRepository returns the GitRepository field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetGitRepository() string {
	if o == nil || IsNil(o.GitRepository.Get()) {
		var ret string
		return ret
	}
	return *o.GitRepository.Get()
}

// GetGitRepositoryOk returns a tuple with the GitRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetGitRepositoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitRepository.Get(), o.GitRepository.IsSet()
}

// HasGitRepository returns a boolean if a field has been set.
func (o *AppDto) HasGitRepository() bool {
	if o != nil && o.GitRepository.IsSet() {
		return true
	}

	return false
}

// SetGitRepository gets a reference to the given NullableString and assigns it to the GitRepository field.
func (o *AppDto) SetGitRepository(v string) {
	o.GitRepository.Set(&v)
}
// SetGitRepositoryNil sets the value for GitRepository to be an explicit nil
func (o *AppDto) SetGitRepositoryNil() {
	o.GitRepository.Set(nil)
}

// UnsetGitRepository ensures that no value is present for GitRepository, not even an explicit nil
func (o *AppDto) UnsetGitRepository() {
	o.GitRepository.Unset()
}

// GetGitRepositoryType returns the GitRepositoryType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetGitRepositoryType() string {
	if o == nil || IsNil(o.GitRepositoryType.Get()) {
		var ret string
		return ret
	}
	return *o.GitRepositoryType.Get()
}

// GetGitRepositoryTypeOk returns a tuple with the GitRepositoryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetGitRepositoryTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GitRepositoryType.Get(), o.GitRepositoryType.IsSet()
}

// HasGitRepositoryType returns a boolean if a field has been set.
func (o *AppDto) HasGitRepositoryType() bool {
	if o != nil && o.GitRepositoryType.IsSet() {
		return true
	}

	return false
}

// SetGitRepositoryType gets a reference to the given NullableString and assigns it to the GitRepositoryType field.
func (o *AppDto) SetGitRepositoryType(v string) {
	o.GitRepositoryType.Set(&v)
}
// SetGitRepositoryTypeNil sets the value for GitRepositoryType to be an explicit nil
func (o *AppDto) SetGitRepositoryTypeNil() {
	o.GitRepositoryType.Set(nil)
}

// UnsetGitRepositoryType ensures that no value is present for GitRepositoryType, not even an explicit nil
func (o *AppDto) UnsetGitRepositoryType() {
	o.GitRepositoryType.Unset()
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *AppDto) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDto) GetIsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *AppDto) HasIsEnabled() bool {
	if o != nil && !IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *AppDto) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetIsPublished returns the IsPublished field value if set, zero value otherwise.
func (o *AppDto) GetIsPublished() bool {
	if o == nil || IsNil(o.IsPublished) {
		var ret bool
		return ret
	}
	return *o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDto) GetIsPublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublished) {
		return nil, false
	}
	return o.IsPublished, true
}

// HasIsPublished returns a boolean if a field has been set.
func (o *AppDto) HasIsPublished() bool {
	if o != nil && !IsNil(o.IsPublished) {
		return true
	}

	return false
}

// SetIsPublished gets a reference to the given bool and assigns it to the IsPublished field.
func (o *AppDto) SetIsPublished(v bool) {
	o.IsPublished = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetWebhookUrl() string {
	if o == nil || IsNil(o.WebhookUrl.Get()) {
		var ret string
		return ret
	}
	return *o.WebhookUrl.Get()
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetWebhookUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebhookUrl.Get(), o.WebhookUrl.IsSet()
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *AppDto) HasWebhookUrl() bool {
	if o != nil && o.WebhookUrl.IsSet() {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given NullableString and assigns it to the WebhookUrl field.
func (o *AppDto) SetWebhookUrl(v string) {
	o.WebhookUrl.Set(&v)
}
// SetWebhookUrlNil sets the value for WebhookUrl to be an explicit nil
func (o *AppDto) SetWebhookUrlNil() {
	o.WebhookUrl.Set(nil)
}

// UnsetWebhookUrl ensures that no value is present for WebhookUrl, not even an explicit nil
func (o *AppDto) UnsetWebhookUrl() {
	o.WebhookUrl.Unset()
}

// GetBusinessDomain returns the BusinessDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetBusinessDomain() string {
	if o == nil || IsNil(o.BusinessDomain.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessDomain.Get()
}

// GetBusinessDomainOk returns a tuple with the BusinessDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetBusinessDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessDomain.Get(), o.BusinessDomain.IsSet()
}

// HasBusinessDomain returns a boolean if a field has been set.
func (o *AppDto) HasBusinessDomain() bool {
	if o != nil && o.BusinessDomain.IsSet() {
		return true
	}

	return false
}

// SetBusinessDomain gets a reference to the given NullableString and assigns it to the BusinessDomain field.
func (o *AppDto) SetBusinessDomain(v string) {
	o.BusinessDomain.Set(&v)
}
// SetBusinessDomainNil sets the value for BusinessDomain to be an explicit nil
func (o *AppDto) SetBusinessDomainNil() {
	o.BusinessDomain.Set(nil)
}

// UnsetBusinessDomain ensures that no value is present for BusinessDomain, not even an explicit nil
func (o *AppDto) UnsetBusinessDomain() {
	o.BusinessDomain.Unset()
}

// GetBusinessUrl returns the BusinessUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetBusinessUrl() string {
	if o == nil || IsNil(o.BusinessUrl.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessUrl.Get()
}

// GetBusinessUrlOk returns a tuple with the BusinessUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetBusinessUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessUrl.Get(), o.BusinessUrl.IsSet()
}

// HasBusinessUrl returns a boolean if a field has been set.
func (o *AppDto) HasBusinessUrl() bool {
	if o != nil && o.BusinessUrl.IsSet() {
		return true
	}

	return false
}

// SetBusinessUrl gets a reference to the given NullableString and assigns it to the BusinessUrl field.
func (o *AppDto) SetBusinessUrl(v string) {
	o.BusinessUrl.Set(&v)
}
// SetBusinessUrlNil sets the value for BusinessUrl to be an explicit nil
func (o *AppDto) SetBusinessUrlNil() {
	o.BusinessUrl.Set(nil)
}

// UnsetBusinessUrl ensures that no value is present for BusinessUrl, not even an explicit nil
func (o *AppDto) UnsetBusinessUrl() {
	o.BusinessUrl.Unset()
}

// GetSubscriptionPlatforms returns the SubscriptionPlatforms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetSubscriptionPlatforms() string {
	if o == nil || IsNil(o.SubscriptionPlatforms.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionPlatforms.Get()
}

// GetSubscriptionPlatformsOk returns a tuple with the SubscriptionPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetSubscriptionPlatformsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionPlatforms.Get(), o.SubscriptionPlatforms.IsSet()
}

// HasSubscriptionPlatforms returns a boolean if a field has been set.
func (o *AppDto) HasSubscriptionPlatforms() bool {
	if o != nil && o.SubscriptionPlatforms.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionPlatforms gets a reference to the given NullableString and assigns it to the SubscriptionPlatforms field.
func (o *AppDto) SetSubscriptionPlatforms(v string) {
	o.SubscriptionPlatforms.Set(&v)
}
// SetSubscriptionPlatformsNil sets the value for SubscriptionPlatforms to be an explicit nil
func (o *AppDto) SetSubscriptionPlatformsNil() {
	o.SubscriptionPlatforms.Set(nil)
}

// UnsetSubscriptionPlatforms ensures that no value is present for SubscriptionPlatforms, not even an explicit nil
func (o *AppDto) UnsetSubscriptionPlatforms() {
	o.SubscriptionPlatforms.Unset()
}

// GetFreePlatforms returns the FreePlatforms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetFreePlatforms() string {
	if o == nil || IsNil(o.FreePlatforms.Get()) {
		var ret string
		return ret
	}
	return *o.FreePlatforms.Get()
}

// GetFreePlatformsOk returns a tuple with the FreePlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetFreePlatformsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreePlatforms.Get(), o.FreePlatforms.IsSet()
}

// HasFreePlatforms returns a boolean if a field has been set.
func (o *AppDto) HasFreePlatforms() bool {
	if o != nil && o.FreePlatforms.IsSet() {
		return true
	}

	return false
}

// SetFreePlatforms gets a reference to the given NullableString and assigns it to the FreePlatforms field.
func (o *AppDto) SetFreePlatforms(v string) {
	o.FreePlatforms.Set(&v)
}
// SetFreePlatformsNil sets the value for FreePlatforms to be an explicit nil
func (o *AppDto) SetFreePlatformsNil() {
	o.FreePlatforms.Set(nil)
}

// UnsetFreePlatforms ensures that no value is present for FreePlatforms, not even an explicit nil
func (o *AppDto) UnsetFreePlatforms() {
	o.FreePlatforms.Unset()
}

// GetSpecJsonSchema returns the SpecJsonSchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetSpecJsonSchema() string {
	if o == nil || IsNil(o.SpecJsonSchema.Get()) {
		var ret string
		return ret
	}
	return *o.SpecJsonSchema.Get()
}

// GetSpecJsonSchemaOk returns a tuple with the SpecJsonSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetSpecJsonSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecJsonSchema.Get(), o.SpecJsonSchema.IsSet()
}

// HasSpecJsonSchema returns a boolean if a field has been set.
func (o *AppDto) HasSpecJsonSchema() bool {
	if o != nil && o.SpecJsonSchema.IsSet() {
		return true
	}

	return false
}

// SetSpecJsonSchema gets a reference to the given NullableString and assigns it to the SpecJsonSchema field.
func (o *AppDto) SetSpecJsonSchema(v string) {
	o.SpecJsonSchema.Set(&v)
}
// SetSpecJsonSchemaNil sets the value for SpecJsonSchema to be an explicit nil
func (o *AppDto) SetSpecJsonSchemaNil() {
	o.SpecJsonSchema.Set(nil)
}

// UnsetSpecJsonSchema ensures that no value is present for SpecJsonSchema, not even an explicit nil
func (o *AppDto) UnsetSpecJsonSchema() {
	o.SpecJsonSchema.Unset()
}

// GetLatestReleases returns the LatestReleases field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetLatestReleases() []AppReleaseDto {
	if o == nil {
		var ret []AppReleaseDto
		return ret
	}
	return o.LatestReleases
}

// GetLatestReleasesOk returns a tuple with the LatestReleases field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetLatestReleasesOk() ([]AppReleaseDto, bool) {
	if o == nil || IsNil(o.LatestReleases) {
		return nil, false
	}
	return o.LatestReleases, true
}

// HasLatestReleases returns a boolean if a field has been set.
func (o *AppDto) HasLatestReleases() bool {
	if o != nil && IsNil(o.LatestReleases) {
		return true
	}

	return false
}

// SetLatestReleases gets a reference to the given []AppReleaseDto and assigns it to the LatestReleases field.
func (o *AppDto) SetLatestReleases(v []AppReleaseDto) {
	o.LatestReleases = v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *AppDto) GetCreator() IdentityUserDto {
	if o == nil || IsNil(o.Creator) {
		var ret IdentityUserDto
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDto) GetCreatorOk() (*IdentityUserDto, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *AppDto) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given IdentityUserDto and assigns it to the Creator field.
func (o *AppDto) SetCreator(v IdentityUserDto) {
	o.Creator = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetFeatures() []AppFeatureDto {
	if o == nil {
		var ret []AppFeatureDto
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetFeaturesOk() ([]AppFeatureDto, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *AppDto) HasFeatures() bool {
	if o != nil && IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []AppFeatureDto and assigns it to the Features field.
func (o *AppDto) SetFeatures(v []AppFeatureDto) {
	o.Features = v
}

// GetSdks returns the Sdks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppDto) GetSdks() []AppSdkDto {
	if o == nil {
		var ret []AppSdkDto
		return ret
	}
	return o.Sdks
}

// GetSdksOk returns a tuple with the Sdks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppDto) GetSdksOk() ([]AppSdkDto, bool) {
	if o == nil || IsNil(o.Sdks) {
		return nil, false
	}
	return o.Sdks, true
}

// HasSdks returns a boolean if a field has been set.
func (o *AppDto) HasSdks() bool {
	if o != nil && IsNil(o.Sdks) {
		return true
	}

	return false
}

// SetSdks gets a reference to the given []AppSdkDto and assigns it to the Sdks field.
func (o *AppDto) SetSdks(v []AppSdkDto) {
	o.Sdks = v
}

func (o AppDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if o.CreatorId.IsSet() {
		toSerialize["creatorId"] = o.CreatorId.Get()
	}
	if o.LastModificationTime.IsSet() {
		toSerialize["lastModificationTime"] = o.LastModificationTime.Get()
	}
	if o.LastModifierId.IsSet() {
		toSerialize["lastModifierId"] = o.LastModifierId.Get()
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if o.DeleterId.IsSet() {
		toSerialize["deleterId"] = o.DeleterId.Get()
	}
	if o.DeletionTime.IsSet() {
		toSerialize["deletionTime"] = o.DeletionTime.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Framework.IsSet() {
		toSerialize["framework"] = o.Framework.Get()
	}
	if o.AppType.IsSet() {
		toSerialize["appType"] = o.AppType.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if o.HomePage.IsSet() {
		toSerialize["homePage"] = o.HomePage.Get()
	}
	if !IsNil(o.SortIndex) {
		toSerialize["sortIndex"] = o.SortIndex
	}
	if o.GitRepository.IsSet() {
		toSerialize["gitRepository"] = o.GitRepository.Get()
	}
	if o.GitRepositoryType.IsSet() {
		toSerialize["gitRepositoryType"] = o.GitRepositoryType.Get()
	}
	if !IsNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if !IsNil(o.IsPublished) {
		toSerialize["isPublished"] = o.IsPublished
	}
	if o.WebhookUrl.IsSet() {
		toSerialize["webhookUrl"] = o.WebhookUrl.Get()
	}
	if o.BusinessDomain.IsSet() {
		toSerialize["businessDomain"] = o.BusinessDomain.Get()
	}
	if o.BusinessUrl.IsSet() {
		toSerialize["businessUrl"] = o.BusinessUrl.Get()
	}
	if o.SubscriptionPlatforms.IsSet() {
		toSerialize["subscriptionPlatforms"] = o.SubscriptionPlatforms.Get()
	}
	if o.FreePlatforms.IsSet() {
		toSerialize["freePlatforms"] = o.FreePlatforms.Get()
	}
	if o.SpecJsonSchema.IsSet() {
		toSerialize["specJsonSchema"] = o.SpecJsonSchema.Get()
	}
	if o.LatestReleases != nil {
		toSerialize["latestReleases"] = o.LatestReleases
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.Sdks != nil {
		toSerialize["sdks"] = o.Sdks
	}
	return toSerialize, nil
}

type NullableAppDto struct {
	value *AppDto
	isSet bool
}

func (v NullableAppDto) Get() *AppDto {
	return v.value
}

func (v *NullableAppDto) Set(val *AppDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAppDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAppDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppDto(val *AppDto) *NullableAppDto {
	return &NullableAppDto{value: val, isSet: true}
}

func (v NullableAppDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


