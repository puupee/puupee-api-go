/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the LatestReceiptInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LatestReceiptInfo{}

// LatestReceiptInfo struct for LatestReceiptInfo
type LatestReceiptInfo struct {
	Quantity NullableString `json:"quantity,omitempty"`
	ProductId NullableString `json:"product_id,omitempty"`
	TransactionId NullableString `json:"transaction_id,omitempty"`
	OriginalTransactionId NullableString `json:"original_transaction_id,omitempty"`
	PurchaseDate NullableString `json:"purchase_date,omitempty"`
	PurchaseDateMs NullableString `json:"purchase_date_ms,omitempty"`
	PurchaseDatePst NullableString `json:"purchase_date_pst,omitempty"`
	OriginalPurchaseDate NullableString `json:"original_purchase_date,omitempty"`
	OriginalPurchaseDateMs NullableString `json:"original_purchase_date_ms,omitempty"`
	OriginalPurchaseDatePst NullableString `json:"original_purchase_date_pst,omitempty"`
	ExpiresDate NullableString `json:"expires_date,omitempty"`
	ExpiresDateMs NullableString `json:"expires_date_ms,omitempty"`
	ExpiresDatePst NullableString `json:"expires_date_pst,omitempty"`
	WebOrderLineItemId NullableString `json:"web_order_line_item_id,omitempty"`
	IsTrialPeriod NullableString `json:"is_trial_period,omitempty"`
	IsInIntroOfferPeriod NullableString `json:"is_in_intro_offer_period,omitempty"`
}

// NewLatestReceiptInfo instantiates a new LatestReceiptInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestReceiptInfo() *LatestReceiptInfo {
	this := LatestReceiptInfo{}
	return &this
}

// NewLatestReceiptInfoWithDefaults instantiates a new LatestReceiptInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestReceiptInfoWithDefaults() *LatestReceiptInfo {
	this := LatestReceiptInfo{}
	return &this
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetQuantity() string {
	if o == nil || IsNil(o.Quantity.Get()) {
		var ret string
		return ret
	}
	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetQuantityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// HasQuantity returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasQuantity() bool {
	if o != nil && o.Quantity.IsSet() {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given NullableString and assigns it to the Quantity field.
func (o *LatestReceiptInfo) SetQuantity(v string) {
	o.Quantity.Set(&v)
}
// SetQuantityNil sets the value for Quantity to be an explicit nil
func (o *LatestReceiptInfo) SetQuantityNil() {
	o.Quantity.Set(nil)
}

// UnsetQuantity ensures that no value is present for Quantity, not even an explicit nil
func (o *LatestReceiptInfo) UnsetQuantity() {
	o.Quantity.Unset()
}

// GetProductId returns the ProductId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetProductId() string {
	if o == nil || IsNil(o.ProductId.Get()) {
		var ret string
		return ret
	}
	return *o.ProductId.Get()
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductId.Get(), o.ProductId.IsSet()
}

// HasProductId returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasProductId() bool {
	if o != nil && o.ProductId.IsSet() {
		return true
	}

	return false
}

// SetProductId gets a reference to the given NullableString and assigns it to the ProductId field.
func (o *LatestReceiptInfo) SetProductId(v string) {
	o.ProductId.Set(&v)
}
// SetProductIdNil sets the value for ProductId to be an explicit nil
func (o *LatestReceiptInfo) SetProductIdNil() {
	o.ProductId.Set(nil)
}

// UnsetProductId ensures that no value is present for ProductId, not even an explicit nil
func (o *LatestReceiptInfo) UnsetProductId() {
	o.ProductId.Unset()
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionId.Get()
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionId.Get(), o.TransactionId.IsSet()
}

// HasTransactionId returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasTransactionId() bool {
	if o != nil && o.TransactionId.IsSet() {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given NullableString and assigns it to the TransactionId field.
func (o *LatestReceiptInfo) SetTransactionId(v string) {
	o.TransactionId.Set(&v)
}
// SetTransactionIdNil sets the value for TransactionId to be an explicit nil
func (o *LatestReceiptInfo) SetTransactionIdNil() {
	o.TransactionId.Set(nil)
}

// UnsetTransactionId ensures that no value is present for TransactionId, not even an explicit nil
func (o *LatestReceiptInfo) UnsetTransactionId() {
	o.TransactionId.Unset()
}

// GetOriginalTransactionId returns the OriginalTransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetOriginalTransactionId() string {
	if o == nil || IsNil(o.OriginalTransactionId.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalTransactionId.Get()
}

// GetOriginalTransactionIdOk returns a tuple with the OriginalTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetOriginalTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalTransactionId.Get(), o.OriginalTransactionId.IsSet()
}

// HasOriginalTransactionId returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasOriginalTransactionId() bool {
	if o != nil && o.OriginalTransactionId.IsSet() {
		return true
	}

	return false
}

// SetOriginalTransactionId gets a reference to the given NullableString and assigns it to the OriginalTransactionId field.
func (o *LatestReceiptInfo) SetOriginalTransactionId(v string) {
	o.OriginalTransactionId.Set(&v)
}
// SetOriginalTransactionIdNil sets the value for OriginalTransactionId to be an explicit nil
func (o *LatestReceiptInfo) SetOriginalTransactionIdNil() {
	o.OriginalTransactionId.Set(nil)
}

// UnsetOriginalTransactionId ensures that no value is present for OriginalTransactionId, not even an explicit nil
func (o *LatestReceiptInfo) UnsetOriginalTransactionId() {
	o.OriginalTransactionId.Unset()
}

// GetPurchaseDate returns the PurchaseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetPurchaseDate() string {
	if o == nil || IsNil(o.PurchaseDate.Get()) {
		var ret string
		return ret
	}
	return *o.PurchaseDate.Get()
}

// GetPurchaseDateOk returns a tuple with the PurchaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetPurchaseDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseDate.Get(), o.PurchaseDate.IsSet()
}

// HasPurchaseDate returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasPurchaseDate() bool {
	if o != nil && o.PurchaseDate.IsSet() {
		return true
	}

	return false
}

// SetPurchaseDate gets a reference to the given NullableString and assigns it to the PurchaseDate field.
func (o *LatestReceiptInfo) SetPurchaseDate(v string) {
	o.PurchaseDate.Set(&v)
}
// SetPurchaseDateNil sets the value for PurchaseDate to be an explicit nil
func (o *LatestReceiptInfo) SetPurchaseDateNil() {
	o.PurchaseDate.Set(nil)
}

// UnsetPurchaseDate ensures that no value is present for PurchaseDate, not even an explicit nil
func (o *LatestReceiptInfo) UnsetPurchaseDate() {
	o.PurchaseDate.Unset()
}

// GetPurchaseDateMs returns the PurchaseDateMs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetPurchaseDateMs() string {
	if o == nil || IsNil(o.PurchaseDateMs.Get()) {
		var ret string
		return ret
	}
	return *o.PurchaseDateMs.Get()
}

// GetPurchaseDateMsOk returns a tuple with the PurchaseDateMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetPurchaseDateMsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseDateMs.Get(), o.PurchaseDateMs.IsSet()
}

// HasPurchaseDateMs returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasPurchaseDateMs() bool {
	if o != nil && o.PurchaseDateMs.IsSet() {
		return true
	}

	return false
}

// SetPurchaseDateMs gets a reference to the given NullableString and assigns it to the PurchaseDateMs field.
func (o *LatestReceiptInfo) SetPurchaseDateMs(v string) {
	o.PurchaseDateMs.Set(&v)
}
// SetPurchaseDateMsNil sets the value for PurchaseDateMs to be an explicit nil
func (o *LatestReceiptInfo) SetPurchaseDateMsNil() {
	o.PurchaseDateMs.Set(nil)
}

// UnsetPurchaseDateMs ensures that no value is present for PurchaseDateMs, not even an explicit nil
func (o *LatestReceiptInfo) UnsetPurchaseDateMs() {
	o.PurchaseDateMs.Unset()
}

// GetPurchaseDatePst returns the PurchaseDatePst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetPurchaseDatePst() string {
	if o == nil || IsNil(o.PurchaseDatePst.Get()) {
		var ret string
		return ret
	}
	return *o.PurchaseDatePst.Get()
}

// GetPurchaseDatePstOk returns a tuple with the PurchaseDatePst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetPurchaseDatePstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseDatePst.Get(), o.PurchaseDatePst.IsSet()
}

// HasPurchaseDatePst returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasPurchaseDatePst() bool {
	if o != nil && o.PurchaseDatePst.IsSet() {
		return true
	}

	return false
}

// SetPurchaseDatePst gets a reference to the given NullableString and assigns it to the PurchaseDatePst field.
func (o *LatestReceiptInfo) SetPurchaseDatePst(v string) {
	o.PurchaseDatePst.Set(&v)
}
// SetPurchaseDatePstNil sets the value for PurchaseDatePst to be an explicit nil
func (o *LatestReceiptInfo) SetPurchaseDatePstNil() {
	o.PurchaseDatePst.Set(nil)
}

// UnsetPurchaseDatePst ensures that no value is present for PurchaseDatePst, not even an explicit nil
func (o *LatestReceiptInfo) UnsetPurchaseDatePst() {
	o.PurchaseDatePst.Unset()
}

// GetOriginalPurchaseDate returns the OriginalPurchaseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetOriginalPurchaseDate() string {
	if o == nil || IsNil(o.OriginalPurchaseDate.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalPurchaseDate.Get()
}

// GetOriginalPurchaseDateOk returns a tuple with the OriginalPurchaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetOriginalPurchaseDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalPurchaseDate.Get(), o.OriginalPurchaseDate.IsSet()
}

// HasOriginalPurchaseDate returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasOriginalPurchaseDate() bool {
	if o != nil && o.OriginalPurchaseDate.IsSet() {
		return true
	}

	return false
}

// SetOriginalPurchaseDate gets a reference to the given NullableString and assigns it to the OriginalPurchaseDate field.
func (o *LatestReceiptInfo) SetOriginalPurchaseDate(v string) {
	o.OriginalPurchaseDate.Set(&v)
}
// SetOriginalPurchaseDateNil sets the value for OriginalPurchaseDate to be an explicit nil
func (o *LatestReceiptInfo) SetOriginalPurchaseDateNil() {
	o.OriginalPurchaseDate.Set(nil)
}

// UnsetOriginalPurchaseDate ensures that no value is present for OriginalPurchaseDate, not even an explicit nil
func (o *LatestReceiptInfo) UnsetOriginalPurchaseDate() {
	o.OriginalPurchaseDate.Unset()
}

// GetOriginalPurchaseDateMs returns the OriginalPurchaseDateMs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetOriginalPurchaseDateMs() string {
	if o == nil || IsNil(o.OriginalPurchaseDateMs.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalPurchaseDateMs.Get()
}

// GetOriginalPurchaseDateMsOk returns a tuple with the OriginalPurchaseDateMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetOriginalPurchaseDateMsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalPurchaseDateMs.Get(), o.OriginalPurchaseDateMs.IsSet()
}

// HasOriginalPurchaseDateMs returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasOriginalPurchaseDateMs() bool {
	if o != nil && o.OriginalPurchaseDateMs.IsSet() {
		return true
	}

	return false
}

// SetOriginalPurchaseDateMs gets a reference to the given NullableString and assigns it to the OriginalPurchaseDateMs field.
func (o *LatestReceiptInfo) SetOriginalPurchaseDateMs(v string) {
	o.OriginalPurchaseDateMs.Set(&v)
}
// SetOriginalPurchaseDateMsNil sets the value for OriginalPurchaseDateMs to be an explicit nil
func (o *LatestReceiptInfo) SetOriginalPurchaseDateMsNil() {
	o.OriginalPurchaseDateMs.Set(nil)
}

// UnsetOriginalPurchaseDateMs ensures that no value is present for OriginalPurchaseDateMs, not even an explicit nil
func (o *LatestReceiptInfo) UnsetOriginalPurchaseDateMs() {
	o.OriginalPurchaseDateMs.Unset()
}

// GetOriginalPurchaseDatePst returns the OriginalPurchaseDatePst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetOriginalPurchaseDatePst() string {
	if o == nil || IsNil(o.OriginalPurchaseDatePst.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalPurchaseDatePst.Get()
}

// GetOriginalPurchaseDatePstOk returns a tuple with the OriginalPurchaseDatePst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetOriginalPurchaseDatePstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalPurchaseDatePst.Get(), o.OriginalPurchaseDatePst.IsSet()
}

// HasOriginalPurchaseDatePst returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasOriginalPurchaseDatePst() bool {
	if o != nil && o.OriginalPurchaseDatePst.IsSet() {
		return true
	}

	return false
}

// SetOriginalPurchaseDatePst gets a reference to the given NullableString and assigns it to the OriginalPurchaseDatePst field.
func (o *LatestReceiptInfo) SetOriginalPurchaseDatePst(v string) {
	o.OriginalPurchaseDatePst.Set(&v)
}
// SetOriginalPurchaseDatePstNil sets the value for OriginalPurchaseDatePst to be an explicit nil
func (o *LatestReceiptInfo) SetOriginalPurchaseDatePstNil() {
	o.OriginalPurchaseDatePst.Set(nil)
}

// UnsetOriginalPurchaseDatePst ensures that no value is present for OriginalPurchaseDatePst, not even an explicit nil
func (o *LatestReceiptInfo) UnsetOriginalPurchaseDatePst() {
	o.OriginalPurchaseDatePst.Unset()
}

// GetExpiresDate returns the ExpiresDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetExpiresDate() string {
	if o == nil || IsNil(o.ExpiresDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiresDate.Get()
}

// GetExpiresDateOk returns a tuple with the ExpiresDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetExpiresDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresDate.Get(), o.ExpiresDate.IsSet()
}

// HasExpiresDate returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasExpiresDate() bool {
	if o != nil && o.ExpiresDate.IsSet() {
		return true
	}

	return false
}

// SetExpiresDate gets a reference to the given NullableString and assigns it to the ExpiresDate field.
func (o *LatestReceiptInfo) SetExpiresDate(v string) {
	o.ExpiresDate.Set(&v)
}
// SetExpiresDateNil sets the value for ExpiresDate to be an explicit nil
func (o *LatestReceiptInfo) SetExpiresDateNil() {
	o.ExpiresDate.Set(nil)
}

// UnsetExpiresDate ensures that no value is present for ExpiresDate, not even an explicit nil
func (o *LatestReceiptInfo) UnsetExpiresDate() {
	o.ExpiresDate.Unset()
}

// GetExpiresDateMs returns the ExpiresDateMs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetExpiresDateMs() string {
	if o == nil || IsNil(o.ExpiresDateMs.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiresDateMs.Get()
}

// GetExpiresDateMsOk returns a tuple with the ExpiresDateMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetExpiresDateMsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresDateMs.Get(), o.ExpiresDateMs.IsSet()
}

// HasExpiresDateMs returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasExpiresDateMs() bool {
	if o != nil && o.ExpiresDateMs.IsSet() {
		return true
	}

	return false
}

// SetExpiresDateMs gets a reference to the given NullableString and assigns it to the ExpiresDateMs field.
func (o *LatestReceiptInfo) SetExpiresDateMs(v string) {
	o.ExpiresDateMs.Set(&v)
}
// SetExpiresDateMsNil sets the value for ExpiresDateMs to be an explicit nil
func (o *LatestReceiptInfo) SetExpiresDateMsNil() {
	o.ExpiresDateMs.Set(nil)
}

// UnsetExpiresDateMs ensures that no value is present for ExpiresDateMs, not even an explicit nil
func (o *LatestReceiptInfo) UnsetExpiresDateMs() {
	o.ExpiresDateMs.Unset()
}

// GetExpiresDatePst returns the ExpiresDatePst field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetExpiresDatePst() string {
	if o == nil || IsNil(o.ExpiresDatePst.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiresDatePst.Get()
}

// GetExpiresDatePstOk returns a tuple with the ExpiresDatePst field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetExpiresDatePstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresDatePst.Get(), o.ExpiresDatePst.IsSet()
}

// HasExpiresDatePst returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasExpiresDatePst() bool {
	if o != nil && o.ExpiresDatePst.IsSet() {
		return true
	}

	return false
}

// SetExpiresDatePst gets a reference to the given NullableString and assigns it to the ExpiresDatePst field.
func (o *LatestReceiptInfo) SetExpiresDatePst(v string) {
	o.ExpiresDatePst.Set(&v)
}
// SetExpiresDatePstNil sets the value for ExpiresDatePst to be an explicit nil
func (o *LatestReceiptInfo) SetExpiresDatePstNil() {
	o.ExpiresDatePst.Set(nil)
}

// UnsetExpiresDatePst ensures that no value is present for ExpiresDatePst, not even an explicit nil
func (o *LatestReceiptInfo) UnsetExpiresDatePst() {
	o.ExpiresDatePst.Unset()
}

// GetWebOrderLineItemId returns the WebOrderLineItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetWebOrderLineItemId() string {
	if o == nil || IsNil(o.WebOrderLineItemId.Get()) {
		var ret string
		return ret
	}
	return *o.WebOrderLineItemId.Get()
}

// GetWebOrderLineItemIdOk returns a tuple with the WebOrderLineItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetWebOrderLineItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebOrderLineItemId.Get(), o.WebOrderLineItemId.IsSet()
}

// HasWebOrderLineItemId returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasWebOrderLineItemId() bool {
	if o != nil && o.WebOrderLineItemId.IsSet() {
		return true
	}

	return false
}

// SetWebOrderLineItemId gets a reference to the given NullableString and assigns it to the WebOrderLineItemId field.
func (o *LatestReceiptInfo) SetWebOrderLineItemId(v string) {
	o.WebOrderLineItemId.Set(&v)
}
// SetWebOrderLineItemIdNil sets the value for WebOrderLineItemId to be an explicit nil
func (o *LatestReceiptInfo) SetWebOrderLineItemIdNil() {
	o.WebOrderLineItemId.Set(nil)
}

// UnsetWebOrderLineItemId ensures that no value is present for WebOrderLineItemId, not even an explicit nil
func (o *LatestReceiptInfo) UnsetWebOrderLineItemId() {
	o.WebOrderLineItemId.Unset()
}

// GetIsTrialPeriod returns the IsTrialPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetIsTrialPeriod() string {
	if o == nil || IsNil(o.IsTrialPeriod.Get()) {
		var ret string
		return ret
	}
	return *o.IsTrialPeriod.Get()
}

// GetIsTrialPeriodOk returns a tuple with the IsTrialPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetIsTrialPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsTrialPeriod.Get(), o.IsTrialPeriod.IsSet()
}

// HasIsTrialPeriod returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasIsTrialPeriod() bool {
	if o != nil && o.IsTrialPeriod.IsSet() {
		return true
	}

	return false
}

// SetIsTrialPeriod gets a reference to the given NullableString and assigns it to the IsTrialPeriod field.
func (o *LatestReceiptInfo) SetIsTrialPeriod(v string) {
	o.IsTrialPeriod.Set(&v)
}
// SetIsTrialPeriodNil sets the value for IsTrialPeriod to be an explicit nil
func (o *LatestReceiptInfo) SetIsTrialPeriodNil() {
	o.IsTrialPeriod.Set(nil)
}

// UnsetIsTrialPeriod ensures that no value is present for IsTrialPeriod, not even an explicit nil
func (o *LatestReceiptInfo) UnsetIsTrialPeriod() {
	o.IsTrialPeriod.Unset()
}

// GetIsInIntroOfferPeriod returns the IsInIntroOfferPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LatestReceiptInfo) GetIsInIntroOfferPeriod() string {
	if o == nil || IsNil(o.IsInIntroOfferPeriod.Get()) {
		var ret string
		return ret
	}
	return *o.IsInIntroOfferPeriod.Get()
}

// GetIsInIntroOfferPeriodOk returns a tuple with the IsInIntroOfferPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LatestReceiptInfo) GetIsInIntroOfferPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsInIntroOfferPeriod.Get(), o.IsInIntroOfferPeriod.IsSet()
}

// HasIsInIntroOfferPeriod returns a boolean if a field has been set.
func (o *LatestReceiptInfo) HasIsInIntroOfferPeriod() bool {
	if o != nil && o.IsInIntroOfferPeriod.IsSet() {
		return true
	}

	return false
}

// SetIsInIntroOfferPeriod gets a reference to the given NullableString and assigns it to the IsInIntroOfferPeriod field.
func (o *LatestReceiptInfo) SetIsInIntroOfferPeriod(v string) {
	o.IsInIntroOfferPeriod.Set(&v)
}
// SetIsInIntroOfferPeriodNil sets the value for IsInIntroOfferPeriod to be an explicit nil
func (o *LatestReceiptInfo) SetIsInIntroOfferPeriodNil() {
	o.IsInIntroOfferPeriod.Set(nil)
}

// UnsetIsInIntroOfferPeriod ensures that no value is present for IsInIntroOfferPeriod, not even an explicit nil
func (o *LatestReceiptInfo) UnsetIsInIntroOfferPeriod() {
	o.IsInIntroOfferPeriod.Unset()
}

func (o LatestReceiptInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LatestReceiptInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Quantity.IsSet() {
		toSerialize["quantity"] = o.Quantity.Get()
	}
	if o.ProductId.IsSet() {
		toSerialize["product_id"] = o.ProductId.Get()
	}
	if o.TransactionId.IsSet() {
		toSerialize["transaction_id"] = o.TransactionId.Get()
	}
	if o.OriginalTransactionId.IsSet() {
		toSerialize["original_transaction_id"] = o.OriginalTransactionId.Get()
	}
	if o.PurchaseDate.IsSet() {
		toSerialize["purchase_date"] = o.PurchaseDate.Get()
	}
	if o.PurchaseDateMs.IsSet() {
		toSerialize["purchase_date_ms"] = o.PurchaseDateMs.Get()
	}
	if o.PurchaseDatePst.IsSet() {
		toSerialize["purchase_date_pst"] = o.PurchaseDatePst.Get()
	}
	if o.OriginalPurchaseDate.IsSet() {
		toSerialize["original_purchase_date"] = o.OriginalPurchaseDate.Get()
	}
	if o.OriginalPurchaseDateMs.IsSet() {
		toSerialize["original_purchase_date_ms"] = o.OriginalPurchaseDateMs.Get()
	}
	if o.OriginalPurchaseDatePst.IsSet() {
		toSerialize["original_purchase_date_pst"] = o.OriginalPurchaseDatePst.Get()
	}
	if o.ExpiresDate.IsSet() {
		toSerialize["expires_date"] = o.ExpiresDate.Get()
	}
	if o.ExpiresDateMs.IsSet() {
		toSerialize["expires_date_ms"] = o.ExpiresDateMs.Get()
	}
	if o.ExpiresDatePst.IsSet() {
		toSerialize["expires_date_pst"] = o.ExpiresDatePst.Get()
	}
	if o.WebOrderLineItemId.IsSet() {
		toSerialize["web_order_line_item_id"] = o.WebOrderLineItemId.Get()
	}
	if o.IsTrialPeriod.IsSet() {
		toSerialize["is_trial_period"] = o.IsTrialPeriod.Get()
	}
	if o.IsInIntroOfferPeriod.IsSet() {
		toSerialize["is_in_intro_offer_period"] = o.IsInIntroOfferPeriod.Get()
	}
	return toSerialize, nil
}

type NullableLatestReceiptInfo struct {
	value *LatestReceiptInfo
	isSet bool
}

func (v NullableLatestReceiptInfo) Get() *LatestReceiptInfo {
	return v.value
}

func (v *NullableLatestReceiptInfo) Set(val *LatestReceiptInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestReceiptInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestReceiptInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestReceiptInfo(val *LatestReceiptInfo) *NullableLatestReceiptInfo {
	return &NullableLatestReceiptInfo{value: val, isSet: true}
}

func (v NullableLatestReceiptInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestReceiptInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


