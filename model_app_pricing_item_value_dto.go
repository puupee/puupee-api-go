/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
	"time"
)

// checks if the AppPricingItemValueDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPricingItemValueDto{}

// AppPricingItemValueDto struct for AppPricingItemValueDto
type AppPricingItemValueDto struct {
	Id *string `json:"id,omitempty"`
	CreationTime *time.Time `json:"creationTime,omitempty"`
	CreatorId *string `json:"creatorId,omitempty"`
	LastModificationTime *time.Time `json:"lastModificationTime,omitempty"`
	LastModifierId *string `json:"lastModifierId,omitempty"`
	IsDeleted *bool `json:"isDeleted,omitempty"`
	DeleterId *string `json:"deleterId,omitempty"`
	DeletionTime *time.Time `json:"deletionTime,omitempty"`
	// 是否可用
	IsAvailable *bool `json:"isAvailable,omitempty"`
	// 是否有值
	HasValue *bool `json:"hasValue,omitempty"`
	IntValue *int64 `json:"intValue,omitempty"`
	StringValue *string `json:"stringValue,omitempty"`
	BoolValue *bool `json:"boolValue,omitempty"`
	// 数字值类型, FileSize: 文件大小, Count: 数目
	IntValueType *string `json:"intValueType,omitempty"`
}

// NewAppPricingItemValueDto instantiates a new AppPricingItemValueDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPricingItemValueDto() *AppPricingItemValueDto {
	this := AppPricingItemValueDto{}
	return &this
}

// NewAppPricingItemValueDtoWithDefaults instantiates a new AppPricingItemValueDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPricingItemValueDtoWithDefaults() *AppPricingItemValueDto {
	this := AppPricingItemValueDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AppPricingItemValueDto) SetId(v string) {
	o.Id = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *AppPricingItemValueDto) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *AppPricingItemValueDto) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModificationTime returns the LastModificationTime field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetLastModificationTime() time.Time {
	if o == nil || IsNil(o.LastModificationTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModificationTime
}

// GetLastModificationTimeOk returns a tuple with the LastModificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetLastModificationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModificationTime) {
		return nil, false
	}
	return o.LastModificationTime, true
}

// HasLastModificationTime returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasLastModificationTime() bool {
	if o != nil && !IsNil(o.LastModificationTime) {
		return true
	}

	return false
}

// SetLastModificationTime gets a reference to the given time.Time and assigns it to the LastModificationTime field.
func (o *AppPricingItemValueDto) SetLastModificationTime(v time.Time) {
	o.LastModificationTime = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *AppPricingItemValueDto) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *AppPricingItemValueDto) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetDeleterId returns the DeleterId field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetDeleterId() string {
	if o == nil || IsNil(o.DeleterId) {
		var ret string
		return ret
	}
	return *o.DeleterId
}

// GetDeleterIdOk returns a tuple with the DeleterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetDeleterIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeleterId) {
		return nil, false
	}
	return o.DeleterId, true
}

// HasDeleterId returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasDeleterId() bool {
	if o != nil && !IsNil(o.DeleterId) {
		return true
	}

	return false
}

// SetDeleterId gets a reference to the given string and assigns it to the DeleterId field.
func (o *AppPricingItemValueDto) SetDeleterId(v string) {
	o.DeleterId = &v
}

// GetDeletionTime returns the DeletionTime field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetDeletionTime() time.Time {
	if o == nil || IsNil(o.DeletionTime) {
		var ret time.Time
		return ret
	}
	return *o.DeletionTime
}

// GetDeletionTimeOk returns a tuple with the DeletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetDeletionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletionTime) {
		return nil, false
	}
	return o.DeletionTime, true
}

// HasDeletionTime returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasDeletionTime() bool {
	if o != nil && !IsNil(o.DeletionTime) {
		return true
	}

	return false
}

// SetDeletionTime gets a reference to the given time.Time and assigns it to the DeletionTime field.
func (o *AppPricingItemValueDto) SetDeletionTime(v time.Time) {
	o.DeletionTime = &v
}

// GetIsAvailable returns the IsAvailable field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetIsAvailable() bool {
	if o == nil || IsNil(o.IsAvailable) {
		var ret bool
		return ret
	}
	return *o.IsAvailable
}

// GetIsAvailableOk returns a tuple with the IsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetIsAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAvailable) {
		return nil, false
	}
	return o.IsAvailable, true
}

// HasIsAvailable returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasIsAvailable() bool {
	if o != nil && !IsNil(o.IsAvailable) {
		return true
	}

	return false
}

// SetIsAvailable gets a reference to the given bool and assigns it to the IsAvailable field.
func (o *AppPricingItemValueDto) SetIsAvailable(v bool) {
	o.IsAvailable = &v
}

// GetHasValue returns the HasValue field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetHasValue() bool {
	if o == nil || IsNil(o.HasValue) {
		var ret bool
		return ret
	}
	return *o.HasValue
}

// GetHasValueOk returns a tuple with the HasValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetHasValueOk() (*bool, bool) {
	if o == nil || IsNil(o.HasValue) {
		return nil, false
	}
	return o.HasValue, true
}

// HasHasValue returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasHasValue() bool {
	if o != nil && !IsNil(o.HasValue) {
		return true
	}

	return false
}

// SetHasValue gets a reference to the given bool and assigns it to the HasValue field.
func (o *AppPricingItemValueDto) SetHasValue(v bool) {
	o.HasValue = &v
}

// GetIntValue returns the IntValue field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetIntValue() int64 {
	if o == nil || IsNil(o.IntValue) {
		var ret int64
		return ret
	}
	return *o.IntValue
}

// GetIntValueOk returns a tuple with the IntValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetIntValueOk() (*int64, bool) {
	if o == nil || IsNil(o.IntValue) {
		return nil, false
	}
	return o.IntValue, true
}

// HasIntValue returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasIntValue() bool {
	if o != nil && !IsNil(o.IntValue) {
		return true
	}

	return false
}

// SetIntValue gets a reference to the given int64 and assigns it to the IntValue field.
func (o *AppPricingItemValueDto) SetIntValue(v int64) {
	o.IntValue = &v
}

// GetStringValue returns the StringValue field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetStringValue() string {
	if o == nil || IsNil(o.StringValue) {
		var ret string
		return ret
	}
	return *o.StringValue
}

// GetStringValueOk returns a tuple with the StringValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetStringValueOk() (*string, bool) {
	if o == nil || IsNil(o.StringValue) {
		return nil, false
	}
	return o.StringValue, true
}

// HasStringValue returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasStringValue() bool {
	if o != nil && !IsNil(o.StringValue) {
		return true
	}

	return false
}

// SetStringValue gets a reference to the given string and assigns it to the StringValue field.
func (o *AppPricingItemValueDto) SetStringValue(v string) {
	o.StringValue = &v
}

// GetBoolValue returns the BoolValue field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetBoolValue() bool {
	if o == nil || IsNil(o.BoolValue) {
		var ret bool
		return ret
	}
	return *o.BoolValue
}

// GetBoolValueOk returns a tuple with the BoolValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetBoolValueOk() (*bool, bool) {
	if o == nil || IsNil(o.BoolValue) {
		return nil, false
	}
	return o.BoolValue, true
}

// HasBoolValue returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasBoolValue() bool {
	if o != nil && !IsNil(o.BoolValue) {
		return true
	}

	return false
}

// SetBoolValue gets a reference to the given bool and assigns it to the BoolValue field.
func (o *AppPricingItemValueDto) SetBoolValue(v bool) {
	o.BoolValue = &v
}

// GetIntValueType returns the IntValueType field value if set, zero value otherwise.
func (o *AppPricingItemValueDto) GetIntValueType() string {
	if o == nil || IsNil(o.IntValueType) {
		var ret string
		return ret
	}
	return *o.IntValueType
}

// GetIntValueTypeOk returns a tuple with the IntValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricingItemValueDto) GetIntValueTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IntValueType) {
		return nil, false
	}
	return o.IntValueType, true
}

// HasIntValueType returns a boolean if a field has been set.
func (o *AppPricingItemValueDto) HasIntValueType() bool {
	if o != nil && !IsNil(o.IntValueType) {
		return true
	}

	return false
}

// SetIntValueType gets a reference to the given string and assigns it to the IntValueType field.
func (o *AppPricingItemValueDto) SetIntValueType(v string) {
	o.IntValueType = &v
}

func (o AppPricingItemValueDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPricingItemValueDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.LastModificationTime) {
		toSerialize["lastModificationTime"] = o.LastModificationTime
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if !IsNil(o.DeleterId) {
		toSerialize["deleterId"] = o.DeleterId
	}
	if !IsNil(o.DeletionTime) {
		toSerialize["deletionTime"] = o.DeletionTime
	}
	if !IsNil(o.IsAvailable) {
		toSerialize["isAvailable"] = o.IsAvailable
	}
	if !IsNil(o.HasValue) {
		toSerialize["hasValue"] = o.HasValue
	}
	if !IsNil(o.IntValue) {
		toSerialize["intValue"] = o.IntValue
	}
	if !IsNil(o.StringValue) {
		toSerialize["stringValue"] = o.StringValue
	}
	if !IsNil(o.BoolValue) {
		toSerialize["boolValue"] = o.BoolValue
	}
	if !IsNil(o.IntValueType) {
		toSerialize["intValueType"] = o.IntValueType
	}
	return toSerialize, nil
}

type NullableAppPricingItemValueDto struct {
	value *AppPricingItemValueDto
	isSet bool
}

func (v NullableAppPricingItemValueDto) Get() *AppPricingItemValueDto {
	return v.value
}

func (v *NullableAppPricingItemValueDto) Set(val *AppPricingItemValueDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPricingItemValueDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPricingItemValueDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPricingItemValueDto(val *AppPricingItemValueDto) *NullableAppPricingItemValueDto {
	return &NullableAppPricingItemValueDto{value: val, isSet: true}
}

func (v NullableAppPricingItemValueDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPricingItemValueDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


