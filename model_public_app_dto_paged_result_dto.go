/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// PublicAppDtoPagedResultDto struct for PublicAppDtoPagedResultDto
type PublicAppDtoPagedResultDto struct {
	Items []PublicAppDto `json:"items,omitempty"`
	TotalCount *int64 `json:"totalCount,omitempty"`
}

// NewPublicAppDtoPagedResultDto instantiates a new PublicAppDtoPagedResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicAppDtoPagedResultDto() *PublicAppDtoPagedResultDto {
	this := PublicAppDtoPagedResultDto{}
	return &this
}

// NewPublicAppDtoPagedResultDtoWithDefaults instantiates a new PublicAppDtoPagedResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicAppDtoPagedResultDtoWithDefaults() *PublicAppDtoPagedResultDto {
	this := PublicAppDtoPagedResultDto{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *PublicAppDtoPagedResultDto) GetItems() []PublicAppDto {
	if o == nil || isNil(o.Items) {
		var ret []PublicAppDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicAppDtoPagedResultDto) GetItemsOk() ([]PublicAppDto, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *PublicAppDtoPagedResultDto) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []PublicAppDto and assigns it to the Items field.
func (o *PublicAppDtoPagedResultDto) SetItems(v []PublicAppDto) {
	o.Items = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *PublicAppDtoPagedResultDto) GetTotalCount() int64 {
	if o == nil || isNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicAppDtoPagedResultDto) GetTotalCountOk() (*int64, bool) {
	if o == nil || isNil(o.TotalCount) {
    return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *PublicAppDtoPagedResultDto) HasTotalCount() bool {
	if o != nil && !isNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *PublicAppDtoPagedResultDto) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o PublicAppDtoPagedResultDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullablePublicAppDtoPagedResultDto struct {
	value *PublicAppDtoPagedResultDto
	isSet bool
}

func (v NullablePublicAppDtoPagedResultDto) Get() *PublicAppDtoPagedResultDto {
	return v.value
}

func (v *NullablePublicAppDtoPagedResultDto) Set(val *PublicAppDtoPagedResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicAppDtoPagedResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicAppDtoPagedResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicAppDtoPagedResultDto(val *PublicAppDtoPagedResultDto) *NullablePublicAppDtoPagedResultDto {
	return &NullablePublicAppDtoPagedResultDto{value: val, isSet: true}
}

func (v NullablePublicAppDtoPagedResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicAppDtoPagedResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


