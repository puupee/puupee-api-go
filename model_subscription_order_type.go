/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// SubscriptionOrderType struct for SubscriptionOrderType
type SubscriptionOrderType struct {
	Name *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewSubscriptionOrderType instantiates a new SubscriptionOrderType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionOrderType() *SubscriptionOrderType {
	this := SubscriptionOrderType{}
	return &this
}

// NewSubscriptionOrderTypeWithDefaults instantiates a new SubscriptionOrderType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionOrderTypeWithDefaults() *SubscriptionOrderType {
	this := SubscriptionOrderType{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SubscriptionOrderType) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionOrderType) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SubscriptionOrderType) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SubscriptionOrderType) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SubscriptionOrderType) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionOrderType) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SubscriptionOrderType) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *SubscriptionOrderType) SetValue(v string) {
	o.Value = &v
}

func (o SubscriptionOrderType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionOrderType struct {
	value *SubscriptionOrderType
	isSet bool
}

func (v NullableSubscriptionOrderType) Get() *SubscriptionOrderType {
	return v.value
}

func (v *NullableSubscriptionOrderType) Set(val *SubscriptionOrderType) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionOrderType) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionOrderType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionOrderType(val *SubscriptionOrderType) *NullableSubscriptionOrderType {
	return &NullableSubscriptionOrderType{value: val, isSet: true}
}

func (v NullableSubscriptionOrderType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionOrderType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


