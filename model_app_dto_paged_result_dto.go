/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.17.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
)

// checks if the AppDtoPagedResultDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppDtoPagedResultDto{}

// AppDtoPagedResultDto struct for AppDtoPagedResultDto
type AppDtoPagedResultDto struct {
	Items []AppDto `json:"items,omitempty"`
	TotalCount *int64 `json:"totalCount,omitempty"`
}

// NewAppDtoPagedResultDto instantiates a new AppDtoPagedResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppDtoPagedResultDto() *AppDtoPagedResultDto {
	this := AppDtoPagedResultDto{}
	return &this
}

// NewAppDtoPagedResultDtoWithDefaults instantiates a new AppDtoPagedResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppDtoPagedResultDtoWithDefaults() *AppDtoPagedResultDto {
	this := AppDtoPagedResultDto{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AppDtoPagedResultDto) GetItems() []AppDto {
	if o == nil || IsNil(o.Items) {
		var ret []AppDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDtoPagedResultDto) GetItemsOk() ([]AppDto, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AppDtoPagedResultDto) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AppDto and assigns it to the Items field.
func (o *AppDtoPagedResultDto) SetItems(v []AppDto) {
	o.Items = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *AppDtoPagedResultDto) GetTotalCount() int64 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDtoPagedResultDto) GetTotalCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *AppDtoPagedResultDto) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *AppDtoPagedResultDto) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o AppDtoPagedResultDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppDtoPagedResultDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableAppDtoPagedResultDto struct {
	value *AppDtoPagedResultDto
	isSet bool
}

func (v NullableAppDtoPagedResultDto) Get() *AppDtoPagedResultDto {
	return v.value
}

func (v *NullableAppDtoPagedResultDto) Set(val *AppDtoPagedResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAppDtoPagedResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAppDtoPagedResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppDtoPagedResultDto(val *AppDtoPagedResultDto) *NullableAppDtoPagedResultDto {
	return &NullableAppDtoPagedResultDto{value: val, isSet: true}
}

func (v NullableAppDtoPagedResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppDtoPagedResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


