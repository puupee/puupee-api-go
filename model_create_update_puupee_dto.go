/*
Puupee API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package puupee

import (
	"encoding/json"
	"time"
)

// CreateUpdatePuupeeDto struct for CreateUpdatePuupeeDto
type CreateUpdatePuupeeDto struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Title *string `json:"title,omitempty"`
	IsHidden *bool `json:"isHidden,omitempty"`
	Description *string `json:"description,omitempty"`
	Text *string `json:"text,omitempty"`
	Format *string `json:"format,omitempty"`
	Password *string `json:"password,omitempty"`
	ParentId *string `json:"parentId,omitempty"`
	Key *string `json:"key,omitempty"`
	Md5 *string `json:"md5,omitempty"`
	SliceMd5 *string `json:"sliceMd5,omitempty"`
	RapidCode *string `json:"rapidCode,omitempty"`
	ContentType *string `json:"contentType,omitempty"`
	Type *string `json:"type,omitempty"`
	DisplayStyle *string `json:"displayStyle,omitempty"`
	Extension *string `json:"extension,omitempty"`
	StorageClass *string `json:"storageClass,omitempty"`
	StorageObjectCreatedAt *time.Time `json:"storageObjectCreatedAt,omitempty"`
	StorageObjectUpdatedAt *time.Time `json:"storageObjectUpdatedAt,omitempty"`
	SyncVersion *int64 `json:"syncVersion,omitempty"`
	IsDeleted *bool `json:"isDeleted,omitempty"`
	DeletionTime *time.Time `json:"deletionTime,omitempty"`
	CreationTime *time.Time `json:"creationTime,omitempty"`
	LastModificationTime *time.Time `json:"lastModificationTime,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	StartAt *time.Time `json:"startAt,omitempty"`
	EndAt *time.Time `json:"endAt,omitempty"`
	NotifyAt *time.Time `json:"notifyAt,omitempty"`
	NotifyTimingType *string `json:"notifyTimingType,omitempty"`
	NotifyTimingUnit *string `json:"notifyTimingUnit,omitempty"`
	NotifyTimingValue *int32 `json:"notifyTimingValue,omitempty"`
	Repeat *string `json:"repeat,omitempty"`
	RepeatOffAt *time.Time `json:"repeatOffAt,omitempty"`
	RepeatOffTimes *int32 `json:"repeatOffTimes,omitempty"`
	IsDone *bool `json:"isDone,omitempty"`
	DoneAt *time.Time `json:"doneAt,omitempty"`
	CreatorId *string `json:"creatorId,omitempty"`
	LastModifierId *string `json:"lastModifierId,omitempty"`
	DeleterId *string `json:"deleterId,omitempty"`
	Tagging *string `json:"tagging,omitempty"`
	Url *string `json:"url,omitempty"`
	Size *int64 `json:"size,omitempty"`
	LastModifierDeviceToken *string `json:"lastModifierDeviceToken,omitempty"`
}

// NewCreateUpdatePuupeeDto instantiates a new CreateUpdatePuupeeDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpdatePuupeeDto(id string, name string) *CreateUpdatePuupeeDto {
	this := CreateUpdatePuupeeDto{}
	this.Id = id
	this.Name = name
	return &this
}

// NewCreateUpdatePuupeeDtoWithDefaults instantiates a new CreateUpdatePuupeeDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpdatePuupeeDtoWithDefaults() *CreateUpdatePuupeeDto {
	this := CreateUpdatePuupeeDto{}
	return &this
}

// GetId returns the Id field value
func (o *CreateUpdatePuupeeDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateUpdatePuupeeDto) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CreateUpdatePuupeeDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateUpdatePuupeeDto) SetName(v string) {
	o.Name = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetTitle() string {
	if o == nil || isNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetTitleOk() (*string, bool) {
	if o == nil || isNil(o.Title) {
    return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasTitle() bool {
	if o != nil && !isNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateUpdatePuupeeDto) SetTitle(v string) {
	o.Title = &v
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetIsHidden() bool {
	if o == nil || isNil(o.IsHidden) {
		var ret bool
		return ret
	}
	return *o.IsHidden
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetIsHiddenOk() (*bool, bool) {
	if o == nil || isNil(o.IsHidden) {
    return nil, false
	}
	return o.IsHidden, true
}

// HasIsHidden returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasIsHidden() bool {
	if o != nil && !isNil(o.IsHidden) {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given bool and assigns it to the IsHidden field.
func (o *CreateUpdatePuupeeDto) SetIsHidden(v bool) {
	o.IsHidden = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateUpdatePuupeeDto) SetDescription(v string) {
	o.Description = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetText() string {
	if o == nil || isNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetTextOk() (*string, bool) {
	if o == nil || isNil(o.Text) {
    return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasText() bool {
	if o != nil && !isNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *CreateUpdatePuupeeDto) SetText(v string) {
	o.Text = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetFormat() string {
	if o == nil || isNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetFormatOk() (*string, bool) {
	if o == nil || isNil(o.Format) {
    return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasFormat() bool {
	if o != nil && !isNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *CreateUpdatePuupeeDto) SetFormat(v string) {
	o.Format = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateUpdatePuupeeDto) SetPassword(v string) {
	o.Password = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetParentId() string {
	if o == nil || isNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetParentIdOk() (*string, bool) {
	if o == nil || isNil(o.ParentId) {
    return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasParentId() bool {
	if o != nil && !isNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *CreateUpdatePuupeeDto) SetParentId(v string) {
	o.ParentId = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetKey() string {
	if o == nil || isNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetKeyOk() (*string, bool) {
	if o == nil || isNil(o.Key) {
    return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CreateUpdatePuupeeDto) SetKey(v string) {
	o.Key = &v
}

// GetMd5 returns the Md5 field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetMd5() string {
	if o == nil || isNil(o.Md5) {
		var ret string
		return ret
	}
	return *o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetMd5Ok() (*string, bool) {
	if o == nil || isNil(o.Md5) {
    return nil, false
	}
	return o.Md5, true
}

// HasMd5 returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasMd5() bool {
	if o != nil && !isNil(o.Md5) {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given string and assigns it to the Md5 field.
func (o *CreateUpdatePuupeeDto) SetMd5(v string) {
	o.Md5 = &v
}

// GetSliceMd5 returns the SliceMd5 field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetSliceMd5() string {
	if o == nil || isNil(o.SliceMd5) {
		var ret string
		return ret
	}
	return *o.SliceMd5
}

// GetSliceMd5Ok returns a tuple with the SliceMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetSliceMd5Ok() (*string, bool) {
	if o == nil || isNil(o.SliceMd5) {
    return nil, false
	}
	return o.SliceMd5, true
}

// HasSliceMd5 returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasSliceMd5() bool {
	if o != nil && !isNil(o.SliceMd5) {
		return true
	}

	return false
}

// SetSliceMd5 gets a reference to the given string and assigns it to the SliceMd5 field.
func (o *CreateUpdatePuupeeDto) SetSliceMd5(v string) {
	o.SliceMd5 = &v
}

// GetRapidCode returns the RapidCode field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetRapidCode() string {
	if o == nil || isNil(o.RapidCode) {
		var ret string
		return ret
	}
	return *o.RapidCode
}

// GetRapidCodeOk returns a tuple with the RapidCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetRapidCodeOk() (*string, bool) {
	if o == nil || isNil(o.RapidCode) {
    return nil, false
	}
	return o.RapidCode, true
}

// HasRapidCode returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasRapidCode() bool {
	if o != nil && !isNil(o.RapidCode) {
		return true
	}

	return false
}

// SetRapidCode gets a reference to the given string and assigns it to the RapidCode field.
func (o *CreateUpdatePuupeeDto) SetRapidCode(v string) {
	o.RapidCode = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetContentType() string {
	if o == nil || isNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetContentTypeOk() (*string, bool) {
	if o == nil || isNil(o.ContentType) {
    return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasContentType() bool {
	if o != nil && !isNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *CreateUpdatePuupeeDto) SetContentType(v string) {
	o.ContentType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateUpdatePuupeeDto) SetType(v string) {
	o.Type = &v
}

// GetDisplayStyle returns the DisplayStyle field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetDisplayStyle() string {
	if o == nil || isNil(o.DisplayStyle) {
		var ret string
		return ret
	}
	return *o.DisplayStyle
}

// GetDisplayStyleOk returns a tuple with the DisplayStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetDisplayStyleOk() (*string, bool) {
	if o == nil || isNil(o.DisplayStyle) {
    return nil, false
	}
	return o.DisplayStyle, true
}

// HasDisplayStyle returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasDisplayStyle() bool {
	if o != nil && !isNil(o.DisplayStyle) {
		return true
	}

	return false
}

// SetDisplayStyle gets a reference to the given string and assigns it to the DisplayStyle field.
func (o *CreateUpdatePuupeeDto) SetDisplayStyle(v string) {
	o.DisplayStyle = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetExtension() string {
	if o == nil || isNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetExtensionOk() (*string, bool) {
	if o == nil || isNil(o.Extension) {
    return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasExtension() bool {
	if o != nil && !isNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *CreateUpdatePuupeeDto) SetExtension(v string) {
	o.Extension = &v
}

// GetStorageClass returns the StorageClass field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetStorageClass() string {
	if o == nil || isNil(o.StorageClass) {
		var ret string
		return ret
	}
	return *o.StorageClass
}

// GetStorageClassOk returns a tuple with the StorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetStorageClassOk() (*string, bool) {
	if o == nil || isNil(o.StorageClass) {
    return nil, false
	}
	return o.StorageClass, true
}

// HasStorageClass returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasStorageClass() bool {
	if o != nil && !isNil(o.StorageClass) {
		return true
	}

	return false
}

// SetStorageClass gets a reference to the given string and assigns it to the StorageClass field.
func (o *CreateUpdatePuupeeDto) SetStorageClass(v string) {
	o.StorageClass = &v
}

// GetStorageObjectCreatedAt returns the StorageObjectCreatedAt field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetStorageObjectCreatedAt() time.Time {
	if o == nil || isNil(o.StorageObjectCreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.StorageObjectCreatedAt
}

// GetStorageObjectCreatedAtOk returns a tuple with the StorageObjectCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetStorageObjectCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.StorageObjectCreatedAt) {
    return nil, false
	}
	return o.StorageObjectCreatedAt, true
}

// HasStorageObjectCreatedAt returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasStorageObjectCreatedAt() bool {
	if o != nil && !isNil(o.StorageObjectCreatedAt) {
		return true
	}

	return false
}

// SetStorageObjectCreatedAt gets a reference to the given time.Time and assigns it to the StorageObjectCreatedAt field.
func (o *CreateUpdatePuupeeDto) SetStorageObjectCreatedAt(v time.Time) {
	o.StorageObjectCreatedAt = &v
}

// GetStorageObjectUpdatedAt returns the StorageObjectUpdatedAt field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetStorageObjectUpdatedAt() time.Time {
	if o == nil || isNil(o.StorageObjectUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.StorageObjectUpdatedAt
}

// GetStorageObjectUpdatedAtOk returns a tuple with the StorageObjectUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetStorageObjectUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.StorageObjectUpdatedAt) {
    return nil, false
	}
	return o.StorageObjectUpdatedAt, true
}

// HasStorageObjectUpdatedAt returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasStorageObjectUpdatedAt() bool {
	if o != nil && !isNil(o.StorageObjectUpdatedAt) {
		return true
	}

	return false
}

// SetStorageObjectUpdatedAt gets a reference to the given time.Time and assigns it to the StorageObjectUpdatedAt field.
func (o *CreateUpdatePuupeeDto) SetStorageObjectUpdatedAt(v time.Time) {
	o.StorageObjectUpdatedAt = &v
}

// GetSyncVersion returns the SyncVersion field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetSyncVersion() int64 {
	if o == nil || isNil(o.SyncVersion) {
		var ret int64
		return ret
	}
	return *o.SyncVersion
}

// GetSyncVersionOk returns a tuple with the SyncVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetSyncVersionOk() (*int64, bool) {
	if o == nil || isNil(o.SyncVersion) {
    return nil, false
	}
	return o.SyncVersion, true
}

// HasSyncVersion returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasSyncVersion() bool {
	if o != nil && !isNil(o.SyncVersion) {
		return true
	}

	return false
}

// SetSyncVersion gets a reference to the given int64 and assigns it to the SyncVersion field.
func (o *CreateUpdatePuupeeDto) SetSyncVersion(v int64) {
	o.SyncVersion = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetIsDeleted() bool {
	if o == nil || isNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetIsDeletedOk() (*bool, bool) {
	if o == nil || isNil(o.IsDeleted) {
    return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasIsDeleted() bool {
	if o != nil && !isNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *CreateUpdatePuupeeDto) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetDeletionTime returns the DeletionTime field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetDeletionTime() time.Time {
	if o == nil || isNil(o.DeletionTime) {
		var ret time.Time
		return ret
	}
	return *o.DeletionTime
}

// GetDeletionTimeOk returns a tuple with the DeletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetDeletionTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.DeletionTime) {
    return nil, false
	}
	return o.DeletionTime, true
}

// HasDeletionTime returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasDeletionTime() bool {
	if o != nil && !isNil(o.DeletionTime) {
		return true
	}

	return false
}

// SetDeletionTime gets a reference to the given time.Time and assigns it to the DeletionTime field.
func (o *CreateUpdatePuupeeDto) SetDeletionTime(v time.Time) {
	o.DeletionTime = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetCreationTime() time.Time {
	if o == nil || isNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreationTime) {
    return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasCreationTime() bool {
	if o != nil && !isNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *CreateUpdatePuupeeDto) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetLastModificationTime returns the LastModificationTime field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetLastModificationTime() time.Time {
	if o == nil || isNil(o.LastModificationTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModificationTime
}

// GetLastModificationTimeOk returns a tuple with the LastModificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetLastModificationTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastModificationTime) {
    return nil, false
	}
	return o.LastModificationTime, true
}

// HasLastModificationTime returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasLastModificationTime() bool {
	if o != nil && !isNil(o.LastModificationTime) {
		return true
	}

	return false
}

// SetLastModificationTime gets a reference to the given time.Time and assigns it to the LastModificationTime field.
func (o *CreateUpdatePuupeeDto) SetLastModificationTime(v time.Time) {
	o.LastModificationTime = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetPriority() int32 {
	if o == nil || isNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetPriorityOk() (*int32, bool) {
	if o == nil || isNil(o.Priority) {
    return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasPriority() bool {
	if o != nil && !isNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *CreateUpdatePuupeeDto) SetPriority(v int32) {
	o.Priority = &v
}

// GetStartAt returns the StartAt field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetStartAt() time.Time {
	if o == nil || isNil(o.StartAt) {
		var ret time.Time
		return ret
	}
	return *o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetStartAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.StartAt) {
    return nil, false
	}
	return o.StartAt, true
}

// HasStartAt returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasStartAt() bool {
	if o != nil && !isNil(o.StartAt) {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given time.Time and assigns it to the StartAt field.
func (o *CreateUpdatePuupeeDto) SetStartAt(v time.Time) {
	o.StartAt = &v
}

// GetEndAt returns the EndAt field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetEndAt() time.Time {
	if o == nil || isNil(o.EndAt) {
		var ret time.Time
		return ret
	}
	return *o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetEndAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.EndAt) {
    return nil, false
	}
	return o.EndAt, true
}

// HasEndAt returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasEndAt() bool {
	if o != nil && !isNil(o.EndAt) {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given time.Time and assigns it to the EndAt field.
func (o *CreateUpdatePuupeeDto) SetEndAt(v time.Time) {
	o.EndAt = &v
}

// GetNotifyAt returns the NotifyAt field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetNotifyAt() time.Time {
	if o == nil || isNil(o.NotifyAt) {
		var ret time.Time
		return ret
	}
	return *o.NotifyAt
}

// GetNotifyAtOk returns a tuple with the NotifyAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetNotifyAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotifyAt) {
    return nil, false
	}
	return o.NotifyAt, true
}

// HasNotifyAt returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasNotifyAt() bool {
	if o != nil && !isNil(o.NotifyAt) {
		return true
	}

	return false
}

// SetNotifyAt gets a reference to the given time.Time and assigns it to the NotifyAt field.
func (o *CreateUpdatePuupeeDto) SetNotifyAt(v time.Time) {
	o.NotifyAt = &v
}

// GetNotifyTimingType returns the NotifyTimingType field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetNotifyTimingType() string {
	if o == nil || isNil(o.NotifyTimingType) {
		var ret string
		return ret
	}
	return *o.NotifyTimingType
}

// GetNotifyTimingTypeOk returns a tuple with the NotifyTimingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetNotifyTimingTypeOk() (*string, bool) {
	if o == nil || isNil(o.NotifyTimingType) {
    return nil, false
	}
	return o.NotifyTimingType, true
}

// HasNotifyTimingType returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasNotifyTimingType() bool {
	if o != nil && !isNil(o.NotifyTimingType) {
		return true
	}

	return false
}

// SetNotifyTimingType gets a reference to the given string and assigns it to the NotifyTimingType field.
func (o *CreateUpdatePuupeeDto) SetNotifyTimingType(v string) {
	o.NotifyTimingType = &v
}

// GetNotifyTimingUnit returns the NotifyTimingUnit field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetNotifyTimingUnit() string {
	if o == nil || isNil(o.NotifyTimingUnit) {
		var ret string
		return ret
	}
	return *o.NotifyTimingUnit
}

// GetNotifyTimingUnitOk returns a tuple with the NotifyTimingUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetNotifyTimingUnitOk() (*string, bool) {
	if o == nil || isNil(o.NotifyTimingUnit) {
    return nil, false
	}
	return o.NotifyTimingUnit, true
}

// HasNotifyTimingUnit returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasNotifyTimingUnit() bool {
	if o != nil && !isNil(o.NotifyTimingUnit) {
		return true
	}

	return false
}

// SetNotifyTimingUnit gets a reference to the given string and assigns it to the NotifyTimingUnit field.
func (o *CreateUpdatePuupeeDto) SetNotifyTimingUnit(v string) {
	o.NotifyTimingUnit = &v
}

// GetNotifyTimingValue returns the NotifyTimingValue field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetNotifyTimingValue() int32 {
	if o == nil || isNil(o.NotifyTimingValue) {
		var ret int32
		return ret
	}
	return *o.NotifyTimingValue
}

// GetNotifyTimingValueOk returns a tuple with the NotifyTimingValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetNotifyTimingValueOk() (*int32, bool) {
	if o == nil || isNil(o.NotifyTimingValue) {
    return nil, false
	}
	return o.NotifyTimingValue, true
}

// HasNotifyTimingValue returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasNotifyTimingValue() bool {
	if o != nil && !isNil(o.NotifyTimingValue) {
		return true
	}

	return false
}

// SetNotifyTimingValue gets a reference to the given int32 and assigns it to the NotifyTimingValue field.
func (o *CreateUpdatePuupeeDto) SetNotifyTimingValue(v int32) {
	o.NotifyTimingValue = &v
}

// GetRepeat returns the Repeat field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetRepeat() string {
	if o == nil || isNil(o.Repeat) {
		var ret string
		return ret
	}
	return *o.Repeat
}

// GetRepeatOk returns a tuple with the Repeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetRepeatOk() (*string, bool) {
	if o == nil || isNil(o.Repeat) {
    return nil, false
	}
	return o.Repeat, true
}

// HasRepeat returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasRepeat() bool {
	if o != nil && !isNil(o.Repeat) {
		return true
	}

	return false
}

// SetRepeat gets a reference to the given string and assigns it to the Repeat field.
func (o *CreateUpdatePuupeeDto) SetRepeat(v string) {
	o.Repeat = &v
}

// GetRepeatOffAt returns the RepeatOffAt field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetRepeatOffAt() time.Time {
	if o == nil || isNil(o.RepeatOffAt) {
		var ret time.Time
		return ret
	}
	return *o.RepeatOffAt
}

// GetRepeatOffAtOk returns a tuple with the RepeatOffAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetRepeatOffAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.RepeatOffAt) {
    return nil, false
	}
	return o.RepeatOffAt, true
}

// HasRepeatOffAt returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasRepeatOffAt() bool {
	if o != nil && !isNil(o.RepeatOffAt) {
		return true
	}

	return false
}

// SetRepeatOffAt gets a reference to the given time.Time and assigns it to the RepeatOffAt field.
func (o *CreateUpdatePuupeeDto) SetRepeatOffAt(v time.Time) {
	o.RepeatOffAt = &v
}

// GetRepeatOffTimes returns the RepeatOffTimes field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetRepeatOffTimes() int32 {
	if o == nil || isNil(o.RepeatOffTimes) {
		var ret int32
		return ret
	}
	return *o.RepeatOffTimes
}

// GetRepeatOffTimesOk returns a tuple with the RepeatOffTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetRepeatOffTimesOk() (*int32, bool) {
	if o == nil || isNil(o.RepeatOffTimes) {
    return nil, false
	}
	return o.RepeatOffTimes, true
}

// HasRepeatOffTimes returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasRepeatOffTimes() bool {
	if o != nil && !isNil(o.RepeatOffTimes) {
		return true
	}

	return false
}

// SetRepeatOffTimes gets a reference to the given int32 and assigns it to the RepeatOffTimes field.
func (o *CreateUpdatePuupeeDto) SetRepeatOffTimes(v int32) {
	o.RepeatOffTimes = &v
}

// GetIsDone returns the IsDone field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetIsDone() bool {
	if o == nil || isNil(o.IsDone) {
		var ret bool
		return ret
	}
	return *o.IsDone
}

// GetIsDoneOk returns a tuple with the IsDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetIsDoneOk() (*bool, bool) {
	if o == nil || isNil(o.IsDone) {
    return nil, false
	}
	return o.IsDone, true
}

// HasIsDone returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasIsDone() bool {
	if o != nil && !isNil(o.IsDone) {
		return true
	}

	return false
}

// SetIsDone gets a reference to the given bool and assigns it to the IsDone field.
func (o *CreateUpdatePuupeeDto) SetIsDone(v bool) {
	o.IsDone = &v
}

// GetDoneAt returns the DoneAt field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetDoneAt() time.Time {
	if o == nil || isNil(o.DoneAt) {
		var ret time.Time
		return ret
	}
	return *o.DoneAt
}

// GetDoneAtOk returns a tuple with the DoneAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetDoneAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.DoneAt) {
    return nil, false
	}
	return o.DoneAt, true
}

// HasDoneAt returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasDoneAt() bool {
	if o != nil && !isNil(o.DoneAt) {
		return true
	}

	return false
}

// SetDoneAt gets a reference to the given time.Time and assigns it to the DoneAt field.
func (o *CreateUpdatePuupeeDto) SetDoneAt(v time.Time) {
	o.DoneAt = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetCreatorId() string {
	if o == nil || isNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetCreatorIdOk() (*string, bool) {
	if o == nil || isNil(o.CreatorId) {
    return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasCreatorId() bool {
	if o != nil && !isNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CreateUpdatePuupeeDto) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetLastModifierId() string {
	if o == nil || isNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetLastModifierIdOk() (*string, bool) {
	if o == nil || isNil(o.LastModifierId) {
    return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasLastModifierId() bool {
	if o != nil && !isNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *CreateUpdatePuupeeDto) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetDeleterId returns the DeleterId field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetDeleterId() string {
	if o == nil || isNil(o.DeleterId) {
		var ret string
		return ret
	}
	return *o.DeleterId
}

// GetDeleterIdOk returns a tuple with the DeleterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetDeleterIdOk() (*string, bool) {
	if o == nil || isNil(o.DeleterId) {
    return nil, false
	}
	return o.DeleterId, true
}

// HasDeleterId returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasDeleterId() bool {
	if o != nil && !isNil(o.DeleterId) {
		return true
	}

	return false
}

// SetDeleterId gets a reference to the given string and assigns it to the DeleterId field.
func (o *CreateUpdatePuupeeDto) SetDeleterId(v string) {
	o.DeleterId = &v
}

// GetTagging returns the Tagging field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetTagging() string {
	if o == nil || isNil(o.Tagging) {
		var ret string
		return ret
	}
	return *o.Tagging
}

// GetTaggingOk returns a tuple with the Tagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetTaggingOk() (*string, bool) {
	if o == nil || isNil(o.Tagging) {
    return nil, false
	}
	return o.Tagging, true
}

// HasTagging returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasTagging() bool {
	if o != nil && !isNil(o.Tagging) {
		return true
	}

	return false
}

// SetTagging gets a reference to the given string and assigns it to the Tagging field.
func (o *CreateUpdatePuupeeDto) SetTagging(v string) {
	o.Tagging = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CreateUpdatePuupeeDto) SetUrl(v string) {
	o.Url = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetSize() int64 {
	if o == nil || isNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetSizeOk() (*int64, bool) {
	if o == nil || isNil(o.Size) {
    return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasSize() bool {
	if o != nil && !isNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *CreateUpdatePuupeeDto) SetSize(v int64) {
	o.Size = &v
}

// GetLastModifierDeviceToken returns the LastModifierDeviceToken field value if set, zero value otherwise.
func (o *CreateUpdatePuupeeDto) GetLastModifierDeviceToken() string {
	if o == nil || isNil(o.LastModifierDeviceToken) {
		var ret string
		return ret
	}
	return *o.LastModifierDeviceToken
}

// GetLastModifierDeviceTokenOk returns a tuple with the LastModifierDeviceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePuupeeDto) GetLastModifierDeviceTokenOk() (*string, bool) {
	if o == nil || isNil(o.LastModifierDeviceToken) {
    return nil, false
	}
	return o.LastModifierDeviceToken, true
}

// HasLastModifierDeviceToken returns a boolean if a field has been set.
func (o *CreateUpdatePuupeeDto) HasLastModifierDeviceToken() bool {
	if o != nil && !isNil(o.LastModifierDeviceToken) {
		return true
	}

	return false
}

// SetLastModifierDeviceToken gets a reference to the given string and assigns it to the LastModifierDeviceToken field.
func (o *CreateUpdatePuupeeDto) SetLastModifierDeviceToken(v string) {
	o.LastModifierDeviceToken = &v
}

func (o CreateUpdatePuupeeDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.IsHidden) {
		toSerialize["isHidden"] = o.IsHidden
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !isNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !isNil(o.Md5) {
		toSerialize["md5"] = o.Md5
	}
	if !isNil(o.SliceMd5) {
		toSerialize["sliceMd5"] = o.SliceMd5
	}
	if !isNil(o.RapidCode) {
		toSerialize["rapidCode"] = o.RapidCode
	}
	if !isNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.DisplayStyle) {
		toSerialize["displayStyle"] = o.DisplayStyle
	}
	if !isNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !isNil(o.StorageClass) {
		toSerialize["storageClass"] = o.StorageClass
	}
	if !isNil(o.StorageObjectCreatedAt) {
		toSerialize["storageObjectCreatedAt"] = o.StorageObjectCreatedAt
	}
	if !isNil(o.StorageObjectUpdatedAt) {
		toSerialize["storageObjectUpdatedAt"] = o.StorageObjectUpdatedAt
	}
	if !isNil(o.SyncVersion) {
		toSerialize["syncVersion"] = o.SyncVersion
	}
	if !isNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if !isNil(o.DeletionTime) {
		toSerialize["deletionTime"] = o.DeletionTime
	}
	if !isNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if !isNil(o.LastModificationTime) {
		toSerialize["lastModificationTime"] = o.LastModificationTime
	}
	if !isNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !isNil(o.StartAt) {
		toSerialize["startAt"] = o.StartAt
	}
	if !isNil(o.EndAt) {
		toSerialize["endAt"] = o.EndAt
	}
	if !isNil(o.NotifyAt) {
		toSerialize["notifyAt"] = o.NotifyAt
	}
	if !isNil(o.NotifyTimingType) {
		toSerialize["notifyTimingType"] = o.NotifyTimingType
	}
	if !isNil(o.NotifyTimingUnit) {
		toSerialize["notifyTimingUnit"] = o.NotifyTimingUnit
	}
	if !isNil(o.NotifyTimingValue) {
		toSerialize["notifyTimingValue"] = o.NotifyTimingValue
	}
	if !isNil(o.Repeat) {
		toSerialize["repeat"] = o.Repeat
	}
	if !isNil(o.RepeatOffAt) {
		toSerialize["repeatOffAt"] = o.RepeatOffAt
	}
	if !isNil(o.RepeatOffTimes) {
		toSerialize["repeatOffTimes"] = o.RepeatOffTimes
	}
	if !isNil(o.IsDone) {
		toSerialize["isDone"] = o.IsDone
	}
	if !isNil(o.DoneAt) {
		toSerialize["doneAt"] = o.DoneAt
	}
	if !isNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !isNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !isNil(o.DeleterId) {
		toSerialize["deleterId"] = o.DeleterId
	}
	if !isNil(o.Tagging) {
		toSerialize["tagging"] = o.Tagging
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !isNil(o.LastModifierDeviceToken) {
		toSerialize["lastModifierDeviceToken"] = o.LastModifierDeviceToken
	}
	return json.Marshal(toSerialize)
}

type NullableCreateUpdatePuupeeDto struct {
	value *CreateUpdatePuupeeDto
	isSet bool
}

func (v NullableCreateUpdatePuupeeDto) Get() *CreateUpdatePuupeeDto {
	return v.value
}

func (v *NullableCreateUpdatePuupeeDto) Set(val *CreateUpdatePuupeeDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpdatePuupeeDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpdatePuupeeDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpdatePuupeeDto(val *CreateUpdatePuupeeDto) *NullableCreateUpdatePuupeeDto {
	return &NullableCreateUpdatePuupeeDto{value: val, isSet: true}
}

func (v NullableCreateUpdatePuupeeDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpdatePuupeeDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


